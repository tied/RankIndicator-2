ProjectName;Key;title_desc;Created;Priority;Storypoint;P;S;R
SERVER;SERVER-46887;use threshold 0 selected_tests_gen part ofhttps jira mongodb org browse tig 2412 determined best threshold use 0 server engineer know threshold used determine tasks run selected tests 0 since threshold accurately captures tasks run based code changes ac threshold set 0in selected_tests_gen https github com mongodb mongo blob 36ae8a4824a88bd49ab5fa62740419c10c6bc39d buildscripts selected_tests py#l56;2020-03-16T14:18:59.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-46983;upload repobuilding packages correct url barque service needs packages uploaded s3 run repobuilding job;2020-03-19T13:29:27.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-44874;windows mongo shell included hang analyzer particular bf im investigating failed branches 3 6 4 0 4 2 master hang analyzer finds interesting processes python exe mongobridge exe mongod exe mongo exe particular bf believe hanging process actually shell case would helpful shell process stack traces see linked bf examples note first bf actually mongo exe hang analysis output believe incorrectly linked dup bfgs ones look;2019-11-27T18:59:20.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-45267;complete todo listed tig 1506 todo codebase referencing resolved ticket assigned please follow link see lines code referencing resolved tickethttps github com mongodb mongo searchqtig 1506typecodethe next steps ticket either remove outdated todo follow steps todo correct latter please update summary description ticket represent work youre actually;2019-12-20T04:53:22.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-44790;run hang analyzer shouldfail test mixed_mode_repl_nossl mixed_mode_repl_nossl expects replsettest fail due assert soon runs hang analyzer seems impractical plumb shouldrunhanganalyzer way particular assert soon fails might make sense put default testdata;2019-11-22T17:50:45.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-46029;write core files hang analyzer running locally sans evergreen currently hang analyzer run local testing assert soon times write large core files current directory silently consume lot disk space think disable writing core files unless running evergreen;2020-02-07T14:28:57.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-44331;benchrun errcount 0 even though ops failed benchrun still returns errcount 0;2019-10-31T03:59:30.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-48895;complete todo listed server 46691 todo codebase referencing resolved ticket assigned please follow link see lines code referencing resolved tickethttps github com mongodb mongo searchqserver 46691typecodethe next steps ticket either remove outdated todo follow steps todo correct latter please update summary description ticket represent work youre actually;2020-06-16T16:53:35.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-26953;track bytes read cache per query slow queries logged include information documents index entries scanned help diagnose performance issues however information doesnt tell us whether documents index entries scanned cache cache much significant performance impact reporting bytes read cache query logged would help diagnose cause performance issues related cache pressure might accomplished tracking bytes read cache per cursor per session wt computing difference value counter query query performance impact would need evaluated;2016-11-08T18:18:53.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-20960;default index build option support config runtime add support index build preferences config file mongod runtime parameters specifically control preferences background foreground index build options edit server 24041 following request added quote would great block foreground index creation configuration quote;2015-10-16T03:14:25.000+0000;Minor - P4;0.0;0;0;7
SERVER;SERVER-17014;foreground index build blocks database reads writes discussion https groups google com forum #topic mongodb dev _1irogzoveq create index backgroundfalse many operations db blocked even engines like wiredtiger dont require per db writer lock url shows thread stacks background jobs ttlmonitor clientcursormonitor get blocked per db lock backgroundfalse index create assume bad things happen ttl enforcement doesnt run long creates problems show collections db foo getindexes queries collections database blocked duration index create backgroundtrue workaround background index creation take time;2015-01-22T23:57:46.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-35714;recover common point rollback instead stable timestamp allow pit reads secondaries within previous batches able simply recover common point rollback instead recovering stable timestamp replaying oplog common point make rollback even faster easier understand recovery code used startup recovery;2018-06-20T21:22:30.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-37418;background index builds batch collection scan reads inserts index every single document collection background index builds retrieve document call savestate https github com mongodb mongo blob 175f5e3c25ddba439b7d28254a4af5504aded0d8 src mongo db catalog index_create_impl cpp#l398 resets cursor restorestate repositions every single insert would efficient batch reads collection inserts index read cursors reset less often want take advantage read_once cursors work around read page cache multiple documents page;2018-10-01T22:10:22.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-38241;update current operation log storage statistics update _curopcompletandlogoperation_ obtain storage statistics engine put opdebug completion operation reset session statistics;2018-11-26T03:33:06.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-38242;update transaction statistics reflect storage session statistics update transaction statistics reflect storage statistics fetch session storage statistics add session storage statistics maintained transaction level required implement method add two session storage statistics bson objects needed multi statement transactions;2018-11-26T03:42:27.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-38292;mongodb crash got signal 11 segmentation fault also issue 3 2 19 3 4 14 wt engine heres stack 3 4 14 logs brief exactly fix wt 4037 clear ticket codejava 2018 11 28t100613 885 0600 f thread2 invalid access address 02018 11 28t100613 906 0600 f thread2 got signal 11 segmentation fault 0x562636fa4a51 0x562636fa3c69 0x562636fa42d6 0x7f74ee9647e0 0x56263716bca3 0x56263716bd7c 0x562637aa1d7a 0x5626378e0466 0x5626378e05ea 0x5626378e0c08 0x5626378e3ac3 0x562637934294 0x562637934e47 0x56263792f813 0x56263792fba7 0x5626379316a3 0x56263799b906 0x7f74ee95caa1 0x7f74ee6a9c4d begin backtrace backtrace b562635a2b000 o1579a51 s_zn5mongo15printstacktraceerso b562635a2b000 o1578c69 b562635a2b000 o15792d6 b7f74ee955000 of7e0 b562635a2b000 o1740ca3 s_zn8tcmalloc11threadcache21releasetocentralcacheepns0_8freelistemi b562635a2b000 o1740d7c s_zn8tcmalloc11threadcache11listtoolongepns0_8freelistem b562635a2b000 o2076d7a s_zdlpvrkst9nothrow_t b562635a2b000 o1eb5466 s__wt_split_stash_discard b562635a2b000 o1eb55ea b562635a2b000 o1eb5c08 b562635a2b000 o1eb8ac3 s__wt_split_reverse b562635a2b000 o1f09294 b562635a2b000 o1f09e47 s__wt_evict b562635a2b000 o1f04813 b562635a2b000 o1f04ba7 b562635a2b000 o1f066a3 s__wt_evict_thread_run b562635a2b000 o1f70906 s__wt_thread_run b7f74ee955000 o7aa1 b7f74ee5c1000 oe8c4d sclone processinfo mongodbversion 3 4 14 gitversion fd954412dfc10e4d1e3e2dd4fac040f8b476b268 compiledmodules uname sysname linux release 2 6 32 754 6 3 el6 x86_64 version #1 smp tue oct 9 172749 utc 2018 machine x86_64 somap b 562635a2b000 elftype 3 buildid 64cd384c41acc8d81741f0dfc0f9a3d7756f81ff b 7fff3e8f6000 elftype 3 buildid f9f48cc73d4d61ae273899b31855c6589ee5ea8d b 7f74ef7fd000 path usr lib64 libssl 10 elftype 3 buildid becfb85a8bc084042d5bf2ba9e66325ce798b659 b 7f74ef418000 path usr lib64 libcrypto 10 elftype 3 buildid cbda444a7109874c5350ae9ceef3f82f749b347f b 7f74ef210000 path lib64 librt 1 elftype 3 buildid 552cec3216281ccfd7fa6432c723d50163255823 b 7f74ef00c000 path lib64 libdl 2 elftype 3 buildid 2af795bffd122309ba3359febabb5d0967403d17 b 7f74eed88000 path lib64 libm 6 elftype 3 buildid 4aaee970b045d8bf946578b9c7f3ab5cde9ab44a b 7f74eeb72000 path lib64 libgcc_s 1 elftype 3 buildid edc925e58fe28dca536993eb13179c739f1e6566 b 7f74ee955000 path lib64 libpthread 0 elftype 3 buildid 4ea475cd3fd3b69b6c95d9381fa74b36db4992ef b 7f74ee5c1000 path lib64 libc 6 elftype 3 buildid bca7789c2ea8e28cb7ce553e183ac7e7ee36f8a2 b 7f74efa69000 path lib64 ld linux x86 64 2 elftype 3 buildid 97af4b77212f74cff72b6c013e6aa2d74a97ef60 b 7f74ee37d000 path lib64 libgssapi_krb5 2 elftype 3 buildid 9a737f8bf10fc99c37cc404d3fc188f6e11fedd9 b 7f74ee096000 path lib64 libkrb5 3 elftype 3 buildid 8d3d6e28df6eb3752642a7031aac17d39ea4265d b 7f74ede92000 path lib64 libcom_err 2 elftype 3 buildid 7ec54d6e88bb7d2c1284117c2a483496a01eaaf4 b 7f74edc66000 path lib64 libk5crypto 3 elftype 3 buildid cc89b4c8cdccd32ba610bc72784dc3b7e9bd9e19 b 7f74eda50000 path lib64 libz 1 elftype 3 buildid 5fa8e5038ec04a774af72a9bb62dc86e1049c4d6 b 7f74ed845000 path lib64 libkrb5support 0 elftype 3 buildid e0c522c589f775c324330be09ce67dc83950a213 b 7f74ed642000 path lib64 libkeyutils 1 elftype 3 buildid af374bafb7f5b139a0b431d3f06d82014aff3251 b 7f74ed428000 path lib64 libresolv 2 elftype 3 buildid 4786a2a5d30b121601958e84d643c70c13c4fba5 b 7f74ed209000 path lib64 libselinux 1 elftype 3 buildid b4576be308ddcf7bc31f7304e4734c3d846d0236 mongod 3 4 _zn5mongo15printstacktraceerso+0x41 0x562636fa4a51 mongod 3 4 +0x1578c69 0x562636fa3c69 mongod 3 4 +0x15792d6 0x562636fa42d6 libpthread 0 +0xf7e0 0x7f74ee9647e0 mongod 3 4 _zn8tcmalloc11threadcache21releasetocentralcacheepns0_8freelistemi+0xe3 0x56263716bca3 mongod 3 4 _zn8tcmalloc11threadcache11listtoolongepns0_8freelistem+0x1c 0x56263716bd7c mongod 3 4 _zdlpvrkst9nothrow_t+0x26a 0x562637aa1d7a mongod 3 4 __wt_split_stash_discard+0xc6 0x5626378e0466 mongod 3 4 +0x1eb55ea 0x5626378e05ea mongod 3 4 +0x1eb5c08 0x5626378e0c08 mongod 3 4 __wt_split_reverse+0x83 0x5626378e3ac3 mongod 3 4 +0x1f09294 0x562637934294 mongod 3 4 __wt_evict+0xac7 0x562637934e47 mongod 3 4 +0x1f04813 0x56263792f813 mongod 3 4 +0x1f04ba7 0x56263792fba7 mongod 3 4 __wt_evict_thread_run+0xd3 0x5626379316a3 mongod 3 4 __wt_thread_run+0x16 0x56263799b906 libpthread 0 +0x7aa1 0x7f74ee95caa1 libc 6 clone+0x6d 0x7f74ee6a9c4d end backtrace code please note process generating core dump attach mongod process crashes;2018-11-28T17:25:46.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-37940;establish code path fcv 4 0 fcv 4 2 index builds index builds started fcv 4 0 use continue use v4 0 binary index build oplog entry createindexes index builds started fcv 4 2 use new oplog entries simultaneous index builds however thats farther goal current need establish two code paths unaffected fcv moment used incrementally add new replication logic simultaneous index builds;2018-11-06T14:57:32.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-37866;add performance testing verify replication lag throttled desired testing ensure lag appropriately throttled also election happens new primary chosen may want test also verify effects clock skew flow control mechanism;2018-11-01T15:47:56.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-43866;remove parallel insert task m60 like sys perf variant one line removal task;2019-10-07T15:13:55.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-39565;add requires_document_locking tag read_at_cluster_time_outside_transactions js test jstests replsets read_at_cluster_time_outside_transactions js test currently fails ephemeralfortest storage engine isnt meant work anyway;2019-02-13T05:20:30.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-41016;calculate deltas updates large documents use wiredtiger_calc_modify calculate deltas size changing updates large documents;2019-05-06T03:52:29.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-49928;add diagnostics powercycle tests specifically around issuing commands via ssh test failure due pam_nologin failure issuing command ssh curiously seemed multiple successful ssh commands since last reboot prior failure good start might enable existing debug flag https github com mongodb mongo blob 6086feae0b0f38bd14bbc8521c4115982433ae9e buildscripts powercycle run py#l63 details would useful understanding failure login name command get sent emitting message ssh attempt retry assert pam_nologin error something ssh code retries additionally theres way track changes pam_nologin https linux die net man 8 pam_nologin file might uncover false assumptions;2020-07-27T17:19:22.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-49460;spike selected tests applied multiversion tasks currently selected tests generate mutiversion tasks see https jira mongodb org browse server 48105 info server engineer know changes make src files result related multiversion tasks generated patch runs tasks related code changes ac multiversion_task_pattern https github com mongodb mongo blob 83a0479dbb78f73366a91b4afe9da44f6f5e9cf0 buildscripts selected_tests py#l63 l69 longer used exclude multiversion tasks generated selected tests alias evergreen longer pulls multiversion tasks;2020-07-10T21:59:37.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-50331;add genny workload maintenance events build variant add genny workload maintenance events build variant;2020-08-17T10:12:23.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-49716;gather_failed_unittests work ubuntu1804 build observed https evergreen mongodb com task mongodb_mongo_master_enterprise_ubuntu_no_latch_1804_64_bit_unittests_f1c2d6c29d960506c770958ed39ebe0677a3fdda_20_07_15_23_08_41 0;2020-07-17T21:32:14.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-50282;provide debugging setup script spawnhosts load artifacts coredumps overlong filenames truncating important properties actually bug ticket repurposed provide script unpackages files necessary inspecting coredump spawnhost assumes bug eventually fixed bug impacts subset cases original descriptionthe time spawn host data files test failure theres available core dump want load gdb script programmatically unpackages everything appropriate directory whether server engineers use script set gdb usage believe spawning host investigate core dump common use case unfortunately filenames long important properties trimmed https github com evergreen ci evergreen blob 86ebeb15ddc211f1390c5cc56af54a3712728e62 operations fetch go#l476 keyword coredump 1 makes difficult breaks script acceptable sort scripting isnt supported built established agreement also breaks ability corollary work hand tar tf archive afaik complete filescan point faster download coredumps hand arguably defeats purpose spawning host artifacts loaded dont know feasible solution theres probably reason filenames long uniqueness though imo unreadable ideas use shorter strings evergreen fetch generate preserve contents archive expense labeling variant task id afaik becomes problem user fetches artifacts multiple tasks directory backwords breaking established use cases consider adding flag fetch e g evergreen fetch task artifacts shortnames let users spawning host loading data opt short filenames add environment variables containing absolute paths interesting artifacts users sshing instance scripts hook without needing rely filename patterns e g bin_archive archive containing mongod dbg_archive archive containing mongod debug coredump_archive archive containing coredumps src_dir mongodb repository path fetch sources 1 noformat root ip 10 122 8 102 # data mci artifacts patch 1419_linux 64 debug_ data mci artifacts patch 1419_linux 64 debug_compiletotal 2503040 rw r r 1 root root 136935 may 19 0145 config mongodb_mongo_v4 4_linux_64_debug_patch_1d5d11155689d29bb7de42ccb5a5f4b3c7247469_5ebf0cd932f4170aad0ca35f_20_05_15_21_43_14 log rw r r 1 root root 2473743732 may 19 0146 debugsymbols mongodb_mongo_v4 4_linux_64_debug_patch_1d5d11155689d29bb7de42ccb5a5f4b3c7247469_5ebf0cd932f4170aad0ca35f_20_05_15_21_43_14 tgz rw r r 1 root root 84980170 may 19 0145 mongo mongodb_mongo_v4 4_linux_64_debug_patch_1d5d11155689d29bb7de42ccb5a5f4b3c7247469_5ebf0cd932f4170aad0ca35f_20_05_15_21_43_14 tgz rw r r 1 root root 3536789 may 19 0145 mongodb_mongo_v4 4_linux_64_debug_patch_1d5d11155689d29bb7de42ccb5a5f4b3c7247469_5ebf0cd932f4170aad0ca35f_20_05_15_21_43_14 tgz rw r r 1 root root 1097 may 19 0145 pip requirements mongodb_mongo_v4 4_linux_64_debug_compile_patch_1d5d11155689d29bb7de42ccb5a5f4b3c7247469_5ebf0cd932f4170aad0ca35f_20_05_15_21_43_14 0 txt rw r r 1 root root 699562 may 19 0145 scons cache mongodb_mongo_v4 4_linux_64_debug_patch_1d5d11155689d29bb7de42ccb5a5f4b3c7247469_5ebf0cd932f4170aad0ca35f_20_05_15_21_43_14 0 log data mci artifacts patch 1419_linux 64 debug_jscoretotal 120 rw r r 1 root root 80088 may 19 0145 running tests evergreen tasks locally rw r r 1 root root 1446 may 19 0145 mongo diskstats mongodb_mongo_v4 4_linux_64_debug_jscore_patch_1d5d11155689d29bb7de42ccb5a5f4b3c7247469_5ebf0cd932f4170aad0ca35f_20_05_15_21_43_14 0 tgz rw r r 1 root root 29980 may 19 0145 mongo system resource info mongodb_mongo_v4 4_linux_64_debug_jscore_patch_1d5d11155689d29bb7de42ccb5a5f4b3c7247469_5ebf0cd932f4170aad0ca35f_20_05_15_21_43_14 0 tgz rw r r 1 root root 1097 may 19 0145 pip requirements mongodb_mongo_v4 4_linux_64_debug_jscore_patch_1d5d11155689d29bb7de42ccb5a5f4b3c7247469_5ebf0cd932f4170aad0ca35f_20_05_15_21_43_14 0 txt data mci artifacts patch 1419_linux 64 debug_retryable_writes_jscore_stepdown_passthroughtotal 1204712 rw r r 1 root root 80088 may 19 0145 running tests evergreen tasks locally rw r r 1 root root 1212594087 may 19 0146 4_linux_64_debug_patch_1d5d11155689d29bb7de42ccb5a5f4b3c7247469_5ebf0cd932f4170aad0ca35f_20_05_15_21_43_14 retryable_writes_jscore_stepdown_passthrough 0 tgz rw r r 1 root root 10900 may 19 0145 4_linux_64_debug_retryable_writes_jscore_stepdown_passthrough_patch_1d5d11155689d29bb7de42ccb5a5f4b3c7247469_5ebf0cd932f4170aad0ca35f_20_05_15_21_43_14 0 tgz rw r r 1 root root 20560324 may 19 0145 m_ 1 4_linux_64_debug_patch_1d5d11155689d29bb7de42ccb5a5f4b3c7247469_5ebf0cd932f4170aad0ca35f_20_05_15_21_43_14 retryable_writes_jscore_stepdown_passthrough 0 tgz rw r r 1 root root 262274 may 19 0145 m_ 1 4_linux_64_debug_retryable_writes_jscore_stepdown_passthrough_patch_1d5d11155689d29bb7de42ccb5a5f4b3c7247469_5ebf0cd932f4170aad0ca35f_20_05_15_21_43_14 0 tgz rw r r 1 root root 101019 may 19 0145 m_ 2 4_linux_64_debug_patch_1d5d11155689d29bb7de42ccb5a5f4b3c7247469_5ebf0cd932f4170aad0ca35f_20_05_15_21_43_14 retryable_writes_jscore_stepdown_passthrough 0 tgz rw r r 1 root root 1097 may 19 0145 p 4_linux_64_debug_retryable_writes_jscore_stepdown_passthrough_patch_1d5d11155689d29bb7de42ccb5a5f4b3c7247469_5ebf0cd932f4170aad0ca35f_20_05_15_21_43_14 0 txt noformat;2020-05-19T19:29:00.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-49860;run undodb build variant rhel62 large rhel62 small doesnt enough memory appreciably large tests sporadic oom killing make undodb variant useless due unfavourable snr;2020-07-24T13:51:12.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-49164;sweep fix missing dependencies evergreen yml noticed tasks like jscore txns large txns format dependent compile probably makes sense depend jscorehttps evergreen mongodb com task mongodb_mongo_master_enterprise_rhel_62_64_bit_dynamic_required_jscore_txns_large_txns_format_3ea60282c8841c67d4e2f3a365b7f1640c84198c_20_06_29_14_07_33while seems like someone one time sweep see theres dependencies would make sense add know doesnt fit perfectly stm charter tbh probably doesnt fit well anyones charter seems like cleanest fitcc pasette;2020-06-29T15:05:45.000+0000;Major - P3;0.0;1;0;4
SERVER;SERVER-32443;create sys perf task running linkbench automatically replica set mongodb linkbench implementation relatively stable utilizing new transactions api work integrating automated benchmark sys perf would probably good run benchmark 1 node 3 node replica set least;2017-12-21T17:45:07.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-32664;sys perf enable running baselines lower priority change system_perf yml file;2018-01-11T16:15:11.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-32891;sys perf change order mongodb_setup workload_setup calls longevity also;2018-01-25T14:46:49.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-33134;add ycsb retryable writes enabled tasks system_perf yml needed perf 1129 https jira mongodb org browse perf 1129;2018-02-05T21:15:39.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-33651;mobile se use full synchronous mode sqlite writes sqlite allows startup configuration options defaults work use cases might still need fine tuning ticket study available options come non default might better suit us also conclusion ticket update design doc specify setting come;2018-03-05T00:30:42.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-33670;build mongo binaries ssl compile flag system_perf yml going enable ssl need build mongo binaries ssl compile flag done build system_perf yml;2018-03-05T19:00:37.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-33853;define new test tag temporarily disable test engineers need temporarily disable javascript test update yaml file suite test runs explicitly blacklist define new tag e g temporarily_disabled added test quickly prevent running suites new tag exclusion could specified suites configuration files tag would different tag could implemented resmoke;2018-03-13T17:40:24.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-33978;references sudo evergreen yml use set_sudo generate compile expansions umount shared scons directory functions reference sudo code sudo umount efs umount efs true code use following form code set_sudo sudo umount efs true code;2018-03-19T16:11:50.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-33470;log archival message even successful hook_test_archival py archival message logged error submitting files archive https github com mongodb mongo blob e3f361769cd13ba88aa24c1c0a71c76b187f64dd buildscripts resmokelib testing hook_test_archival py#l115 l116 logger info message even success could files skipped tar process;2018-02-23T19:22:50.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-26319;deleting test results valueerror unrecognized jstest file included excluded explicitly name https github com mongodb mongo blob r3 4 0 rc1 buildscripts resmokelib selector py#l237 e glob pattern tag error raised test isnt found done ensure blacklist suite updated test renamed deleted consider improving valueerror unrecognized jstest error message https github com mongodb mongo blob r3 4 0 rc1 buildscripts resmokelib selector py#l295 clearer potentially needing update entry blacklist h6 original descriptionin master deleting test loglong js causes failurehttps evergreen mongodb com task mongodb_mongo_master_enterprise_rhel_62_64_bit_sharded_collections_jscore_passthrough_c172cc49e735b6e48f58662e5588961216d3cff0_16_09_25_23_17_00in patch moved loglong js new location causes compile failhttps evergreen mongodb com version 57e577943ff12239ba00ab4f;2016-09-25T23:07:49.000+0000;Minor - P4;1.0;0;0;7
SERVER;SERVER-18840;resmoke indicate status test abbreviated log output run logging everything end resmoke running batch tests logging buildlogger test finishes prints line like noformat 2015 05 20 131236 365 executorjs_testjob0 sync_passive js ran 138 85 seconds noformat would helpful indicate test passed failed suite running evergreen hasnt finished yet eyeball suite going fail looking logs;2015-06-05T16:04:28.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-34144;powercycle output improvements two requests apologize separate tickets# please log exactly database collection queried canary checks also include exact query criteria used verify document correct state think canary documents insert verification existence check # please rename powercycle replset name powercycle currently misspelled powercyle bringing node replica set member queried requires exact string match replset name easy read replset name powercycle later learn misspelled;2018-03-20T19:18:28.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-42227;cap many tasks burn_in_tests generate burn_in_tests generates many tests push evergreen limit cause bad slowdowns put cap many tasks burn_in_tests generate fail want generate tasks server engineer want burn_in_test limit many tasks generatedso doesnt cause evergreen slow ac burn_in_tests generate 1000 tasks;2019-07-13T13:04:32.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-42240;burn_in_tags_gen tasks use binaries patch build tasks created burn_in_tags gen using binaries base commit patch commit see comments detail;2019-07-15T19:21:56.000+0000;Critical - P2;1.0;2;0;1
SERVER;SERVER-42309;test_generator clean files creates test_generator tests create several files run clean files cause problems running lint locally cleaned test run server engineer want test_generator clean files creates dont cause problems im trying things ac running buildscripts_test extra files left around;2019-07-20T14:57:48.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-42356;teardown finishedtrue isnt ever called noopfixture flush thread block forever next event https github com mongodb mongo blob de38a35403c64e2dfe7e9ffc38fb95f9674773b3 buildscripts resmokelib logging flush py#l106 isnt one lined make wait one way could use non blocking version scheduler run https docs python org 3 library sched html#sched scheduler run;2019-07-23T18:31:55.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-42452;failnonintentlocksifwaitneeded failpoint interrupts lock requests uninterruptiblelockguard interrupting lock request leads locktimeout exception https github com mongodb mongo blob 25d5f6a0b01f261e633587013e4ab8116ea2930a src mongo db concurrency lock_state cpp#l905 l912 known handled c++ code due presence uninterruptiblelockguard causes server abort issue found rollback fuzzer suspect background thread e g ttl monitor holding intent lock collection prevented collection lock acquisition multiindexblockcleanupafterbuild background index build acquired immediately https github com mongodb mongo blob 25d5f6a0b01f261e633587013e4ab8116ea2930a src mongo db catalog multi_index_block cpp#l98;2019-07-26T16:30:50.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-42482;burn_in_tests needs take minimum test runs account timeouts burn_in_tests failed due timeouts patch https evergreen mongodb com task mongodb_mongo_master_enterprise_rhel_62_64_bit_display_burn_in_tests_patch_dae371c478e1a828ac911096d85f94be8e936ef9_5d3f0da056234359d94af31c_19_07_29_15_15_53 0# 23257b2522compare2522253a255b257b2522hash2522253a2522dae371c478e1a828ac911096d85f94be8e936ef92522257d255d257d#257b2522compare2522253a255b257b2522hash2522253a2522dae371c478e1a828ac911096d85f94be8e936ef92522257d255d257d calculated timeout value use take account minimum number executions could specified 2 default timeout set based much 10 minute repeat time expect test case whole execution test occur cause hit timeout server engineer want burn_in_tests timeout tests runtime greater 10 minutesso burn_in_tests properly validate tests ac burn_in_tests able run successfully tests runtimes 10 minutes;2019-07-29T20:48:51.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-42622;resmoke py doesnt attempt tear fixture setting raises exception discovered issue investigating server 42356 yet another way close never called fixturelogger job teardown_fixture wont called job setup_fixture raises exception https github com mongodb mongo blob ba434d76511a28336d23c0bb2985f5cf8164670a buildscripts resmokelib testing job py#l103 l105;2019-08-04T05:47:55.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-42671;_gen task failure due missing tests marked test failures generating tasks sub suite execution common problem test referenced resmoke configuration moved deleted cause generate script fail since referenced file cannot found however _gen task fails system failure evergreen errors often get ignored switch failure show test failure let developer know action required part fix issue server engineer _gen task failures show test failuresso know investigate ac _gen task failures caused missing test referenced show test failures evergreen;2019-08-07T20:37:57.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-42704;add placeholder task evergreen commit queue add placeholder task currently ops commit queue task included one required build variants server engineeri want able run commit queue without real tasksso use commit queue minimizing change colliding merges ac single op task available part commit queue task part required builders;2019-08-08T15:00:53.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-42814;remove informational message overflow file size quota backport server 39004 v4 0 introduced msg stdout starting mongod logs value wiredtigermaxcacheoverflowfilesizegb setting even set default value 0 code alexc kitty work mongo mongod logpathdata mongod log dbpathdata fork2019 08 14t003316 654+0000 storage main max cache overflow file size custom option 0about fork child process waiting server ready connections forked process 27798child process started successfully parent exiting code normal invocation mongod shouldnt causing setting written stdout like itd acceptable print explicitly set like wiredtigerengineconfig option print;2019-08-14T00:35:42.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-42927;increase verbosity symbol loading hang_analyzer py windows investigating recent hangs hang analyzer appear load symbols certain modules windows gain insight enable noisy symbol loading running sym noisy;2019-08-20T18:47:04.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-43022;allow compile run independently rhel 62 commit queue want able run compile tasks however right several tasks pulled compile including burn_in_tests remove link order ensure commit queue stable;2019-08-23T20:00:18.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-43143;add timeouts evergreen lint tasks lint task evergreen normally takes around 15 20 minutes complete last 6 months highest runtimes seen around 35 minutes week ago however saw lint task get hung didnt exit task timed lint task uses default timeouts took 3 hours task actually ended since lint task included part commit queue hangs like problematic would block entire queue number hours avoid issue add aggressive timeout lint task something around 40 minutes acceptable server engineer want lint task timeout runs long waiting hung task ac lint tasks evergreen time running 40 minutes;2019-09-03T17:24:21.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-43150;reduce duration jstestfuzz_interrupt_replication_flow_control_gen jstestfuzz_replication_continuous_stepdown_flow_control_gen ticket jstestfuzz_interrupt_replication_flow_control_gen jstestfuzz_replication_continuous_stepdown_flow_control_gen tasks recently ran patch https evergreen mongodb com version 5d6456d461837d02851d7ac8 noticed two tasks took 1hr since take 30 40 mins compile takes 20 mins targeted test selection project hopes bring patch build times run fuzzer tests part would great tasks could run 20 mins including compile time robert guo recommends reduce number generated files tasks like existing fuzzer tasks https github com mongodb mongo blob ff685d2d6e370594261eccbef8e60b2f7cc61e28 etc evergreen yml#l5508 l5520 server engineer able run jstestfuzz_interrupt_replication_flow_control_gen jstestfuzz_replication_continuous_stepdown_flow_control_gen tasks 20 mins patch build time tasks run part targeted test selection less hour ac running jstestfuzz_interrupt_replication_flow_control_gen jstestfuzz_replication_continuous_stepdown_flow_control_gen patch build takes 20 mins including compile time;2019-09-04T15:09:23.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-42195;stepdown suites fail python exception run repeat 1 attempting use flagbasedstepdownlifecycle instance across executions test suite https github com mongodb mongo blob 9ae337bd27f7a513df548256400596a6eba4d7a3 buildscripts resmokelib testing hooks stepdown py#l70 l84 would mean flagbasedstepdownlifecycle __should_stop true moment second execution test suite begins instead construct new flagbasedstepdownlifecycle instance constructing new _stepdownthread instance noformat executor 2019 07 12t001246 427 0400 summary 5 test passed 10 96 seconds continuousstepdownjob0 starting stepdown thread continuousstepdownjob0 stepdown thread running executorjs_testjob0 2019 07 12t001246 429 0400 jstest jstests core indexc js marked failure hooks before_test traceback recent call last file users maxh debugging mongo buildscripts resmokelib testing job py line 242 _run_hooks_before_tests self _run_hook hook hook before_test test file users maxh debugging mongo buildscripts resmokelib testing job py line 228 _run_hook hook_function test self report file users maxh debugging mongo buildscripts resmokelib testing hooks stepdown py line 97 before_test self _check_thread file users maxh debugging mongo buildscripts resmokelib testing hooks stepdown py line 113 _check_thread raise errors serverfailure msg buildscripts resmokelib errors serverfailure stepdown thread running noformat;2019-07-12T04:16:45.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-42136;add new evergreen task sharded cluster version query fuzzer existing query_fuzzer_gen task https github com mongodb mongo blob 1433d75e416e1078bb490ecda04c9e12b1a0ab3d etc evergreen yml#l5203 l5215 updated jstestfuzz_vars difftestingmode standalone specified new query_fuzzer_sharded_gen task added runs npm run query fuzzer difftestingmode sharded note well tag query_fuzzer shouldnt need update task lists build variants explicitly codeyaml ## jstestfuzz sharded cluster fuzzer checking find aggregate equivalence ## jstestfuzz_template name query_fuzzer_sharded_gen tags query_fuzzer commands func generate fuzzer tasks vars jstestfuzz_config_vars num_files 5 num_tasks 10 jstestfuzz_vars difftestingmode sharded npm_command query fuzzer resmoke_args suitesgenerational_fuzzer name query_fuzzer_sharded code;2019-07-10T14:15:44.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-41136;remove api subdirectory moving loop wtdevelop build variants compile task evergreen wtdevelop build variants started fail recently failing locate api subdirectory attempting move subdirectories loop api subdirectory exist wiredtiger source tree removed moving loop https evergreen mongodb com task mongodb_mongo_master_linux_64_debug_wtdevelop_compile_3de146355bbc9612be7ff76937469f2bb5144712_19_05_06_14_38_32 noformat 2019 05 11 013241 476 running command shell exec use wiredtiger develop step 14 15 2019 05 11 013241 476 true true 2019 05 11 013241 476 cd src third_party 2019 05 11 013241 476 wtdir api dist examples ext lang src test tools 2019 05 11 013241 478 rm rf wiredtiger wtdir 2019 05 11 013241 478 mv wtdevelop wtdir wiredtiger 2019 05 11 013241 478 done 2019 05 11 013241 478 fi 2019 05 11 013241 478 mv cannot stat wtdevelop api file directory 2019 05 11 013241 478 command failed command encountered problem exit status 1 2019 05 11 013241 478 task completed failure noformat;2019-05-14T05:12:57.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-41169;powercycle testing linux removed evergreen powercycle evergreen tasks mostly run ssl ubuntu 14 04 build variant removed part server 37765;2019-05-15T23:07:41.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-41231;fix verify_versions_test js 4 2 change 4 1 4 2 branching see server 35198 example;2019-05-18T05:26:57.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-41304;update exit_code_map resmoke py python 3 changes windows changes python cpython f2244ea https github com python cpython commit f2244eaf9e3148d6270839e9aa7c2ad9752c17ed part https bugs python org issue20172 changed dword return value getexitcodeprocess win32 api https docs microsoft com en us windows desktop api processthreadsapi nf processthreadsapi getexitcodeprocess correctly interpreted unsigned long say code python 2 7 previously codec pyint_fromlong exit_code code replaced codec return_value py_buildvalue k _return_value code k means unsigned long https docs python org 3 c api arg html#c py_buildvalue;2019-05-24T04:04:10.000+0000;Minor - P4;1.0;0;0;7
SERVER;SERVER-41321;stopping mongod powertest service returns error windows noformat 2019 05 17 145826 546 2019 05 17 145825 787 info system last booted 2019 05 17 144634 000000 711 seconds 2019 05 17 145826 546 2019 05 17 145825 787 info operations perform kill_mongod 2019 05 17 145826 546 traceback recent call last 2019 05 17 145826 546 file powertest py line 890 stop 2019 05 17 145826 546 win32serviceutil stopservice servicenameself name 2019 05 17 145826 546 file ccygwinhomeadministratorvenv_powercyclelibsite packageswin32libwin32serviceutil py line 409 stopservice 2019 05 17 145826 546 return controlservice servicename win32service service_control_stop machine 2019 05 17 145826 546 file ccygwinhomeadministratorvenv_powercyclelibsite packageswin32libwin32serviceutil py line 320 controlservice 2019 05 17 145826 546 status win32service controlservice hs code 2019 05 17 145826 546 pywintypes error 109 controlservice pipe ended 2019 05 17 145826 546 handling exception another exception occurred 2019 05 17 145826 546 traceback recent call last 2019 05 17 145826 546 file powertest py line 2548 module 2019 05 17 145826 546 main 2019 05 17 145826 546 file powertest py line 2128 main 2019 05 17 145826 546 ret remote_handler options args 2019 05 17 145826 546 file powertest py line 1202 remote_handler 2019 05 17 145826 546 mongod stop timeout30 2019 05 17 145826 546 file powertest py line 1080 stop 2019 05 17 145826 546 return self service stop timeout 2019 05 17 145826 546 file powertest py line 904 stop 2019 05 17 145826 546 output format err 1 err 2 2019 05 17 145826 546 typeerror error object support indexing noformat https evergreen mongodb com task mongodb_mongo_master_windows_64_2k8_ssl_powercycle_kill_mongod_39413ef58dd1f667728b67c86e1bf09146952242_19_05_16_20_32_34 0;2019-05-25T17:20:23.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-41322;cygwin rsync errors medium found powercycle testing noformat 2019 05 21 210945 503 2019 05 21 210923 820 info system last booted 2019 05 21 210834 000000 49 seconds 2019 05 21 210945 503 2019 05 21 210923 820 info operations perform rsync_data start_mongod 2019 05 21 210945 503 2019 05 21 210923 952 info rsyncing data db log powercycle beforerecovery 1 excluding diagnostic data metrics interim 2019 05 21 210945 514 2019 05 21 210944 567 info error executing cmd rsync va delete quiet exclude diagnostic data metrics interim data db log powercycle beforerecovery 1 rsync write failed log powercycle beforerecovery 1 db collection 52 5788850313987091066 wt medium found 135 2019 05 21 210945 514 rsync error error file io code 11 receiver c 393 receiver3 1 2 2019 05 21 210945 523 noformat https evergreen mongodb com task mongodb_mongo_master_windows_64_2k8_ssl_powercycle_1397d1398b3b9b1723cd9b93de6b345f940a17e8_19_05_21_15_20_22 0;2019-05-25T19:19:09.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-41351;improve error message failure obtain lock storage stats collection server 41327 reported query failure cursorkilled error along following error acquiring lock storage stats collectiontimed obtaining lock trying gather storage statistics slow operation though message warning sounds like cause query killed improve error remove confusion notify worst would result absence storage statistics slow operation logs;2019-05-29T03:29:38.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-41390;validate_mongocryptd check variants without push validate_mongocryptd script checks buildvariants push mongocryptd binary also add variant list however script currently buildvariants including ones testing contain push task causing problems dynamic variants trying create script could also check push task server engineer want validate_mongocryptd check push task variants push mongocryptd need included variant list ac variants contain push task fail validate_mongocryptd included list variants;2019-05-30T13:34:04.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-41423;shell bash set incorrectly shell exec commands etc evergreen yml shell option nested params option command definition setup jstestfuzz function top level key command definition https github com mongodb mongo blob 182f15f37344118b33419c05820c2753d06191ed etc evergreen yml#l1790 l1795 audit command definitions shell bash incorrect location;2019-05-31T14:55:30.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-41488;lint drivers_nightly yml yaml linting added 4 2 failed new drivers_nightly yml file;2019-06-04T14:13:36.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-41562;add new evergreen task query fuzzer following yaml blob modeled aggregation_wildcard_fuzzer_gen task https github com mongodb mongo blob f3d9452220039ba74c68fe58b382a237d4e07ad1 etc evergreen yml#l5097 l5110 generate fuzzer tasks function uses generate tasks command https github com evergreen ci evergreen wiki project commands#generate tasks create separate evergreen tasks actually running fuzzer take advantage using multiple evergreen hosts main difference compared aggregation rollback fuzzers well use npm run query fuzzer entry point codeyaml ## standalone fuzzer checking find aggregate equivalence ## jstestfuzz_template name query_fuzzer_gen tags query_fuzzer commands func generate fuzzer tasks vars jstestfuzz_config_vars num_files 5 num_tasks 10 npm_command query fuzzer resmoke_args suitesgenerational_fuzzer name query_fuzzer code query_fuzzer task selector aka tag added following build variants enterprise rhel 62 64 bit enterprise rhel 62 64 bit coverage macos ubuntu1804 debug asan ubuntu1804 debug ubsan windows 64 2k8 ssl;2019-06-06T13:51:30.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-41680;propagate branch_name evergreen expansion fuzzer invocation npm run command invoking fuzzer https github com mongodb mongo blob ce740566543792bfa4402d278a23e5cb4b1a80fe etc evergreen yml#l1913 include noformat branch branch_name noformat way fuzzer aware generate files based version server running;2019-06-12T20:42:07.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-41708;set virtualenv failure system failure currently marked test failure;2019-06-13T18:27:59.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-41836;log thread id part error fsm tests looks like dont log thread id single unique stacktrace https github com mongodb mongo blob 2b34b45c83f03354cc88c295cf24aca7fb9418cc jstests concurrency fsm_libs runner js#l337 l341;2019-06-20T16:02:39.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-42032;mongodb javascript stack always fails running hang_analyzer py noformat 2019 06 05 032831 295 running print javascript stack supplement 2019 06 05 032831 295 ignoring gdb error type mozjs within class namespace mongo javascript_stack 2019 06 05 032831 295 ignoring gdb error type mozjs within class namespace mongo javascript_stack 2019 06 05 032831 295 ignoring gdb error type mozjs within class namespace mongo javascript_stack 2019 06 05 032831 295 ignoring gdb error type mozjs within class namespace mongo javascript_stack 2019 06 05 032831 295 ignoring gdb error type mozjs within class namespace mongo javascript_stack 2019 06 05 032831 295 ignoring gdb error type mozjs within class namespace mongo javascript_stack noformat https evergreen mongodb com task_log_raw mongodb_mongo_master_ubuntu1604_replica_sets_auth_1_ubuntu1604_c939010fe98ba0a8affe7d0d30d4e8d57e68242b_19_06_05_00_44_58 0typet#l2539 h6 original descriptionin gdb frame know mongomozjskcurrentscope print javascript stack trace especially useful debugging integration tests gdb optimizes variables core dump max hirschhorn figured switching frame gdb frame 1 running mongodb javascript stack work fine perhaps arbitrarily switch frames https github com mongodb mongo blob a351f48ad122ca59ed45e5df877ef398c099c938 buildscripts gdb mongo py#l530 l532 trying print stack trace;2019-07-01T20:42:27.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-42094;perf yml check enterprise module revision manifest master problem changes performance test old merge base running patch build performance project system apply changes test correct version mongodb mongo repo attempt compile head master branch enterprise modules cause spurious compile failure interim changes merged enterprise modules required paired changes mongodb mongo;2019-07-05T16:46:17.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-41401;patch_files txt doesnt distinguish enterprise community files patch_files txt distinguish enterprise community files line looks like src module my_feature cpp impossible tell file enterprise community repo;2019-05-30T18:42:52.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-46374;move nopassthrough test run large distro rhel6 2 build variants seeing several cases nopassthrough suites running memory rhel 6 2 move large distros avoid;2020-02-24T20:12:04.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-46453;selected_tests_gen pick changed files mongo enterprise modules files currently selected_tests_gen task picks changed files mongodb mongo repo 10gen mongo enterprise modules repo user storyas mongodb engineer able run selected_tests_gen task know pick files ive changed 10gen mongo enterprise modules repo ensuring changed files result correct tasks generated ac selected_tests_gen picks changes files 10gen mongo enterprise modules repo;2020-02-27T18:30:44.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-46688;use testdata inevergreen determine data files archived archivefile https github com mongodb mongo blob c553f6acd0ce7768d25a2dcdfa9358aa22b5ee55 buildscripts resmokelib parser py#l55 l60 flag needs specified archival done intention local invocations resmoke archive data files s3 functionality achieved checking testdata inevergreen without needing set command line argument;2020-03-06T20:06:37.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-46732;cap number tasks generated non required build variants recently hit issue amount evergreen project config generated generate tasks exceeded maximum document size started causing issues looks like caused number tasks generated task adds project config also looks like would happen build variants version run could reduce chance happening capping number sub tasks generate task non required build variants server engineer want limit number tasks dynamically generated non required builders versions hit maximum document size ac non required builders set cap number tasks generate;2020-03-09T19:52:01.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-46813;revert temporarily reduce frequency randomized testing implemented change reduce frequency randomized testing reduce number bfgs created revert change;2020-03-11T23:13:53.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-46842;resmoke py shouldnt run data consistency checks stepdown suites process crashed resmoke py ordinarily checks test didnt cause server crash calling self fixture is_running https github com mongodb mongo blob d09c84a0856060c38e58d971599966af8719a454 buildscripts resmokelib testing job py#l180 test finishes however due stepdown thread job thread synchronized calling continuousstepdown after_test isnt safe check whether fixture still running https github com mongodb mongo blob d09c84a0856060c38e58d971599966af8719a454 buildscripts resmokelib testing job py#l32 l37 immediately test finishes codepython # dont check fixture is_running using continuousstepdown hook kills# restarts primary even fixture still running expected a# race fixture is_running could fail called primary killed but# restarted self _check_if_fixture_running isinstance hook stepdown continuousstepdown hook self hooks code skipping check causes resmoke py continue run data consistency checks even process mongodb cluster crashed misleading server engineers terms causing click wrong link evergreen task failure also severe negative impact automated log extraction tool preventing finding relevant information ensure process crashes test suites using continuousstepdown hook prevent tests hooks running suspect _stepdownthread pause https github com mongodb mongo blob d09c84a0856060c38e58d971599966af8719a454 buildscripts resmokelib testing hooks stepdown py#l427 l436 check fixture still running last thing would accomplish;2020-03-13T00:07:39.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-46851;decrease number jobs logical session cache tests logical session cache tests frequently running memory due host size running reducing number jobs help use less memory;2020-03-13T16:53:42.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-46861;update perf yml use updated genny invocation current invocation genny perf yml https github com mongodb mongo blob 521ab081fdbd6a0ba5169f762a78e2158edba86c etc perf yml#l211 wasnt updated use new genny entry point scripts genny update tig 2261 also updated remove cli specification metrics output format location make sure code uses output looks default location;2020-03-13T18:37:57.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-46914;burn_in_tests looking multiversion non multiversion case burn_in_test script failing generate task normal case non multiversion attempting look multiversion information even though multiversion setup see https evergreen mongodb com task mongodb_mongo_master_enterprise_rhel_62_64_bit_burn_in_tests_gen_patch_8c1515929f34d41dbefbb9476e1dd893d523ad01_5e70dbc89ccd4e532fc74873_20_03_17_14_16_56##257b2522compare2522253a255b257b2522hash2522253a25228c1515929f34d41dbefbb9476e1dd893d523ad012522257d255d257d example burn_in_tests running multiversion mode look multiversion configuration;2020-03-17T14:50:13.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-46996;push publish_packages tasks run small hosts migration new architecture publishing linux packages safe move package publication tasks push etc using smallest possible evergreen hosts e smalls additionally tasks arent running linux x86_64 probably ought;2020-03-19T18:08:12.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-47054;dont fail due long timeouts non patch builds generating sub tasks appear setting timeouts greater certain threshold fail task generation inform patch builder trying run patch build take really long time require manually disable check something sure want mainline builds however skip check since one go manually override repeated execution tests bumping;2020-03-23T17:25:36.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-46146;reduce number bvs running hang analyzer unittests theres need run shell hang analyzer unittest handful build variants dont expect behavior python differ;2020-02-13T22:29:01.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-43956;fix burn_in_tests file path windows file paths generated tasks recently changed always use separator generate task calls always run bash even windows achieved auditing replacing usages os path join burn_in_tests py also uses os path normpath needs supplemented output unix path well;2019-10-11T13:11:09.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-44009;upload pip freeze output sys perf microbenchmarks dsi supported _run dsi_ sets python virtualenv python scripts run part pip install requirements pip output file upload provide traceability python packages installed anything needs investigated server engineer want pip list persist requirements easier find im looking logs ac packages version installed pip still available needed;2019-10-15T09:08:55.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-44312;specify evergreen auth performance tests signal processing performance engineeri want signal processing commands proper evergreen auth access data evergreen api ac detect_outliers access evergreen api data detect_changes access evergreen api data;2019-10-30T14:35:05.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-44400;evergreen_task_tags uses wrong option tasks uses tasks_for_tag_filter use remove_tasks_for_tag_filter;2019-11-04T20:14:28.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-44421;populate config values burn_in_multiversion_gen generating burn multiversion tasks assert number tests defined etc evergreen yml multiversion_tag https github com mongodb mongo blob 1bbcedbd0c744c6ad880cbde2f46eb711c5acf20 buildscripts burn_in_tests py#l76 equals number yaml suite files living buildscripts resmokeconfig suites burn_in_config_key https github com mongodb mongo blob 1bbcedbd0c744c6ad880cbde2f46eb711c5acf20 buildscripts evergreen_gen_multiversion_tests py#l43 get_named_suites_with_root_level_and_key https github com mongodb mongo blob 1bbcedbd0c744c6ad880cbde2f46eb711c5acf20 buildscripts resmokelib suitesconfig py#l22 helper function requires config values populated called make sure called buildscripts resmokelib parser set_options ever make calls helper;2019-11-05T14:53:35.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-44537;update multiversion platform windows 4 4 inserver 33049 weve renamed windows platform cutting mongodb 4 4 update multiversion platform tests still find;2019-11-11T02:53:28.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-44604;move benchmarks enterprise rhel 6 2 benchmarks taking available cbi machines dont provide much value patch builds move different build variant;2019-11-13T16:18:26.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-46135;create selected_tests alias see technical design details https docs google com document 1azkrjr3babowhr6m8vs9cctqomldueyqmyvkp_ensow edit#bookmarkid ce25hdhb1ufsas server engineer able run selected_tests_gen task part selected_tests alias try running selected tests patch buildac selected_tests alias runs tasks specified technical design doc;2020-02-13T16:58:16.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-44651;update signal processing version update performance sys perf use latest version signal processing 1 0 14;2019-11-15T14:36:25.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-44769;add large scale long lived workload system_perf yml large scale workload automation project subcomponent workload tests long lived portion entire workload useful helping determine baseline diagnosing regressions larger workload;2019-11-21T16:49:12.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-44991;performance regression indexes keys common prefixes test creates 5 collections 10 indexes indexes designed keys substantial common prefixes seemed important generate issue collections populated sparsely updated parallel aiming roughly 1 update per page order generate dirty pages high rate little application work compare png width100left 4 0 13 right 4 2 1 b c update portions test performance regression seen timespan update portion average latency rate pages written disk pages evicted substantially lower 4 2 1 test dirty fill ratio pegged 20 rate pages written disk bottleneck test run 24 cpu machine cpu utilization tests roughly would expected 5 constantly active application threads plus 3 4 constantly active eviction threads spite cpu activity eviction evicting pages much lower rate must using cpu per page evicted 4 2 1 perf shows additional cpu activity accounted __wt_row_leaf_key_work;2019-12-06T17:01:59.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-45128;reset batchtime linux debug wiredtiger develop build variant default batchtime increased 7 days server 45127 temporarily disable build variant storage engines team time investigate recent redness;2019-12-13T16:56:06.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-45313;validate commit message doesnt escape commit messages properly issue validate_commit commit message double quotes parens caused bash error tried process https evergreen mongodb com task mongodb_mongo_master_commit_queue_validate_commit_message_patch_185facf0acf9c22e09893051a28040e8ee39292b_5e0641fbe3c33123080b2a3c_19_12_27_17_41_04##257b2522compare2522253a255b257b2522hash2522253a2522185facf0acf9c22e09893051a28040e8ee39292b2522257d255d257d ensure commit messages properly escaped passed script server engineer want validate_commit properly handle characters need escaped commit message properly validated ac validate commit able properly handle commit message characters like etc;2019-12-27T18:22:56.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-45320;remove evergreen client buildscripts uses local evergreen client https github com mongodb mongo blob master buildscripts client evergreen py buildscripts removed mongo repository except metrics script currently used favor evergreen py https github com evergreen ci evergreen py remove metrics script client longer maintain one accidentally starts using server engineer want local evergreen client code removed longer maintain ac buildscripts client evergreen py removed tests dependencies buildscripts client evergreen py removed;2019-12-30T22:38:04.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-45377;add methods globally disable enable hang analyzer tests passing runhanganalyzerfalse argument assert soon works well mosts tests replica set tests expect throws assert soon calls located several functions deep replsettest fixture cases would cleaner global enable disable methods hang analyzer let tests wrap enable disable pair around places expect assert soon fail used noformat hanganalyzer disable ultimately triggers assert soon failure timeoutexpectedbytest hanganalyzer enable noformat;2020-01-06T20:16:07.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-45715;fix spelling mistake warning around failure get storage stats https github com mongodb mongo commit 3f469e451c7ff6a46d908197da87d018dce27bdfintroduced warning message spelling mistake aquire acquire ticket fix;2020-01-22T23:52:45.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-45748;burn_in_tags_bypass_compile looking correct task burn_in_tags_bypass_compile scripts looking correct task download compiled artifacts result compile tasks generated burn_in_tags recompiling server instead downloading already compiled files looks like happening since august;2020-01-24T14:20:16.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-45764;generate resmoke tasks need take setup time account setting timeouts generate timeouts generate_resmoke_suites calculate timeout use based historic runtime tests run however fail include time spent running setup including time required download artifacts include buffer calculated timeouts dont hit frequently buffer lot smaller thought extra time spent setting could cause tests hit timeouts even tests run normal times;2020-01-24T18:48:38.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-45766;remove requires server yaml evg engineer want server evergreen yml remove uses requiresso longer support requires functionality ac uses requires server evergreen yml removed discussing request around creating dependencies dynamically became apparent requires poorly understood rarely used grepping static configs looks like server uses discussing david bradford sounds like result moving towards task generation uses current uses requires longer important original implementation motivated evg 720 cleanup requirement longer exists better solved ways modern evergreen therefore remove server config evergreen remove code base;2020-01-09T17:09:32.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-44727;detect changes called via run dsi detect changes script called via run dsi called via setup script;2019-11-19T15:16:45.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-40923;remove npm test command run jstestfuzz evergreen function run jstestfuzz function lives https github com mongodb mongo blob e3796fef68ec17ef475e669cd04193aac506bf58 etc evergreen yml#l1803 etc evergreen yml project configuration file introduction jstestfuzz self tests evergreen project shouldnt need run npm test every execution fuzzer;2019-04-30T22:20:27.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-39304;add new required variant linux 64 required duroff evergreen yml order ensure new tests correctly tagged currently 3 build variants execute burn_in_tests distinct configuration using expansion macro burn_in_tests_build_variant enterprise rhel 62 64 bit required majority read concern enterprise rhel 62 64 bit required inmem rhel 62 64 bit required mobileto catch tests requiring requires_journaling tag add another build variant linux 64 required duroff evergreen yml similar enterprise rhel 62 64 bit required majority read concern;2019-01-31T15:08:42.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-39355;collection drops block server long periods hi sorry weve another occurrence today still running 3 4 13 theres still issue weve modified code drop collection sleep 10 sec deletion give mongo time recover short global lock kill platform unfortunately wasnt enough killed global performancehttps jira mongodb org secure attachment 203795 screenshot 4 pngafter investigation found cause collection deletion tried upload diagnostic data portal specified earlier doesnt accept files upload give another portal log drop queries mongo_drop_log txt see spaced 10sec +drop duration drop take lot time collections empty 5 records indexes though shown probably destroyed time dont know checkpoint global lock issue definitely still possible drop collection big 3 4 13 mongo without killing record 40k namespaces changed much since db stats reported say probably fixed recent version well need better proof last time considering high risk upgrading;2019-02-01T22:00:58.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-39357;add links ycsb tpcc linkbench documentation workload documentation js based workloads documented http sys perf workloads s3 website us east 1 amazonaws com would nice similar links ycsb documentation https github com mongodb labs ycsb wiki tpcc https github com 10gen py tpcc blob master readme md linkbench https github com 10gen linkbench blob master readme md could included documentation linked otherwise linked appropriate task pages sys perf;2019-01-28T15:35:58.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-39476;increase macos min target 10 12 mongodb 4 2 current macos policy support latest latest 2 new mongodb release upcoming mongodb 4 2 release macos 10 14 mojave latest 10 12 sierra minimum support;2019-02-08T17:33:48.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-38822;linux repeated execution variant repeat tests change server 36613 introduced second definition test_flags expansions linux 64 repeated execution buildvariant code expansions compile_flags j grep c processor proc cpuinfo variables filesetc scons mongodbtoolchain_gcc vars enable free monoff enable http clientoff test_flags repeatsuites10 shuffle scons_cache_scope shared test_flags excludewithanytagsrequires_http_client tooltags build_mongoreplay true code second definition overrides first;2019-01-03T16:09:46.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-38886;refactor recordstorevalidate implementations storage engines currently one thats almost identical storage engine independent iteration factored storage engine specific part left also implementation recordstorevalidateadaptortraverserecordstore;2019-01-08T16:27:46.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-38914;enable outlier setup failures system_perf yml final stage outlier detection deploying code project yml files required cause setup failures following link shows example https github com mongodb mongo blob a43fb64a1c640378c54d1e61869d607f70154f91 etc evergreen yml#l1744 l1755;2019-01-09T17:15:11.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-39007;switch use rhel62 large distro concurrency tasks enterprise rhel 6 2 inmemory builder seeing oom failures inmemory storage engine occur consistently https evergreen mongodb com task mongodb_mongo_master_enterprise_rhel_62_64_bit_inmem_concurrency_replication_2f67f3c66271e724b48afa2db88e8b6c3317f6ab_19_01_11_18_02_54 changes 2f67f3c https github com mongodb mongo commit 2f67f3c66271e724b48afa2db88e8b6c3317f6ab part server 33161 changing rhel62 large distro concurrency tasks enterprise rhel 6 2 inmemory builder stopgap getting build back green whether increased memory consumption declared expected;2019-01-15T16:48:28.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-39094;update jasper_process py resmoke reflect jasper rpc changes current implementation jasper_process py https github com mongodb mongo blob master buildscripts resmokelib core jasper_process py lines code https github com mongodb mongo blob master buildscripts resmokelib core jasper_process py#l63 l67 handling rpc errors jasper things like signal process already terminated somehow reflective jasper actually handles errors completion make 525 therefore changed check conditions val case https github com mongodb mongo blob master buildscripts resmokelib core jasper_process py#l59 l62 causes test failure replica_sets_kill_secondaries_jscore_passthrough resmoke exhibits inconsistent behavior sends sigkill sigterm processes expects processes alive later time full description problem found comment https jira mongodb org browse make 523focusedcommentid2117281pagecom atlassian jira plugin system issuetabpanels3acomment tabpanel#comment 2117281;2019-01-18T19:45:59.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-47230;burn_in_tests py default rhel 6 2 possible burn_in_tests py variant local use need specify evergreen variant evergreen dependencies would also ideal past burn_in_tests py could used run changed tests locally relevant suites without use evergreen would convenient local version burn_in_tests py could;2020-03-27T14:08:14.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-40245;use attach artifacts link github wiki every task page attach artifacts command https github com evergreen ci evergreen wiki project commands#attach artifacts takes json file containing array links include files section task page link https github com mongodb mongo wiki running tests evergreen tasks locally added evergreen task calls run tests function noformat name running tests evergreen tasks locally link https github com mongodb mongo wiki running tests evergreen tasks locally visibility public noformat;2019-03-20T19:37:34.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-40415;tempfile cleanup test_adb_monitor py tempfiles cleaned test_adb_monitor pythe code creates named temp file also specify temp_dir code arg_test_file tempfile namedtemporaryfile deletefalse name code code arg_test_file tempfile namedtemporaryfile dirself temp_dir deletefalse name code;2019-04-01T16:01:21.000+0000;Minor - P4;1.0;0;0;7
SERVER;SERVER-40421;add failpoint skip retries wiredtiger prepare conflicts operation within wiredtiger attempts get set value prepared another transaction may wt_prepare_conflict error returned note server 40176 addressed also applies operations may scan data mongodb layer enqueues operations retried prepared transaction committed aborted order allow rollback fuzzer generate randomized insert update delete operations may prepare conflcits without hanging would useful add failpoint wiredtigerprepareconflictretry function https github com mongodb mongo blob a3c7bdb31e949cfd11c2c9e24f9a04dfd6c22ba1 src mongo db storage wiredtiger wiredtiger_prepare_conflict h#l56 doesnt retry logic instead command fail writeconflict error response;2019-04-01T17:50:15.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-40468;allow rollbacktest fixture skip collection validation restarting node validate command requires collection x lock cannot acquired outstanding transactions running server rollback fuzzer may attempt call rollbacktest#restartnode started transactions server rollbacktest#restartnode method https github com mongodb mongo blob 4459b439700f096a7b6287fdddde592db8934fe2 jstests replsets libs rollback_test js#l391 therefore take optional skipvalidation boolean pass rst stop call https github com mongodb mongo blob 4459b439700f096a7b6287fdddde592db8934fe2 jstests replsets libs rollback_test js#l422 rollbacktest#transitiontosteadystateoperations method also updated take optional skipdataconsistencychecks boolean wrapped object effectively named parameter acts syntactic alternative usage expectpreparedtxnsduringrollback way avoid calling checkdataconsistency;2019-04-04T04:28:15.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-40469;remove expectpreparedtxnsduringrollback parameter rollbacktest constructor follow work around server 40468 corresponding changes made rollback fuzzer expectpreparedtxnsduringrollback parameter also isnt aptly named outstanding transactions would prevent ability run data consistency checks prepared transactions;2019-04-04T04:29:24.000+0000;Minor - P4;1.0;0;0;7
SERVER;SERVER-40518;backup_restore js tests send sigterm resmoke py may leak mongo shell running fsm workloads sending sigterm resmoke py causes python process immediately exit doesnt register handler signal like server without waiting mongo shell processes spawned also exit though also receive sigterm signal means resmoke py midst spawning mongo shell process run fsm workload could continue run e leaked even parent resmoke py process exits;2019-04-07T22:31:25.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-40532;check binary version doesnt pip install evgtest requirements txt bypass_compile true seeing patch builds failing evergreen due missing python modules bypass_compile set false check binary version https github com mongodb mongo blob 73e719a1ee1c174a3131e19b537b3ae8aa958dad etc evergreen yml#l498 l526 pip installing requirements exits early patch builds;2019-04-08T18:02:21.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-40589;find command validate _internalreadatclustertime null find command hit invariant failure https github com mongodb mongo blob a13c018b51465b04027adee28fd79fd82ed4575b src mongo db commands find_cmd cpp#l330 command sends null timestamp timestamp 0 0;2019-04-11T18:33:27.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-40663;reduce frequency sys perf wt_develop variants adoption occur recent performance meeting discussed limited value storage engines team wt_develop variants running believe may value new adoption push train team perf discovery value perf build baronuntil flesh want reduce spend setting frequency tests run weekly instead daily basis acceptance criteria update sys perf master evergreen project change wt_develop variants run weekly send email perf interest downstream changes applicable;2019-04-16T13:57:39.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-40702;resmoke py wait subprocesses spawned exit keyboardinterrupt resmoke py doesnt wait job threads running tests exit interrupted user https github com mongodb mongo blob b6d336bee9c7adb334333bcb22c432d376458af3 buildscripts resmokelib testing executor py#l145 l185 instead relies sigint received processes process group exit quickly may reduce likelihood user would interrupt resmoke py multiple times due taking longer exit also means processes spawned resmoke py may outlive resmoke py python process behavior caused failures backup_restore js tests spawns resmoke py subprocess order run fsm workloads replsettest instance call thr join even keyboardinterrupt exception occurs however would convenient users also logged message say 2 seconds waiting thread use ctrl send sigquit processes get exit linux ctrl c get exit windows job object job_object_limit_kill_on_job_close set sending sigquit easy way ensure resmoke py exits even mongod process hung codepython def _run_tests self test_queue setup_flag teardown_flag start thread job instance block tests run returns combined report user interrupted pair report contains status timing information tests run threads threads interrupt_flag threading event user_interrupted false try # run job instance thread job self _jobs thr threading thread targetjob args test_queue interrupt_flag kwargsdict setup_flagsetup_flag teardown_flagteardown_flag # wait tests finish executing interrupted user thr daemon true thr start threads append thr # server 24729 need stagger jobs start reduce load # many 5 10 arbitrary # currently enabled evergreen _config stagger_jobs len threads 5 time sleep 10 joined false joined # need pass timeout join keyboardinterrupt exceptions # propagated joined test_queue join testsuiteexecutor _timeout except keyboardinterrupt systemexit interrupt_flag set user_interrupted true else # wait job instances interrupted user self logger debug waiting threads complete thr threads thr join self logger debug threads completed code;2019-04-17T20:58:52.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-40749;include execution generated task configuration file name execution number included generated task configuration file name otherwise later execution overwrite file since evergreen op reruns generate task dont actually use new configuration including execution number still original configuration subsequent executions sub tasks;2019-04-19T20:43:21.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-40758;increase amount memory available logical_session_cache_replication tasks several instances oom killer killed mongod process running one logical_session_cache_replication tasks enterprise rhel 6 2 num_jobs_available expansion equal number cpus end running 4 tests concurrently using 3 node replica set rhel62 small distro c4 xlarge 4 cpu 7 5gib memory change use rhel62 large distro limit maximum number resmoke py jobs 12 rhel62 large distro c4 4xlarge 16 cpu 30gib memory well end running 12 tests concurrently larger ratio available memory number concurrent tests;2019-04-22T15:02:20.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-40761;mongod 4 1 10 latest fails amazon linux glibc_2 14 found mongod 4 1 10 latest fails evergreens linux 64 amzn machines https evergreen mongodb com task mongo_python_driver_tests_all__os_fully_featuredlinux_64_amzn_test_auth_sslauth_ssl_test_latest_standalone_2cb34e4efc84445abb18c45572b2a35c4a81d3e5_19_04_17_22_44_51 code 2019 04 18 102717 852 + curl retry 8 ss http downloads 10gen com linux mongodb linux x86_64 enterprise amzn64 latest tgz max time 300 output mongodb binaries tgz 2019 04 18 102722 508 + tar zxf mongodb binaries tgz 2019 04 18 102722 508 + rm mongodb binaries tgz 2019 04 18 102722 508 + mv mongodb linux x86_64 enterprise amzn64 4 1 10 135 g79d9697912 mongodb 2019 04 18 102722 510 + chmod r +x mongodb 2019 04 18 102722 510 + find name vcredist_x64 exe exec install quiet 2019 04 18 102722 512 + mongodb bin mongod version 2019 04 18 102722 512 mongodb bin mongod lib64 libc 6 version glibc_2 14 found required mongodb bin mongod 2019 04 18 102722 512 mongodb bin mongod lib64 libcrypto 10 version openssl_1 0 2 found required mongodb bin mongod 2019 04 18 102722 513 command failed command encountered problem exit status 1 code server 39952;2019-04-22T16:49:21.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-40801;resmoke py logs invalid excludewithanytags command line argument local execution to_local_args function serializes option_value string https github com mongodb mongo blob 18181d9825ddc62351a6ba94325a38353086248c buildscripts resmokelib parser py#l450 even may actually list excludewithanytags includewithanytags command line options currently two use actionappend noformat 2019 04 24 153106 412 resmoke 2019 04 24t153106 412+0000 verbatim resmoke py invocation buildscripts evergreen_run_tests py suitescore shellreadmodelegacy shellwritemodecompatibility storageenginewiredtiger excludewithanytagsrequires_find_command jobs4 shuffle continueonfailure storageenginecachesizegb1 tagfileetc test_retrial yml logbuildlogger staggerjobson buildidmongodb_mongo_master_enterprise_rhel_62_64_bit_f202c4c1ba24b9f561e8b11dac5b04fa0eeb4919_19_04_24_14_47_53 distroidrhel62 small executionnumber0 projectnamemongodb mongo master gitrevisionf202c4c1ba24b9f561e8b11dac5b04fa0eeb4919 revisionorderid25585 taskidmongodb_mongo_master_enterprise_rhel_62_64_bit_jscore_compatibility_f202c4c1ba24b9f561e8b11dac5b04fa0eeb4919_19_04_24_14_47_53 tasknamejscore_compatibility variantnameenterprise rhel 62 64 bit versionidmongodb_mongo_master_f202c4c1ba24b9f561e8b11dac5b04fa0eeb4919 archivefilearchive json reportfilereport json perfreportfileperf json 2019 04 24 153106 414 resmoke 2019 04 24t153106 413+0000 resmoke py invocation local usage buildscripts resmoke py suitescore storageenginewiredtiger continueonfailure excludewithanytags requires_find_command jobs4 shellreadmodelegacy shellwritemodecompatibility shufflemodeon storageenginecachesizegb1 noformat https evergreen mongodb com task mongodb_mongo_master_enterprise_rhel_62_64_bit_jscore_compatibility_f202c4c1ba24b9f561e8b11dac5b04fa0eeb4919_19_04_24_14_47_53;2019-04-24T15:50:05.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-40862;log collection options createcollection commands involves changing line https github com mongodb mongo blob 8cbbba49935f632e876037f9f2d9eecc779eb96a src mongo db catalog database_impl cpp#l687 useful know things like whether collection created capped collection;2019-04-26T20:24:53.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-40868;log copying source coll temporary coll renamecollection across dbs currently dont log contents source coll copied temporary coll logging happened would make easier see temporary coll corresponds source coll;2019-04-26T21:33:03.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-40872;spawning host data failed task longer includes debug symbols clicking spawn link evergreen leaving load data onto host startup checkbox checked would cause evergreen run evergreen fetch command host provisioned evergreen fetch command would download artifacts attached task using s3 put attach artifacts commands well artifacts attached tasks depends e g compile task uploading debug symbols moved separate upload_debug_symbols task tasks depend upload_debug_symbols task tarball containing debug symbols downloaded evergreen fetch command run attach artifacts command part compile task preserve old behavior noformat name mongo debugsymbols tgz link https s3 amazonaws com mciuploads mongo_debugsymbols visibility public noformat separately remove ignore_artifacts_for_spawn thats specified attach artifacts command etc evergreen yml project configuration file isnt actually used evergreen whether artifacts downloaded spawn host controlled ignore_for_fetch parameter within file description https github com evergreen ci evergreen wiki project commands#attach artifacts;2019-04-27T02:50:57.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-40922;add npm install command run jstestfuzz evergreen function run jstestfuzz function lives https github com mongodb mongo blob e3796fef68ec17ef475e669cd04193aac506bf58 etc evergreen yml#l1803 etc evergreen yml project configuration file wed like remove vendored copy fuzzers dependencies 10gen jstestfuzz repository note removing node_modules directory break world kind change older mongodb mongo commits fail dependencies longer present remove node_modules directory running npm install effect versions fuzzers transitive dependencies pinned package lock json file therefore add npm install command preparation removing node_modules directory break fewer older commits happen typesystem task artifactory evergreen task turns colorpurple purple color note means happen shell exec command call npm test npm run;2019-04-30T22:19:18.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-40237;detect outliers must run post_run_check py report json writtenby post_run_check py https github com mongodb mongo blob master etc system_perf yml#l324 l333 file required automatic rejection order detect outliers must moved https github com mongodb mongo blob master etc system_perf yml#l319 l323 post_run_check py;2019-03-20T14:50:08.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-40063;jstestfuzz_sharded_continuous_stepdown yml running 1 node csrs 3 6 branch changes 2394d07 https github com mongodb mongo commit 2394d07abe45037f44e0cdff7a56abb92e86f0a6 part backporting server 30979 3 6 branch didnt include additional change made 0aeb5ce https github com mongodb mongo commit 0aeb5ce7e8d4a190dac43fd110533eef149f7880#diff 15a75fc99f070098f4435d551de52f44 part server 32468 set num_nodes3 csrs;2019-03-11T04:43:23.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-39578;check binary version function etc evergreen yml depends pyyaml doesnt install check binary version function depends pyyaml available https github com mongodb mongo blob 7951290075a7f8ecadebf789503ec05a7b10da3c etc evergreen yml#l450 l470 evergreen command run part setup function https github com mongodb mongo blob 7951290075a7f8ecadebf789503ec05a7b10da3c etc evergreen yml#l1099 prior run tests function running command install pip requirements function https github com mongodb mongo blob 7951290075a7f8ecadebf789503ec05a7b10da3c etc evergreen yml#l1392 leads importerror noformat 2019 02 14 012206 552 running command shell exec setup step 1 5 2 2019 02 14 012206 572 traceback recent call last 2019 02 14 012206 572 file string line 1 module 2019 02 14 012206 572 importerror module named yaml 2019 02 14 012206 762 python set data mci 933429efe4de9f56d05d29dfd4c70afa venv bin python 2019 02 14 012206 762 mongo version 4 1 8 28 g7951290075 expected version 2019 02 14 012206 762 command failed command pid1971 encountered problem exit status 1 2019 02 14 012206 763 task completed failure noformat https evergreen mongodb com task mongodb_mongo_master_enterprise_rhel_62_64_bit_concurrency_replication_causal_consistency_7951290075a7f8ecadebf789503ec05a7b10da3c_19_02_14_00_07_46;2019-02-14T04:03:37.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-39579;compile mongodb function sys perf doesnt install python dependencies noformat 2019 02 14 050501 706 # script converts generated version string sanitized version string 2019 02 14 050501 706 # use scons uploading artifacts well information scons cache 2019 02 14 050501 706 mongo_versionmongo_version use_scons_cachetrue opt mongodbtoolchain v3 bin python2 buildscripts generate_compile_expansions py compile_expansions yml 2019 02 14 050506 295 traceback recent call last 2019 02 14 050506 295 file buildscripts generate_compile_expansions py line 16 module 2019 02 14 050506 298 import yamlimporterror module named yaml 2019 02 14 050506 298 command failed command pid2443 encountered problem exit status 1 noformat https evergreen mongodb com task sys_perf_compile_linux_64_amzn_compile_83336cb56b269195110253918d226cbba4377a03_19_02_14_04_10_32;2019-02-14T06:07:30.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-39584;compile task performance evergreen project doesnt install python dependencies noformat 2019 02 14 054910 131 running command shell exec step 3 7 2019 02 14 054910 137 # get raw version string r1 2 3 45 gabcdef git 2019 02 14 054910 137 mongo_version git describe 2019 02 14 054910 137 git describe 2019 02 14 054910 149 git describe 2019 02 14 054910 149 # patch build add patch version id version string know 2019 02 14 054910 149 # build patch evergreen task came 2019 02 14 054910 149 true 2019 02 14 054910 149 mongo_versionmongo_version patch performance_6089c4c1d8f166b6b61cec980672779b7cedc303 2019 02 14 054910 149 fi 2019 02 14 054910 149 # script converts generated version string sanitized version string 2019 02 14 054910 149 # use scons uploading artifacts well information scons cache 2019 02 14 054910 149 mongo_versionmongo_version use_scons_cachetrue opt mongodbtoolchain v3 bin python2 buildscripts generate_compile_expansions py compile_expansions yml 2019 02 14 054910 171 traceback recent call last 2019 02 14 054910 171 file buildscripts generate_compile_expansions py line 16 module 2019 02 14 054910 173 import yamlimporterror module named yaml 2019 02 14 054910 173 command failed command pid3003 encountered problem exit status 1 2019 02 14 054910 175 task completed failure noformat https evergreen mongodb com task performance_linux_wt_standalone_compile_6089c4c1d8f166b6b61cec980672779b7cedc303_19_02_14_04_49_50;2019-02-14T16:36:38.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-39655;statistics retrieval wiredtiger uses wrong type wiredtigeroperationstatsfetchstats method uses uint32_t retrieving statistics wiredtiger actual statistics signed values switch int32_t follow server 39026 code change https github com mongodb mongo commit 6a9a5855048df1f4796a4032276d01318c398691 similar;2019-02-19T05:06:59.000+0000;Trivial - P5;1.0;0;0;7
SERVER;SERVER-40180;resmoke py escape null bytes output subprocesses mongod happy write null bytes stdout come user input take setting logcomponentverbosity write 1 including null byte update command one example mongod writing null byte stdout causes resmoke py write null bytes stdout resmoke py currently attempts deal server doesnt necessarily write valid utf 8 logs https github com mongodb mongo blob r4 1 9 buildscripts resmokelib core pipe py#l55 l59 see server 7506 unfortunate consequence tools like grep treat output containing null byte binary rather text order make grep text doesnt need specified engineers filtering log messages server pass resmoke py resmoke py escape b0 noformat b0 noformat;2019-03-17T00:24:59.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-39723;change listindexes command behavior show progress index builds change server 25175 intended fix problem initial sync interacts sync source procure list indexes collection build background index build progress sync source sync source primary node background index build may may complete successfully examples could fail 1 node steps 2 background index build interrupted killop command 3 background index build discovers collection data violates constraint index built index spec constraints initial syncing node proceed attempt build index might complete successfully even index build primary could leave initial syncing node index node initial sync process uses listindexes command sync source obtain lists indexes per collection attempt fix problem changed listindexes command report progress index builds affect background index builds foreground index builds lock collection entirety thus never observed progress listindexes command fix intended effect initial sync sync sources primary state also unintentionally changed behavior initial sync sync sources secondary state sources background index builds destined complete successfully since already done primary node therefore cannot fail index builds also write oplog entries prior completion therefore indication initial syncing node build index listindexes command response hiding progress index builds initial sync sync sources secondary state could result missing indexes initial sync code change restores old behavior listindexes shows progress index builds;2019-02-21T17:50:26.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-40014;system perf default is_patch expansion false prevent writing empty value is_patch runtime yml non patch builds;2019-03-07T15:56:10.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-40034;set setup_group_can_fail_task true compile related task groups evergreen team introduced setup_group_can_fail_task option evg 5759 make possible commands fail setup_group list cause task fail desirable otherwise possible transient network error occur cloning enterprise module compile task successfully build server without enterprise module noformat 2019 01 14 000814 587 + cd src 2019 01 14 000814 587 + git reset hard 58d80a26224da882cbe30d301ed295c302515c9b 2019 01 14 000814 587 + set errexit 2019 01 14 000814 587 + git clone git github com10gen mongo enterprise modules git src mongo db modules enterprise 2019 01 14 000844 713 cloning src mongo db modules enterprise 2019 01 14 000844 713 ssh could resolve hostname github com nodename servname provided known 2019 01 14 000844 714 fatal could read remote repository 2019 01 14 000844 714 please make sure correct access rights 2019 01 14 000844 719 repository exists 2019 01 14 000844 719 head 58d80a2 server 37775 add community rhel7 s390x 2019 01 14 000844 719 command failed problem git command exit status 128 2019 01 14 000844 719 running command shell exec get modified patch files step 8 14 noformat;2019-03-07T23:49:44.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-50362;add resilience repeat execution multiversion tag generation task like sharding_multiversion_gen run generated_resmoke_config directory isnt created placing tag file fails relatively safe op path placing tag file doesnt exist happens shouldnt worst case test run shouldve excluded fail would let us know something wrong;2020-08-18T17:44:38.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-50352;add understanding previous syntax multiversion exclusions wed expected backporting server 48048 immediately would obviate need understand previous yml syntax doesnt seem case looks like use previous release versions multiversion tests rather tips branches add back logic earlier crs server 48048 handle right everything etc backports_required_for_multiversion_tests yml unconditionally excluded;2020-08-18T13:21:40.000+0000;Critical - P2;1.0;2;0;1
SERVER;SERVER-50343;remove support old multiversion exclusion syntax changed yml syntax server 48048 backported 4 4 4 2 remove branches expect non backported syntax last lts versions file example https github com mongodb mongo blob 3b59d5823b8751d9f1927cd01818d3e105a54817 buildscripts evergreen_gen_multiversion_tests py#l415;2020-08-17T20:05:34.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-47989;ensure lint dependencies specified part server 47796 added extra python dependencies linting make sure included lint requirements;2020-05-06T18:18:42.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-48017;dont pass deleted files lint clang_format hanging patch builds hell 6 2 looks like appears trying run file removed;2020-05-07T17:47:30.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-48090;support python 3 6 evergreen py shrub py request via make 1317 support python 3 6 test generation tools ticket make updates server codebase support;2020-05-11T16:43:01.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-48105;selected tests trying access data nonetype saw patch build using selected tests looks like trying use unavailable data noformat 2020 05 06 211303 679 file buildscripts selected_tests py line 498 module 2020 05 06 211303 679 main # pylint disableno value parameter 2020 05 06 211303 679 file data mci fbc5e0e7b726bb8f530a138052af17b6 venv lib python3 7 site packages click core py line 829 __call__ 2020 05 06 211303 679 return self main args kwargs 2020 05 06 211303 679 file data mci fbc5e0e7b726bb8f530a138052af17b6 venv lib python3 7 site packages click core py line 782 main 2020 05 06 211303 679 rv self invoke ctx 2020 05 06 211303 679 file data mci fbc5e0e7b726bb8f530a138052af17b6 venv lib python3 7 site packages click core py line 1066 invoke 2020 05 06 211303 679 return ctx invoke self callback ctx params 2020 05 06 211303 679 file data mci fbc5e0e7b726bb8f530a138052af17b6 venv lib python3 7 site packages click core py line 610 invoke 2020 05 06 211303 679 return callback args kwargs 2020 05 06 211303 679 file buildscripts selected_tests py line 493 main 2020 05 06 211303 679 task_expansions repos origin_build_variants 2020 05 06 211303 679 file buildscripts selected_tests py line 423 run 2020 05 06 211303 679 changed_files 2020 05 06 211303 679 file buildscripts selected_tests py line 383 _get_task_configs 2020 05 06 211303 679 selected_tests_variant_expansions related_tasks build_variant_config 2020 05 06 211303 679 file buildscripts selected_tests py line 327 _get_task_configs_for_task_mappings 2020 05 06 211303 679 build_variant_config 2020 05 06 211303 679 file buildscripts selected_tests py line 246 _get_evg_task_config 2020 05 06 211303 679 task_vars task run_tests_command vars 2020 05 06 211303 679 typeerror nonetype object subscriptable 2020 05 06 211303 747 command failed command encountered problem error waiting process d205ecea 4c74 4768 990d 07df3c320cc4 exit status 1 2020 05 06 211303 747 task completed failure 2020 05 06 211303 750 running post task commands noformat;2020-05-11T20:12:43.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-48109;skip known broken python resmoke tests mark known broken tests ignored unittest annotations rather via resmoke suite configs confirm original author exclude lines;2020-05-11T21:01:58.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-48113;add test cwd resmoke tests make dumb sanity test asserts cwd mongo repo root perhaps also import key modules detect user pip install ing right things goal help users use ides assume cwd buildscripts directory something else otherwise results cryptic error messages ensure first test run naming file something like test_aaa_sanitycheck;2020-05-11T21:05:15.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-48147;remove fallbacklogger current buildlogger implementation fallback logger logs stderr https github com mongodb mongo blob e2602ad053b2120982fbcac8e33e1ad64e6ec30a buildscripts resmokelib logging loggers py#l352 cases buildlogger failing https github com mongodb mongo blob e2602ad053b2120982fbcac8e33e1ad64e6ec30a buildscripts resmokelib logging buildlogger py#l53 fallback logger longer needed use jasper logging removed;2020-05-12T17:37:33.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-48163;fix jstestfuzz__multiversion generation recent refactor tasks generated cause issue generating jstestfuzz__multiversion tests looks like trying generate extra tasks without needed configuration causes generate task fail;2020-05-12T20:35:23.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-48287;dont run fuzzerrestoreclustersettings suites fcv 4 2 server 47716 jstestfuzz_sharded_multiversion;2020-05-19T02:56:15.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-48375;create jepsen smoke test add bang required builder dont accidentally break jepsen future;2020-05-21T19:18:20.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-47334;dont restart fixtures currently handling stopexecution exception fixture crashes test execution throw https github com mongodb mongo blob 85a915d3b49c0cd0b106f40df55a68a2f6779de1 buildscripts resmokelib testing job py#l180 stopexecution exception however archiving executed part finally block restart https github com mongodb mongo blob 85a915d3b49c0cd0b106f40df55a68a2f6779de1 buildscripts resmokelib testing hook_test_archival py#l136 fixture performing archiving even stopping execution best unnecessary wasteful worst confusing users;2020-04-03T20:09:31.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-47493;complete todo listed server 47137 todo codebase referencing resolved ticket assigned please follow link see lines code referencing resolved tickethttps github com mongodb mongo searchqserver 47137typecodethe next steps ticket either remove outdated todo follow steps todo correct latter please update summary description ticket represent work youre actually;2020-04-12T04:53:10.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-47537;adjust frequency less common build variants 4 4 following build variants run commits 4 4 branch dont really need run frequently comparison run day less master enterprise rhel 7 0 libunwind enterprise rhel 7 0 dagger hot_backups rhel 7 0;2020-04-14T16:06:13.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-47769;ensure gather_failed_unittests target cpp files https github com mongodb mongo blob 322f541cd162e7f99249115a8debdaafb8a3dedb etc evergreen yml#l3459 find command capable targeting source files exe expands empty string non windows add operator checks whether file type executable;2020-04-24T20:51:04.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-47592;tasks missing buildvariants version screen shot patches page see results five variants looks like two additional variants shown titles;2020-04-13T14:22:39.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-49764;update instructions running genny sys perf patch builds instructions system_perf yml genny patch tasks mentions force workloads longer option genny update instructions new approach may also consider updating genny reject unknown arguments;2020-07-21T15:41:09.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-49786;freeze dsi genny non master perf projects pm 1822 change interface dsi sys perf evergreen yamls minimize risk breaking non master branches overhead multiple backports pm 1822 wish freeze version dsi use following projects# sys perf v4 4 https github com mongodb mongo blob v4 4 etc system_perf yml # perf v4 4 https github com mongodb mongo blob v4 4 etc perf yml # sys perf v4 2 https github com mongodb mongo blob v4 2 etc system_perf yml # perf v4 2 https github com mongodb mongo blob v4 2 etc perf yml # sys perf v4 0 https github com mongodb mongo blob v4 0 etc system_perf yml # perf v4 0 https github com mongodb mongo blob v4 0 etc perf yml # sys perf v3 6 https github com mongodb mongo blob v3 6 etc system_perf yml # perf v3 6 https github com mongodb mongo blob v3 6 etc perf yml create legacy branch dsi modify non master evergreen yamls use means changes dsi usable old perf projects unless changes backported end pm 1822 could selectively bring required projects back dsi master leave projects forever frozen;2020-07-21T21:17:29.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-49818;enterprise windows required builder longer runs burn_in_tests non required builder changes 9a421e1 https github com mongodb mongo commit 9a421e19cef1caa2627d4776db700ae5c8751932 part server 46450 reduced set evergreen tasks run enterprise windows build variant restore burn_in_tests_build_variant enterprise windows setting https github com mongodb mongo commit deca8251f356292eb1c813b65c4f6ebd458a1094#diff 71ccc9b828b2d68dab47c8be07ab6f96l9137 greatly limits ability patch builds detect whether new modified test going fail post commit enterprise windows build variant;2020-07-23T02:09:36.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-49945;mark mypip ini file hidden small thing linter configuration files hidden files starting exception mypy ini brief glance docs suggests could hidden would slightly reduce clutter top tree;2020-07-28T12:57:45.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-50255;unittest task failures evergreen dont capture shared library files lack shared library files prevents core dump captured usable heres patch build demonstrates problem https spruce mongodb com task mongodb_mongo_master_linux_64_debug_unittests_patch_b9d6ae55fd793711dd539fa9322ab5f916b4c89a_5f31ae7357e85a0c7c306166_20_08_10_20_31_46 files;2020-08-11T17:17:50.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-48455;migrate oom tracker logic evergreen logic https github com mongodb mongo blob 21ef00aa502d7b74e19bc3b6b76f285c9860da3e etc evergreen yml#l3248 track evergreen tasks failed oom kills incorporated evergreen https github com evergreen ci evergreen commit ff076a5811c0ce205988ffa16f0e3c1fad3fb857 evergreens version enabled checks removed tasks pre post probably interim period run validate evergreens version;2020-05-27T20:41:48.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-48579;merge etc pip components mypy req etc pip components lint req reason python requirements linting broken 2 files one general requirements mypy guess due mypy able run python 2 python 3 used everywhere doesnt seem reason prevent us merging two requirements files;2020-06-03T22:00:35.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-48590;qol improvements hang analyzer 1 log raw_stacks file process instead one file processes behavior prior server 46682 debugger_mongod xxxxx log files used get debugger_mongod log file cant split per process logs call gdb 2 pass ofile hang analyzer usage assert soon get hang analyzer output artifact task;2020-06-04T15:21:29.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-48703;dynamically split causally_consistent_hedged_reads_jscore_passthrough looks like causally_consistent_hedged_reads_jscore_passthrough suites recently added looks like suite runtime 1 5 hours convert suite dynamically generated suite split sub suites run parallel server engineer want causally_consistent_hedged_reads_jscore_passthrough split subsuites run parallel lower makespans patch builds ac causally_consistent_hedged_reads_jscore_passthrough dynamically split sub suites;2020-06-10T20:44:11.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-48706;add jiraclient req dev requirements txt opening cr errors jira module missing since developers need open crs jiraclient req included dev requirements txt;2020-06-10T21:51:16.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-48714;highlight commit queue validation messages task logs send commit queue validation messages stderr put red task logs making easier find;2020-06-11T14:17:17.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-49041;check live record binary exists specified resmoke py invocation address todo buildscripts resmokelib core process py https github com mongodb mongo blob 3c14c24170a43252ff481c5cffad9014d5a93db2 buildscripts resmokelib core process py#l123 bear mind argument might binary path might absolute file path;2020-06-23T18:57:39.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-49097;sys perf builds differ release builds sys perf artifacts multiple gigs whereas regular waterfall builds dozens megs cursory glance shows may debug build sys perf;2020-06-25T14:30:26.000+0000;Major - P3;0.5;1;0;4
SERVER;SERVER-49127;update default variant burn_in_tests py server team switched using enterprise rhel 62 64 bit dynamic required main required build variant running tasks update default variant burn_in_tests py reflect server engineer want burn_in_tests py default using enterprise rhel 62 64 bit dynamic required run configuration needed generate tests pulled correct variant ac default_variant set correctly burn_in_tests py https github com mongodb mongo blob master buildscripts burn_in_tests py#l56;2020-06-25T21:40:34.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-49199;selected_tests_gen run patch builds noop waterfall currently selected_tests_gen runs waterfall every 7 days https github com mongodb mongo blob fdd66b8c2c0f5c818a01ecd64a27b0b7c0ca28d6 etc evergreen yml#l12736 resulting occasional bfs https jira mongodb org browse bf 17966 since selected_tests_gen task really useful making patch builds efficient reason run waterfall server engineer selected_tests_gen run waterfall takes unnecessary resources provide value ac selected_tests_gen run every 7 days waterfall noops rather runs selected_tests py script;2020-06-30T19:10:37.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-49335;publish_packages use barque api key since ldap server longer supported publish_packages tasks auth directly using api key barque user instead ldap username password;2020-07-07T16:35:36.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-49402;misleading error message connecting data lake users connect atlas data lake adl mongo shell may sometimes encounter error noformat looks like mongodb atlas cluster please ensure ip whitelist allows connections network noformat adl uris query mongodb net suffix mongodb net suffix update https github com mongodb mongo blob 43e2423bae07e13cf624b9d5fb74e62bd1959b19 src mongo shell mongo js#l360 l370 provide correct error message adl users;2020-07-09T15:01:18.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-49488;mongo shell conflating authentication network errors mongo shell attempts authenticate right connects server returns exception https github com mongodb mongo blob 43e2423bae07e13cf624b9d5fb74e62bd1959b19 src mongo shell mongo js#l360 l370 unable means client credentials invalid interpret _connection_ failure raise exception unexpected shell would conflate authentication problem general class network connection failures heres clients see thats wrong invalid credentials noformat looks like mongodb atlas cluster please ensure ip whitelist allows connections network noformat unclear expected behavior confusing best using generic error message instead specifically offering clients check ip allowlist would less confusing users fix;2020-07-13T22:49:32.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-48961;add expansion powercycle user evergreen yml add expansion powercycle build variants sets username administrator windows evergreen user otherwise wrapper script created server 48960 use expansion value calling remoteoperations;2020-06-18T15:55:26.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-37490;increase connecttimeout powercycle increase connecttimeout used powercycle tests 10 30 seconds;2018-10-05T15:31:21.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-37478;run agg fuzzer linux 64 run fuzzer linux 64 use fuzzer patch builds allow us catch bugs found new fuzzer improvements slip mainline evergreen;2018-10-04T20:29:07.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-37467;collect_resource_info py recover transient errors output useful missed opportunity output file doesnt contain data could noformat 2018 09 18 173129 082 traceback recent call last 2018 09 18 173129 082 file buildscripts collect_resource_info py line 90 module 2018 09 18 173129 082 main 2018 09 18 173129 082 file buildscripts collect_resource_info py line 40 main 2018 09 18 173129 082 response requests get http localhost2285 status 2018 09 18 173129 082 file opt mongodbtoolchain v2 lib python2 7 site packages requests api py line 72 get 2018 09 18 173129 082 return request get url paramsparams kwargs 2018 09 18 173129 082 file opt mongodbtoolchain v2 lib python2 7 site packages requests api py line 58 request 2018 09 18 173129 083 return session request methodmethod urlurl kwargs 2018 09 18 173129 083 file opt mongodbtoolchain v2 lib python2 7 site packages requests sessions py line 508 request 2018 09 18 173129 083 resp self send prep send_kwargs 2018 09 18 173129 083 file opt mongodbtoolchain v2 lib python2 7 site packages requests sessions py line 618 send 2018 09 18 173129 083 r adapter send request kwargs 2018 09 18 173129 083 file opt mongodbtoolchain v2 lib python2 7 site packages requests adapters py line 490 send 2018 09 18 173129 083 raise connectionerror err requestrequest 2018 09 18 173129 083 requests exceptions connectionerror connection aborted badstatusline noformat;2018-10-04T01:25:10.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-36507;downgrading wt fcv 4 2 4 0 requires acquiesced system 4 0 3 6 fcv downgrade path storage would acquiesce system closing opening wt connection https github com mongodb mongo blob aa0062e8aaa5a8273bb33a2afaf8c9cdf5fbede7 src mongo db storage wiredtiger wiredtiger_kv_engine cpp#l665 l670 originally done facilitate changing table logging settings 4 2 development optimistically removed close open along table logging changes https github com mongodb mongo commit 013b82bf5f58bd7de8ae2f4d28d24f82afa22e64#diff 8fd4ad8935bb2bf3f91bb01f4785c544l659 assumption changing file compatibility reconfigure remains upgrade downgrade path need acquiesced degree;2018-08-07T19:56:20.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-36043;systemd unit mongod starts multi user target mongod service unit configured part multi user target unit configuration also following parameter afternetwork target basically makes mongod start network multi user one latest targets trigger causes problems servers network storage services authentication services like ad still pending start mongod would able start depends removing parameter would make systemd start mongod part correct target needed reason aftermulti user target would avoid problems dependencies services affects native packages rpm deb systemd based linux distros;2018-07-10T09:45:05.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-36530;run agg expression fuzzer evergreen add evergreen tasks new agg expression fuzzer;2018-08-08T16:35:37.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-34703;write test transactions concurrent index drops creates want test interaction transaction writes index creates drops test transaction writes documents covered index created concurrently similarly index dropped concurrently verify drop createindex blocks transaction commits maxtimems expires may consider server 34704 part test;2018-04-26T18:50:07.000+0000;Minor - P4;1.0;0;0;7
SERVER;SERVER-34704;write test transactions collections renamed concurrently want test interaction transactions collection renames test cases transactions writes collection concurrently renamed b verify renamecollection blocks transaction commits maxtimems expires test b database different databases;2018-04-26T18:53:58.000+0000;Minor - P4;1.0;0;0;7
SERVER;SERVER-37387;mongo_lock py graph displays lock request type lockmanager locks changes server 34738 display lock requesters mode need display lock holders mode well change following code print mongodb lock held waited format lock_head lock_request mode lock_holder lock_waiter code code # code set lock_mode needs added print mongodb lock held waited format lock_head lock_mode lock_holder lock_waiter lock_request mode code references lock_request mode modified well mode properly associated holder;2018-09-28T19:19:28.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-36751;prevent concurrent dropdatabase commands concurrency_simultaneous_replication suite problem concurrency_simultaneous_replication test suite run 10 operations parallel database theres small chance e g 5 workloads operation could dropdatabase slower build variants single dropdatabase command take multiple minutes finish heavy activity workloads happening parallel tests retry operation 10 minutes https github com mongodb mongo blob 17686781044525b9c3fbdf06ca326c8f4fb383ba jstests libs override_methods implicitly_retry_on_database_drop_pending js#l148 databasedroppending errors encountered seeing error getlasterror command used https github com mongodb mongo blob 17686781044525b9c3fbdf06ca326c8f4fb383ba jstests libs override_methods implicitly_retry_on_database_drop_pending js#l25 wait dropdatabase command committed variability order getlasterror returns different workload clients may cause certain workload clients always stuck behind clients dropdatabase commands happens client receive another databasedroppending error client unable distinguish https github com mongodb mongo blob 17686781044525b9c3fbdf06ca326c8f4fb383ba jstests libs override_methods implicitly_retry_on_database_drop_pending js#l141 whether error caused dropdatabase command new one causing new wait continue eat 10 minute timeout small probability cycle happen handful times row combined slow multi minute dropdatabase commands exceed 10 minute timeout solution solution avoid retrying dropdatabase commands returns databasedroppending error cause workload transition new state continue new state longer dropdatabase call wait ongoing dropdatabase call database finally dropped guaranteed none clients waiting would another drop database able proceed might edge cases one client able execute multiple commands one commands another dropdatabase likelihood happening 5 times row much smaller negligible correctness perspective change make dropdatabase implicitly ops cause loss test coverage databases cant dropped parallel first place tests run parallel dropdatabases also randomized tests dont expect operations succeed parallel clients operating database also write dedicated regression test high number collection ddl operations dropping creating databases simulate timeout failures weve seen changes ticket prevent test failing new test changes retry dropdatabase limited affect concurrency_simultaneous_replication suite seen failure elsewhere far;2018-08-17T21:26:43.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-34567;remove build new tools step compile benchmark task specify use new tools scons task_compile_flags expansions need building new tools compile_benchmarks task unnecessary;2018-04-19T15:56:51.000+0000;Minor - P4;1.0;0;0;7
SERVER;SERVER-36431;powercycle check existence process accessing attributes possible iterating list processes process could finish accessed code proc psutil process_iter proc name self name self pids append proc pid code additional check added code psutil pid_exists proc pid proc name self name code;2018-08-03T14:50:08.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-34587;update signing key 4 0 using 3 8 key right switch 4 0;2018-04-20T14:26:39.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-37694;coverity analysis defect 105088 redundant test test always evaluates samedefect 105088 static_c checker deadcode subcategory redundant_test file src mongo db storage biggie store h function mongobiggieradixstorestd__cxx11basic_stringchar stdchar_traitschar stdallocatorchar std__cxx11basic_stringchar stdchar_traitschar stdallocatorchar_merge3helper mongobiggieradixstorestd__cxx11basic_stringchar stdchar_traitschar stdallocatorchar std__cxx11basic_stringchar stdchar_traitschar stdallocatorcharnode const mongobiggieradixstorestd__cxx11basic_stringchar stdchar_traitschar stdallocatorchar std__cxx11basic_stringchar stdchar_traitschar stdallocatorcharnode const mongobiggieradixstorestd__cxx11basic_stringchar stdchar_traitschar stdallocatorchar std__cxx11basic_stringchar stdchar_traitschar stdallocatorcharnode stdvectormongobiggieradixstorestd__cxx11basic_stringchar stdchar_traitschar stdallocatorchar std__cxx11basic_stringchar stdchar_traitschar stdallocatorcharnode stdallocatormongobiggieradixstorestd__cxx11basic_stringchar stdchar_traitschar stdallocatorchar std__cxx11basic_stringchar stdchar_traitschar stdallocatorcharnode stdvectorunsigned char stdallocatorunsigned char src mongo db storage biggie store h line 1337 colorred condition basenode value basenode cannot null color codefirst line1337 else basenode othernode othernode basenode othernode code src mongo db storage biggie store h line 1312 colorred condition basenode taking true branch value basenode null color codefirst line1312 node basenode othernode code src mongo db storage biggie store h line 1337 colorred condition basenode must true color codefirst line1337 else basenode othernode othernode basenode othernode code;2018-10-22T15:43:12.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-37668;disable aggregation fuzzer windows 2008r2 debug failing due issues server 37429 others still need investigated;2018-10-19T17:01:02.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-34624;remove c++ 14 builder 3 4 remove c++14 builder happens debug builder run test sized vms 3 4 branch avoid spurious timeouts original descriptionreduce number jobs debug builders using strategy described server 29355;2018-04-23T20:50:58.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-36073;save stats benchrunnerfinish json file mongoebench add new command line output path save benchrun stats;2018-07-11T16:30:00.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-37599;log exit code shell spawned processes print res exitcode https github com mongodb mongo blob c6bceb292246721c5a0950e84d6b71ee1bc04bdf src mongo shell servers js#l1254 shell fails spawn process assist debugging;2018-10-12T17:01:48.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-36756;log githash 10gen jstestfuzz repository fuzzers self tests fail came looking bf ticket sviatlana zuiko currently information version 10gen jstestfuzz repository running fails https github com mongodb mongo blob d0b0d782a14e9c0ac5724e35fb0bc2e20abcca67 etc evergreen yml#l1699 l1712 build baron ends going timestamp evergreen task ran following information log 10gen jepsen repository https github com mongodb mongo blob d0b0d782a14e9c0ac5724e35fb0bc2e20abcca67 etc evergreen yml#l1575 l1577 noformat branch git symbolic ref short head commit git show prettyformath ar echo git branch branch commit commit noformat;2018-08-18T14:01:13.000+0000;Minor - P4;1.0;0;0;7
SERVER;SERVER-34867;run powercycle tests storage recovery logging set 2 test failures debugging would aided recovery logging turned e g stable timestamp node takes checkpoints https github com mongodb mongo blob c0d6b410b15227051ca96dc54f8d6c1df77630cf src mongo db storage wiredtiger wiredtiger_kv_engine cpp#l242 l243;2018-05-07T17:12:25.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-36817;replsetfreeze command run stepdown thread may fail server already primary part changes address server 35383 based comment https jira mongodb org browse server 35124focusedcommentid1916761pagecom atlassian jira plugin system issuetabpanelscomment tabpanel#comment 1916761 server 35124 stepdown thread resmoke py runs replsetfreeze 0 command make former primary electable next round stepdowns since primary stepped 10 seconds default https github com mongodb mongo blob 2bed54b084995f2c2dd048b6a70b6fd678e1ac30 buildscripts resmokelib testing hooks stepdown py#l28 possible enough time passed primary tried step back replsetfreeze 0 command run either need handle operationfailure cannot freeze node primary running election state primary exception prevent occurring;2018-08-23T04:03:10.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-35100;log python stack trace hook dynamic test fails currently dynamic test run hook fails exception thrown gets logged stack trace logs unrelated cause failure adds noise removed log statement https github com mongodb mongo blob 6ab1592260c9b21d802aa65a11d268c0a97b11a7 buildscripts resmokelib testing hooks interface py#l79;2018-05-18T21:48:17.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-36980;remove old aggregation fuzzer evergreen aggregation fuzzer revamped remove previous aggregation fuzzer evergreen;2018-09-04T20:25:35.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-36819;enterprise rhel 7 1 ppc64le builder attempts run concurrency_simultaneous_replication rhel72 zseries build distro leads system failures evergreen attempting run binaries compiled powerpc zseries platform come long ago server 35416 might audit concurrency tasks added recently noformat 2018 08 11 134106 435 sh line 34 mongodb linux ppc64le enterprise rhel71 4 1 1 306 gd6b5625 bin mongo cannot execute binary file noformat noformat name enterprise rhel 71 ppc64le display_name enterprise rhel 7 1 ppc64le tasks name concurrency_simultaneous_replication distros rhel72 zseries build noformat https github com mongodb mongo blob 2bed54b084995f2c2dd048b6a70b6fd678e1ac30 etc evergreen yml#l11568 l11570;2018-08-23T05:06:01.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-35165;disable enable update_test_lifecycle evergreen task 4 0 branch git log since28 days prettyformath returns commits prior created 4 0 branch therefore prior created mongodb mongo v4 0 evergreen project;2018-05-22T18:09:30.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-35233;powercycle remote collection validation skip views remote collection validation fail view exists;2018-05-25T17:00:36.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-35203;unittests accept loglevel might nice add optional loglevelint parameter unittest_main locally debugging unittest failures possible ramp debugging log output main code thats called tests;2018-05-24T09:43:26.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-35197;change cleaneveryn cleanupconcurrencyworkloads concurrency_replication_causal_consistency suite given fact cleanupconcurrencyworkloads hook caused bunch test failures patch https evergreen mongodb com version 5b05b067e3c3314cc0af1572 going switch back cleaneveryn put todo comment ticket number;2018-05-23T20:31:30.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-35195;remove python linting rule requiring docstring magic functions add exception rule d105 pydocstyles remove redundant magic method docstrings docstrings magic functions dont provide much value theyre mostly useful describing parameters checked d105;2018-05-23T19:07:40.000+0000;Trivial - P5;1.0;0;0;7
SERVER;SERVER-35175;add drivers nightly testing 4 0 branch weve branched 4 0;2018-05-22T19:47:58.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-37289;use authenticated client run refreshlogicalsessioncachenow command resmoke sharded cluster fixture able use pymongo 3 6+ resmoke need use authenticated client run refreshlogicalsessioncachenow since pymongo 3 6+ use implicit sessions command run unauthenticated hit server 34820 fail users authenticated message;2018-09-24T15:12:33.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-36780;debian packages mongodb 4 0 1 missing mongodb 4 0 1 released 6 august 2018 https docs mongodb com manual release notes 4 0 #aug 6 2018 installation documentation refers version 4 0 1 install specific release mongodb https docs mongodb com manual tutorial install mongodb debian #install specific release mongodb version appear exist apt repository apt cache policy mongodb org mongodb org installed none candidate 4 0 0 version table 4 0 0 500 500 http repo mongodb org apt debian stretch mongodb org 4 0 main amd64 packages appears apply debian stretch debian jessie looking apt release file stretch http repo mongodb org apt debian dists stretch mongodb org 4 0 release jessie http repo mongodb org apt debian dists jessie mongodb org 4 0 release appear updated since end june;2018-08-21T11:55:17.000+0000;Minor - P4;1.0;0;0;7
SERVER;SERVER-34788;improve error message assert commandworked failed gets unexpected type assert commandworked assert commandfailed passed non object throw codejs function _assertcommandworked res msg ignorewriteerrors ignorewriteconcernerrors _validateassertionmessage msg typeof res object doassert unknown response given commandworked code leads stack traces hard reason code validatecollectionsjob0b23b mdb_793e ent_7007 qa_a6ce 1525027831965 041validatecollections 2018 04 29t185839 654+0000 2018 04 29t185839 653+0000 e query js error unknown response given commandworked validatecollectionsjob0b23b mdb_793e ent_7007 qa_a6ce 1525027831965 041validatecollections 2018 04 29t185839 654+0000 doassert src mongo shell assert js1814 validatecollectionsjob0b23b mdb_793e ent_7007 qa_a6ce 1525027831965 041validatecollections 2018 04 29t185839 654+0000 _assertcommandworked src mongo shell assert js48513 validatecollectionsjob0b23b mdb_793e ent_7007 qa_a6ce 1525027831965 041validatecollections 2018 04 29t185839 654+0000 assert commandworked src mongo shell assert js59416 validatecollectionsjob0b23b mdb_793e ent_7007 qa_a6ce 1525027831965 041validatecollections 2018 04 29t185839 654+0000 collectionvalidator validatenodes jstests hooks validate_collections js12817 validatecollectionsjob0b23b mdb_793e ent_7007 qa_a6ce 1525027831965 041validatecollections 2018 04 29t185839 655+0000 collectionvalidator validatenodes jstests hooks validate_collections js12713 validatecollectionsjob0b23b mdb_793e ent_7007 qa_a6ce 1525027831965 041validatecollections 2018 04 29t185839 655+0000 jstests hooks run_validate_collections js365 validatecollectionsjob0b23b mdb_793e ent_7007 qa_a6ce 1525027831965 041validatecollections 2018 04 29t185839 655+0000 jstests hooks run_validate_collections js52 validatecollectionsjob0b23b mdb_793e ent_7007 qa_a6ce 1525027831965 041validatecollections 2018 04 29t185839 655+0000 failed load jstests hooks run_validate_collections js validatecollectionsjob0b23b mdb_793e ent_7007 qa_a6ce 1525027831965 041validatecollections 2018 04 29t185839 658+0000 full collection validation running b23b mdb_793e ent_7007 qa_a6ce 1525027831965 041 failed code could least include type res assertion error message;2018-05-02T15:09:34.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-35850;update filename suffix v4 0 latest nightly builds done server 35162 buildscripts generate_compile_expansions py buildscripts generate_compile_expansions_shared_cache py;2018-06-27T20:21:24.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-34793;add call bf suggestion server failed task completion add call bf suggestion server task registration api post phase tasks failed tests api call must alter task execution result;2018-05-02T15:59:09.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-37120;turn linux replset initialsync logkeeper build variant 3 4 3 6 branches tests longer run mongod versions longer compatible fcv version snapshot;2018-09-13T14:23:42.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-37228;escape double quotes hang analyzers waitsfor graph double quotes always escaped right see failure https evergreen mongodb com task mongodb_mongo_master_enterprise_rhel_62_64_bit_replica_sets_jscore_passthrough_patch_6818230171cb12727892802c608ba9247815ef06_5ba32958e3c331286f2645a2_18_09_20_05_00_33##257b2522compare2522253a255b257b2522hash2522253a25226818230171cb12727892802c608ba9247815ef062522257d252c257b2522hash2522253a25226818230171cb12727892802c608ba9247815ef062522257d255d257d example noformat # legend# thread 1 lock 1 indicates thread 1 waiting lock 1# lock 2 thread 2 indicates lock 2 held thread 2# cycle detected graphdigraph mongod+lock status conn41 thread 0x7f63bf32b700 lwp 71045 lock 0x7f63df74db00 mongomode_x lock 0x7f63df74db00 mongomode_x rssync 0 thread 0x7f63bc818700 lwp 69184 repl writer worker 10 thread 0x7f63b460b700 lwp 69197 lock 0x7f63df74db00 mongomode_x clientcursormon thread 0x7f63c2f31700 lwp 68966 lock 0x7f63df74db00 mongomode_x conn41 thread 0x7f63bf32b700 lwp 71045 labelconn41 thread 0x7f63bf32b700 lwp 71045 lock 0x7f63df74db00 mongomode_x labellock 0x7f63df74db00 mongomode_x rssync 0 thread 0x7f63bc818700 lwp 69184 labelrssync 0 thread 0x7f63bc818700 lwp 69184 repl writer worker 10 thread 0x7f63b460b700 lwp 69197 labelrepl writer worker 10 thread 0x7f63b460b700 lwp 69197 clientcursormon thread 0x7f63c2f31700 lwp 68966 labelclientcursormon thread 0x7f63c2f31700 lwp 68966 noformat;2018-09-20T17:39:26.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-38312;unable run jstestfuzz tasks variants long names fuzzers self tests run jstestfuzz tasks writes output filename includes task id https github com mongodb mongo blob 01d25f74348e8594e96a9e01dfca60538677d078 etc evergreen yml#l1922 changes 18452b9 https github com mongodb mongo commit 18452b94f497e4f25493477ee45e759d449871e9 part server 38116 leads long filename noformat npm test npm_test task_id log 21 noformat https evergreen mongodb com task_log_raw mongodb_mongo_master_enterprise_rhel_62_64_bit_majority_read_concern_off_jstestfuzz_interrupt_replication_0_enterprise_rhel_62_64_bit_majority_read_concern_off_patch_41c44d02cf39ef581888bed68c547e4ed9b5a323_5bff8490e3c33123cb9e7dfa_18_11_29_06_19_05 0typet noformat 2018 11 29 065617 137 npm test npm_test mongodb_mongo_master_enterprise_rhel_62_64_bit_majority_read_concern_off_jstestfuzz_interrupt_replication_0_enterprise_rhel_62_64_bit_majority_read_concern_off_patch_41c44d02cf39ef581888bed68c547e4ed9b5a323_5bff8490e3c33123cb9e7dfa_18_11_29_06_19_05 log 21 2018 11 29 065617 137 sh line 16 npm_test mongodb_mongo_master_enterprise_rhel_62_64_bit_majority_read_concern_off_jstestfuzz_interrupt_replication_0_enterprise_rhel_62_64_bit_majority_read_concern_off_patch_41c44d02cf39ef581888bed68c547e4ed9b5a323_5bff8490e3c33123cb9e7dfa_18_11_29_06_19_05 log file name long noformat;2018-11-29T15:20:33.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-38305;move sys perf compile tasks amazon linux 2 part etc system_perf yml project configuration enterprise version server built amazon linux 2 evg 727 evg 5379 addressed go ahead make sys perf compile tasks include enterprise module everywhere outcome ticket involve two build variants# compile amazon linux 2# wt develop compile amazon linux 2note currently running sys perf workloads amazon linux 2 amis;2018-11-28T22:37:54.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-36274;enable ycsb throughput analysis sys perf undo server 32011;2018-07-25T13:12:38.000+0000;Major - P3;0.5;1;0;4
SERVER;SERVER-34306;validate_collections js hook report node failed validation reporting failure hard trace back node validation failed e g noformat validatecollectionsjob14explain5validatecollections 2018 03 29t160300 107+0000 connecting mongodb localhost23500 localhost23501 localhost23502 replicasetrs validatecollectionsjob14explain5validatecollections 2018 03 29t160300 125+0000 collection validation failed response validatecollectionsjob14explain5validatecollections 2018 03 29t160300 134+0000 ns config transactions validatecollectionsjob14explain5validatecollections 2018 03 29t160300 134+0000 ninvaliddocuments numberlong 0 validatecollectionsjob14explain5validatecollections 2018 03 29t160300 163+0000 nrecords 8 validatecollectionsjob14explain5validatecollections 2018 03 29t160300 164+0000 nindexes 1 validatecollectionsjob14explain5validatecollections 2018 03 29t160300 187+0000 keysperindex validatecollectionsjob14explain5validatecollections 2018 03 29t160300 189+0000 config transactions _id_ 9 validatecollectionsjob14explain5validatecollections 2018 03 29t160300 191+0000 validatecollectionsjob14explain5validatecollections 2018 03 29t160300 208+0000 indexdetails validatecollectionsjob14explain5validatecollections 2018 03 29t160300 210+0000 config transactions _id_ validatecollectionsjob14explain5validatecollections 2018 03 29t160300 211+0000 valid false validatecollectionsjob14explain5validatecollections 2018 03 29t160300 214+0000 validatecollectionsjob14explain5validatecollections 2018 03 29t160300 232+0000 validatecollectionsjob14explain5validatecollections 2018 03 29t160300 236+0000 valid false validatecollectionsjob14explain5validatecollections 2018 03 29t160300 249+0000 warnings validatecollectionsjob14explain5validatecollections 2018 03 29t160300 249+0000 errors validatecollectionsjob14explain5validatecollections 2018 03 29t160300 256+0000 one indexes contain invalid index entries validatecollectionsjob14explain5validatecollections 2018 03 29t160300 261+0000 validatecollectionsjob14explain5validatecollections 2018 03 29t160300 300+0000 advice corrupt namespace detected see http dochub mongodb org core data recovery recovery steps validatecollectionsjob14explain5validatecollections 2018 03 29t160300 315+0000 ok 1 validatecollectionsjob14explain5validatecollections 2018 03 29t160300 320+0000 operationtime timestamp 1522339379 8 validatecollectionsjob14explain5validatecollections 2018 03 29t160300 331+0000 clustertime validatecollectionsjob14explain5validatecollections 2018 03 29t160300 357+0000 clustertime timestamp 1522339379 8 validatecollectionsjob14explain5validatecollections 2018 03 29t160300 374+0000 signature validatecollectionsjob14explain5validatecollections 2018 03 29t160300 379+0000 hash bindata 0 aaaaaaaaaaaaaaaaaaaaaaaaaaa validatecollectionsjob14explain5validatecollections 2018 03 29t160300 391+0000 keyid numberlong 0 validatecollectionsjob14explain5validatecollections 2018 03 29t160300 401+0000 validatecollectionsjob14explain5validatecollections 2018 03 29t160300 431+0000 validatecollectionsjob14explain5validatecollections 2018 03 29t160300 440+0000 noformat;2018-04-04T16:38:28.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-34298;periodickillsecondaries still run after_suite following after_test failure periodickillsecondaries hook runs resets _start_time variable underlying test fails step bypassed causing following after_suite checks variable run;2018-04-04T14:31:51.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-38532;add index ns name build index done log line lack final log details make hard reconstruct index build timelines mongod logs using grep etc build starts get log like code migtest34 shard 00 02 sokhy mongodb net 27017 mongodb mongodb log 2018 12 11t08 01 042018 12 10t231322 544+0000 index repl index builder 13 build index trev historictrackingevent properties v 2 key createddatetime 1 name createddatetime expireafterseconds 10368000 ns trev historictrackingevent background true code ends code migtest34 shard 00 02 sokhy mongodb net 27017 mongodb mongodb log 2018 12 11t08 01 042018 12 10t234952 020+0000 index repl index builder 13 build index done scanned 50567515 total records 2189 secs code add least ns index name build index done use grep analysis;2018-12-11T18:01:44.000+0000;Trivial - P5;1.0;0;0;7
SERVER;SERVER-38395;python global logger polluted importing certain resmokelib modules discovered global logging buildscripts update_test_lifecycle py gets overriden buildscripts mobile adb_monitor py resmokelib imports file buildscripts mobile benchrun_embedded_setup_android py also similar issue logging setting done global scope main function code logging basicconfig format asctime levelname message levellogging info code;2018-12-04T18:21:07.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-34241;remove skipvalidationnamespaces config transactions wt 3998 fixed remove skipvalidationnamespaces config transactions validatecollections hook replica_sets_kill_primary_jscore_passthrough yml;2018-03-30T21:56:44.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-38336;coverity analysis defect 105145 copy without assign class user written copy constructor user written assignment operatordefect 105145 static_c checker copy_without_assign subcategory none file src mongo db storage kv temporary_kv_record_store h parse warning function name available src mongo db storage kv temporary_kv_record_store h line 46 colorred class mongotemporarykvrecordstore user written copy constructor mongotemporarykvrecordstoretemporarykvrecordstore mongotemporarykvrecordstore corresponding user written assignment operator color codefirst line46 class temporarykvrecordstore public temporaryrecordstore code src mongo db storage kv temporary_kv_record_store h line 54 colorred user written copy constructor color codefirst line54 temporarykvrecordstore temporarykvrecordstore noexcept code;2018-11-30T18:59:03.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-38615;psutil module installed platforms using psutil buildscripts tests test_evergreen_resmoke_job_count py runs every platform see server 38115;2018-12-13T19:11:16.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-34405;add sys perf move_chunk_waiting task wt master branch;2018-04-10T14:58:36.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-36169;resmoke bare raise outside except stepdown hook stepdown hook code contains three misplaced bare raise statement outside except block https github com mongodb mongo blob 99d3436094d31de348edfac9fe0e40e60b28391e buildscripts resmokelib testing hooks stepdown py#l409 https github com mongodb mongo blob 99d3436094d31de348edfac9fe0e40e60b28391e buildscripts resmokelib testing hooks stepdown py#l423 https github com mongodb mongo blob 99d3436094d31de348edfac9fe0e40e60b28391e buildscripts resmokelib testing hooks stepdown py#l442;2018-07-17T20:55:57.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-37926;excess allocated memory associated cursors due wt modify operations server 37795 observed excess allocated memory associated cursors due wt modify operations 3 6 8 occur 4 0 improved cursor caching limit number cursors still see excess allocated memorycomparison png width100the excess memory 4 0 3 double 3 6 8 note rate updates somewhat higher 4 0 3 3 6 8 probably server 36221 doesnt appear enough larger account 2x larger excess memory allocated 4 0 3 possibly related cached cursor count seems grow indefinitely although information oplog collection globally notes verified memory associated cursors disabling cursor caching 3 6 8 excess memory disappeared uesed heap profiler confirmed excess allocated memory coming allocation sites 4 0 3 3 6 8 repro code load home bdlucas mongodb git mongo jstests libs paralleltester js size 1000000bunch 100 start bunch threads inserting bunch collections 3 6 8 creates big bunch cursors bunch2 maybe 4 0 3threads var t0 tbunch t++ thread new scopedthread function c db c + true c insert threads push thread thread start thats going small updates large documents uses wt modify triggering issue server 37795 3 6 8 shouldnt happen 4 0 3 doesfor 0 100 i++ c db c + x x repeat size c insert _id 0 x x true 0 100 i++ c db c + c update _id 0 inc 1 c find _id 0 itcount code;2018-11-05T19:18:53.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-38030;sys perf use project instead project_dir uploading artifacts lines one https github com mongodb mongo blob a385bcca50b5cd75c6e388e82b3e7a058c0474c5 etc system_perf yml#l18;2018-11-08T18:25:46.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-38749;concurrent stepdown suites 3 6 branch still use 5 second election timeout changes 3aa3155 https github com mongodb mongo commit 3aa315557bef775c5291068e365a59a3a810fc41 part server 30642 ineffective increasing election timeout concurrency_sharded_with_stepdowns yml test suites javascript version stepdown thread reconfigures replica set sets 5 second election timeout default additionally additional set electiontimeoutms1 day part stepdown options specified continuousstepdown configure function https github com mongodb mongo blob r3 6 9 jstests concurrency fsm_libs cluster js note longer issue 4 0 master branches theyve switched using python version stepdown thread doesnt reconfigure replica set;2018-12-21T20:28:24.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-34497;remove checkprimary hook unnecessary due server 31670;2018-04-16T17:22:02.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-37789;add genny flag resmoke py id like able specify genny executable without modifying committed file people shouldnt need use locally compiled version genny shouldnt need stash git branch operations;2018-10-26T20:22:09.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-34486;set transactionlifetimelimitseconds1 fuzzer suites run replication enabled codeyaml mongod_options set_parameters transactionlifetimelimitseconds 1 code added following test suites order avoid fuzzer trigger spurious evergreen timeouts goes wait able take non intent lock started transaction jstestfuzz_interrupt_replication yml jstestfuzz_replication yml jstestfuzz_replication_initsync yml jstestfuzz_replication_session yml jstestfuzz_sharded_causal_consistency yml uses replica set shards jstestfuzz_sharded_continuous_stepdown yml uses replica set shards;2018-04-15T02:51:29.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-36409;install v3 2 yum repository errors rhel 7server yum repositories version 3 2 issue prevents install rhel 7server code package arch version repository sizeinstalling mongodb org x86_64 3 2 20 1 el7 mongodb org 3 2 5 8 kinstalling dependencies make x86_64 13 82 23 el7 base 420 k mongodb org mongos x86_64 3 2 20 1 el7 mongodb org 3 2 5 7 mongodb org server x86_64 3 2 20 1 el7 mongodb org 3 2 13 mongodb org shell x86_64 3 2 20 1 el7 mongodb org 3 2 6 8 mongodb org tools x86_64 3 2 20 1 el7 mongodb org 3 2 4 1 openssl x86_64 11 0 2k 12 el7 base 492 ktransaction summaryinstall 1 package +6 dependent packages total download size 30 minstalled size 204 mdownloading packageswarning var cache yum x86_64 7 base packages make 3 82 23 el7 x86_64 rpm header v3 rsa sha256 signature key id f4a80eb5 nokeypublic key make 3 82 23 el7 x86_64 rpm installedwarning var cache yum x86_64 7 mongodb org 3 2 packages mongodb org 3 2 20 1 el7 x86_64 rpm header v3 rsa sha1 signature key id ea312927 nokeypublic key mongodb org 3 2 20 1 el7 x86_64 rpm installedhttps repo mongodb org yum redhat 7server mongodb org 3 2 x86_64 rpms mongodb org tools 3 2 20 1 el7 x86_64 rpm errno 14 curl#63 callback abortedtrying mirror error downloading packages mongodb org tools 3 2 20 1 el7 x86_64 errno 256 mirrors try code code mongodb org 3 2 namemongodb repositorybaseurlhttps repo mongodb org yum redhat 7server mongodb org 3 2 x86_64 gpgcheck1enabled1gpgkeyhttps www mongodb org static pgp server 3 2 asc code;2018-08-02T00:59:51.000+0000;Major - P3;1.0;1;0;4
SERVER;SERVER-32223;add burn tests configurations variants addition suites many tests accidentally forget mark requires_persistence things tested non required builders similarly mmap run builder incorporating variant flags burn tests required builders could avoid easy test failures;2017-12-08T15:53:38.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-26867;timeout related assert soon failures trigger hang analyzer test fails due timeout would nice would trigger hang analyzer tearing processes would let us see server preventing expect timeout related failures include assert soon wtimeout expiring maxtimems expiring update per discussion limiting assert soon assert soonnoexcept assert retry assert assert retrynoexcept;2016-11-01T17:21:24.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-26625;make collstats command consistent background index reporting collstats command includes indexes undergoing background index build indexsizes section include nindexes indexdetails make reporting consistent make clear indexes undergoing background build;2016-10-13T21:41:59.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-25548;resmoke continue shell crash currently resmoke stops test mongo server crashed job py shell crash suites use shell spawn servers shell crash would cause servers terminated subsequent tests run servers previous tests causing either test failures hangs additional failures defeat purpose running continueonfailure;2016-08-10T20:46:16.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-25537;variant_dir longer needed mci configuration previously generated scons variantdir directory name options leading huge paths builders caused things exceed system limits workaround explicitly set variant_dir variable scons invocation override auto generation however server 17789 changed way default variant directory creation worked huge paths longer used variant_dir things etc evergreen yml therefore obsolete removed;2016-08-10T18:29:41.000+0000;Trivial - P5;2.0;0;1;8
SERVER;SERVER-24918;perf yml using evergreen modules control file performance project evergreen perf yml using evergreen module support move use modules make testing changes mongo perf dsi easier module dsi mongo perf repos;2016-07-06T06:12:26.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-19895;resmoke failures self document resmoke fails print steps help user debug failure e g resmoke detects run evergreen print places user look symptoms original descriptionat shutdown time fixture replication sharding checks return status process shutdown procedures returned false means process returned non 0 exit status fails test suite associated fixture would helpful fixture wrote message log stating process caused suite failure currently way diagnose scour logs looking exit status process since looking line exited code 0 simple search undertake;2015-08-12T17:58:44.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-36757;generate extract mongoebench compatible json config files consistent locations script server 36069 writes mongoebench compatible json config files src third_party mongo perf mongoebench directory fetch benchmark embedded files added evergreen part server 36076 extracts mongoebench compatible json config files top level benchrun_embedded directory benchrun_embedded yml test suites similiarly run mongoebench compatible json config files top level benchrun_embedded directory directories consistent resmoke py used run tests regardless whether mongoebench compatible json config files generated locally downloaded s3 also add entry directory gitignore file made decision include mongoebench compatible json config files source tree;2018-08-18T14:02:28.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-36451;continuousstepdown killing nodes hang due able start primary replica_sets_kill_primary_jscore_passthrough tests occasionally timeout due waiting primary selected tests increase election timeout 24 hours control node leader however lead situation leader killed secondaries unable take due stale oplogs server brought back attempts stepup chance yet heard back heartbeats nodes cluster assumes means stepup fails another election attempted causing test eventually timeout possible solution event failure would retry stepup delay would allow secondaries time respond heart beat request;2018-08-03T21:34:50.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-36233;prohibit running profile command secondary read override test suites running profile command cause system profile created since system profile unreplicated collection point testing secondary read override test suites also cause tests pick unreplicated collection fail prevent profile command run set_read_preference_secondary js override file;2018-07-20T21:21:02.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-36230;waits graph longer generated hang_analyzer py script bf 9986 saw many threads waiting db locks hang analyzer cannot generate graph us lock manager dumps information https logkeeper mongodb org lobster build 6321d9a6e900f89055816cb177b89f73 test 5b4f50b3f84ae847db0364c1#bookmarks02c1782362c180602f10replicasetfixture3ajob03aprimary though noformat 2018 07 18 124044 821 warning target file proc 17238 cmdline contained unexpected null characters 2018 07 18 124044 821 saved corefile dump_mongod 17238 core 2018 07 18 124107 364 running hang analyzer supplement mongodbdumplocks 2018 07 18 124107 364 generating digraph since lock graph empty 2018 07 18 124107 364 running print javascript stack supplement 2018 07 18 124107 364 detaching program data mci d8572849d2ad8ce1953117503927f065 src mongod process 17238 2018 07 18 124107 491 done analyzing mongod process pid 17238 2018 07 18 124107 491 debugger opt mongodbtoolchain gdb bin gdb analyzing mongod process pid 17241 noformat;2018-07-20T20:45:24.000+0000;Critical - P2;2.0;2;1;2
SERVER;SERVER-36078;integrate adb resource monitor mongoebench test suite android involves creating new hook calls start stop methods test respectively generated files resource monitor packaged subdirectories based test case execution pair ran;2018-07-11T18:41:34.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-36067;upload artifacts running install mobile test target evergreen s3 currently upload artifacts running install mobile dev target evergreen s3 noformat project embedded sdk build_variant revision version tgz project embedded sdk build_variant latest tgz noformat something similar install mobile test target mongoebench binary server 35537 run android device following s3 paths proposed acm noformat project embedded sdk test build_variant revision version tgz project embedded sdk test build_variant latest tgz noformat;2018-07-11T14:40:38.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-36010;change log messages windows stacktraces use error severe rather log would make obvious users potentially easier automated tools detect messages process fatal https github com mongodb mongo blob 026f69dbf4f98e91b499bde5cb4ce73c332e9549 src mongo util exception_filter_win32 cpp#l137 l138 https github com mongodb mongo blob 026f69dbf4f98e91b499bde5cb4ce73c332e9549 src mongo util exception_filter_win32 cpp#l160 https github com mongodb mongo blob 026f69dbf4f98e91b499bde5cb4ce73c332e9549 src mongo util exception_filter_win32 cpp#l163 https github com mongodb mongo blob 026f69dbf4f98e91b499bde5cb4ce73c332e9549 src mongo util exception_filter_win32 cpp#l174;2018-07-08T00:31:13.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-35852;convert backup_restore js blacklist use yaml based list transaction tests test understand existing blacklists reduce likelihood test added blacklist backup_restore js;2018-06-27T21:12:16.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-35800;resmoke py retry getting build_id test_id logkeeper changes server 35472 made resmoke py would exit couldnt communicate logkeeper lead setup failures evergreen caused logkeeper application server responding build_id test_id quickly enough might retrying would succeed make 10 attempts fail still dont get build_id test_id note retrying request get build_id new test_id safe simply inserts new document https github com evergreen ci logkeeper blob e83432bd04ba111c72907af7f3fa50a52ea531b6 views go#l219 quirk job logs tab may show extra entries case resmoke py never received response logkeeper application server database still eventually work;2018-06-26T01:05:45.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-35737;install_compass fails macos using macos10 13 3 python 2 7 3 trying run install_compass downloading 4 0 0 rc7 tarball noformat 4 0 0 rc7 bin install_compassdownloading compass 729installing package traceback recent call last file 4 0 0 rc7 bin install_compass line 173 module download_and_install_compass file 4 0 0 rc7 bin install_compass line 161 download_and_install_compass install_mac pkg file 4 0 0 rc7 bin install_compass line 69 install_mac mountpoint tmp dmg stdoutfnull stderrfnull file library frameworks python framework versions 2 7 lib python2 7 subprocess py line 186 check_call raise calledprocesserror retcode cmd subprocess calledprocesserror command hdiutil attach nobrowse noautoopen mountpoint var folders x4 swc0_n7n6j10frpsyvprj57m0000gp tmpppwp5m var folders x4 swc0_n7n6j10frpsyvprj57m0000gp tmp9hjmu0 returned non zero exit status 1 noformat checked end point trying hit defined line 156 install_compass https compass mongodb com api v2 download latest compass community stable osx displaying message noformat typeerror invalid version untagged c4d5921acf05ae6d4201 new semver compass node_modules nuts serve node_modules semver semver js29311 compare compass node_modules nuts serve node_modules semver semver js56910 function gt compass node_modules nuts serve node_modules semver semver js59810 compareversions compass node_modules nuts serve lib versions js5616 array sort native compass node_modules nuts serve node_modules lodash index js1209223 function tap compass node_modules nuts serve node_modules lodash index js592119 basewrappervalue compass node_modules nuts serve node_modules lodash index js284530 lodashwrapper wrappervalue compass node_modules nuts serve node_modules lodash index js611214 compass node_modules nuts serve lib versions js7814 noformat handle end point errors gracefully;2018-06-22T04:45:16.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-35588;powertest py call replsetreconfigure command successful replsetgetconfig replsetreconfig safe retry theres autoreconnect error succeeded network disconnected likely fail retry believe safe retry whole else clause starting replsetgetconfighttps github com mongodb mongo blob 1d89d2c88bcb39045701b87612b866ae2eb49378 pytests powertest py#l1440in case previous reconfig succeeded line 1457 prevent attempting reconfig;2018-06-13T20:19:53.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-35559;update transaction retry functions call abort commit changes server 35094 disallow calling aborttransaction committransaction withtxnandautoretry helper function retry logic background dbhash hook need changed call aborttransaction failure error comes committransaction;2018-06-12T17:07:58.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-35506;powercycle wait_for_mongod_shutdown function ensure mongod process longer running wait_for_mongod_shutdown function waits mongod lock file deleted check mongod process longer running;2018-06-08T14:43:30.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-35398;mobile se remove code capped collection remove capped collection code server 33605 gets checked;2018-06-05T05:49:00.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-35383;increase electiontimeoutmillis continuousstepdown hook used stepdown suites electiontimeoutmillis parameter continuousstepdown hook used concurrency stepdown suites set 5000 increase per captured discussion quote 2018 05 30 220912 maxh wrote note mentioned server 34666 dont think shorten election timeout lead election happening isnt initiated stepdownthread due heartbeats delayed im okay keepingit consistent replica set configuration javascript version would used however id like follow server ticket change https jira mongodb org browse server 34666focusedcommentid1873407pagecom atlassian jira plugin system issuetabpanelscomment tabpanel#comment 1873407 followup ticket want remove value use default set higher timeout im sure id like get input judah im currently wondering really need avoid setting election timeout 24 hours all_nodes_electabletrue going use replsetstepup command python version stepdownthread cause one secondaries torun election anyway reason replsetstepup command fails former primary try step back 10 seconds ownanyway https github com mongodb mongo blob r4 1 0 buildscripts resmokelib testing fixtures replicaset py#l149 l154if want elections come stepdownthread id recommendsetting election timeout 24 hours replsetstepup command stillwork fails reason node try run forelection theres real difference default 10 seconds thecurrent 5 seconds except amount flakiness youd expect theexistence flakiness trying remove completely quote;2018-06-04T18:41:17.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-35313;cleanupconcurrencyworkloads resmoke hook needs handle balancer balancer enabled cleanupconcurrencyworkloads hook stop cleaning dbs collections restart finished;2018-05-31T15:47:09.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-35311;add teardown environment system_perf yml post task initial sync logkeeper add teardown function similar used longevity call running tests initial sync logkeeper call post phase initial sync logkeepersee code https github com mongodb mongo blob 7d90be2b5bd9ed448f0b39d4ec9fd9402e96c8ff etc longevity yml#l156 l174 longevity yml;2018-05-31T15:35:41.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-36812;log obvious details resmoke observes killed processes bf 10349 shell crashed due segfault shell didnt print stack trace exit resmoke logged test exited 11 however 10 mongo shells clear one crashed also clear thats shell crashed core dumps case sufficient stack trace debugging great error message indicate core dump available process developer look noformat 2018 08 19 154933 497 executorjs_testjob0 2018 08 19t194933 495+0000 received stopexecution exception jstest jstestfuzz jstestfuzz 6828 ent_fe14 qa_a6ce 1534707044622 33 js failed 2018 08 19 154933 684 executor 2018 08 19t194933 684+0000 summary 67 test ran 1040 76 seconds 66 succeeded 41 skipped 1 failed 0 errored 2018 08 19 154933 684 following tests failed exit code 2018 08 19 154933 684 jstestfuzz jstestfuzz 6828 ent_fe14 qa_a6ce 1534707044622 33 js 11 noformat resmoke may also start mongods im sure exit error messages clear would great obvious observed crash error message resmoke consistent shell e g replsettest;2018-08-22T22:07:14.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-36816;avoid reloading view catalog primary secondaries dbhash check changes server 25640 made listcollections command run query containing names collections returned dbhash command primary https github com mongodb mongo blob 2bed54b084995f2c2dd048b6a70b6fd678e1ac30 src mongo shell replsettest js#l1855 l1858 secondary https github com mongodb mongo blob 2bed54b084995f2c2dd048b6a70b6fd678e1ac30 src mongo shell replsettest js#l1907 l1910 query leads view catalog reloaded special filter must used https github com mongodb mongo blob 2bed54b084995f2c2dd048b6a70b6fd678e1ac30 src mongo db commands list_collections_filter cpp#l37 l42 prevent behavior logic checkdbhashesforreplset function thats enabled fuzzer test suites skip checking dbhash reloading view catalog fails due invalid view definition https github com mongodb mongo blob 2bed54b084995f2c2dd048b6a70b6fd678e1ac30 src mongo shell replsettest js#l1860 l1865 however seems worthwhile avoid reloading view catalog weve found invalidnamespace error response may returned certain patterns involving null bytes instead use special filter prevent view catalog reloaded server listcollections command actual filtering client side codejavascript dont run validate view namespaces let filter type collection jstest options skipvalidationoninvalidviewdefinitions skipvalidationoninvalidviewdefinitionstrue avoid resolving view catalog admin database todo server 25493 remove exists clause performing initial sync versions mongodb 3 2 longer supported filter filter type exists false code;2018-08-23T03:40:05.000+0000;Critical - P2;2.0;2;1;2
SERVER;SERVER-36897;oplogreader hasnext return false true confusing checkoplogs replsettest checkoplog establish reverse table scanning cursor oplog node bfs compare oplog consistency first get latest entry oplog perform comparison advance cursors compare allows oplogs different number entries long match latest entries checkoplog relies oplogreader hasnext https github com mongodb mongo blob 2145028db135b539c51713acad6952ef36e646cf src mongo shell replsettest js#l2105 always return false done first time however call executes query receives cappedpositionlost thus instantiating shells internal _cursor https github com mongodb mongo blob 2145028db135b539c51713acad6952ef36e646cf src mongo shell query js#l112 follow oplogreader hasnext return true issued find receiving batch oplog starting latest entry;2018-08-27T21:25:59.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-36960;stepdown thread handle autoreconnect exceptions executing replsetstepup stepdown thread terminate issuing replsetstepup command stepdown py handle autoreconnect exceptions https github com mongodb mongo blob 2704d7a89e64167fcff7356ada111b313146474e buildscripts resmokelib testing hooks stepdown py#l319 l330;2018-08-31T16:39:46.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-38114;update evergreen yml use generate tasks already split tasks update evergreen yml use generate resmoke sub suites function tasks previously split names tasks updated appended _gen display task name use original name;2018-11-13T16:56:47.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-38113;generate evergreen config generated sub suites update generate_resmoke_suite py generate evergreen configuration file describes sub suites run also generate display task configuration sub suites;2018-11-13T16:54:08.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-38112;add generate resmoke sub suites etc evergreen yml order dynamically generate tasks sub suites evergreen needs function generate resmoke sub suites calls generate_resmoke_suite py changed generate_resmoke_sub_suites py appropriate arguments calls generate tasks file created new function usable current task running resmoke tests;2018-11-13T16:51:59.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-38111;implement max_sub_suites generate_resmoke_suite py generate_resmoke_suite py file divide tests suite sub suite based runtime target max runtime may cases want limit number sub suites create work add optional command line argument allows caller specify max number sub suites implement logic limit number sub suites option specified note limit hit acceptable random assign remaining tests sub suites e dont need optimally pack extra suites based runtime;2018-11-13T16:48:41.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-38110;generate resmoke config yaml sub suite dividing suite sub suites generate_resmoke_suite py file needs create resmoke yaml configuration file sub suite created generate file original suite yaml read selector section updated include chosen test files sub suite new configuration written disk;2018-11-13T16:44:44.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-38109;update generate_resmoke_suite py use cached history endpoint pm 1158 started cache evergreen test history data order provide faster access generate_resmoke_suite py updated use new endpoint get last 2 weeks data instead test_history endpoint currently using;2018-11-13T16:41:22.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-35263;add fsm workloads testing atomicity isolation updates inside transaction across multiple collections databases extend multi_statement_transaction_atomicity_isolation js fsm workload https github com mongodb mongo blob r4 1 0 jstests concurrency fsm_workloads multi_statement_transaction_atomicity_isolation js server 34293 support running updates consistency checks collections databases specified via config data multi_statement_transaction_atomicity_isolation js fsm workload continue run db collname collection provided concurrency framework;2018-05-27T19:51:30.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-37767;platform support remove debian 8 x64 platform support remove debian 8 x64 4 2 previous releases well apply latest latest 1 policy new releases existing mongodb releases well follow vendor;2018-10-26T16:36:14.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-37678;update linter enforce sspl header files server 37651 changed license agpl sspl would nice linter enforced new license new files automatically;2018-10-19T20:35:34.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-37428;sys perf linux builds using enterprise bits note affects internal testing systems system_perf yml file support enterprise modules wrong thing non enterprise builds three compile tasks one variant get enterprise module fix seems making enterprise build like wtdevelop build checking enterprise module directory outside mongo source directory actively copying enterprise build done use wiredtiger develop function;2018-10-02T19:33:36.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-37373;fully qualified files suite yml run burn_in tests windows burn_in task run fully specified file suite yml windows;2018-09-28T15:11:22.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-37285;enterprise packages conflict non enterprise packages enterprise packages conflict non enterprise versions causes package managers like dpkg fail unhelpful error messages see attached screenshot image 2018 09 24 10 59 51 374 png thumbnail;2018-09-24T15:00:21.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-37163;enable signal processing longevity yml run command signal processing analyze phase task;2018-09-17T14:34:30.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-37143;retry interrupted errors background db hash hook tests kill active sessions include session used background dbhash hook cause dbhash command return interrupted error dbhash hook handle similar way transient transaction errors;2018-09-14T18:21:19.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-37074;validation hook continue downgrading downgrade interrupted server 36718 made changes use forcevalidationwithfeaturecompatibilityversion upgrade servers validating collections bf 10462 case downgrade test interrupted way validation hook start upgrade middle downgrade therefore validation hook first downgrade upgrade case;2018-09-11T15:49:33.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-37052;add missing check replicasetmonitor error js retryable writes override replica set monitor throw two types errors 1 https github com mongodb mongo blob 8256436a338da3a9c984f2400fce142415633206 src mongo client dbclient_rs cpp#l283 2 https github com mongodb mongo blob 8256436a338da3a9c984f2400fce142415633206 src mongo client dbclient_rs cpp#l320 master visible retryable writes js override check types errors https github com mongodb mongo blob 8256436a338da3a9c984f2400fce142415633206 jstests libs override_methods auto_retry_on_network_error js#l338 l339;2018-09-07T18:35:10.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-36976;run new agg fuzzer evergreen aggregation fuzzer evergreen task replaced new agg fuzzer;2018-09-04T17:32:32.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-35261;add checkrepldbhashinbackground hook concurrency_replication yml test suite apply following patch run several times evergreen see failures turning codediff diff git buildscripts resmokeconfig suites concurrency_replication yml b buildscripts resmokeconfig suites concurrency_replication ymlindex 7ae625b 05dfa72 100644 buildscripts resmokeconfig suites concurrency_replication yml+++ b buildscripts resmokeconfig suites concurrency_replication yml 16 6 +16 7 selector executor archive hooks+ checkrepldbhashinbackground checkrepldbhash validatecollections tests true 26 7 +27 7 executor # checkrepldbhash hook waits operations replicated applied # secondaries run validatecollections hook ensure # validating entire contents collection #+ class checkrepldbhashinbackground # todo server 26466 add checkreploplogs hook concurrency suite class checkrepldbhash class validatecollections code note unlike server 34555 shouldnt need additional synchronization checkrepldbhashinbackground hook safe run config setup config teardown functions run;2018-05-27T19:17:13.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-35160;scopedthreads automatically inherit testdata parent thread test uses scopedthread pass auth passthrough tests test author needs remember manually pass testdata spawned thread inherit proper auth credentials startparallelshell automatically copies testdata new shell scopedthread behave;2018-05-22T17:28:19.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-33848;update compile flags sys perf performance projects mongodb community server ssl support since 2 6 3 0 yet werent compiling ssl support sys perf tests julian fix part work review compile code make sure reflects actually shipped users course may debug symbols differences intentional;2018-03-05T18:40:43.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-33787;platform support remove debian 7 builds eoled may;2018-03-09T19:23:01.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-33740;add evergreen task running powercycle mobile storage engine create powercycle_mobile evergreen task performs powercycle testing running mobile storage engine straightforward copy definition powercycle task https github com mongodb mongo blob 789f74a3837c0daf799be2b8296f339977c551b8 etc evergreen yml#l3862 l3879 specifying storageenginemobile mongod_extra_options parameter run powercycle test function although care would need taken disable fsm clients ticket resolving server 32993 codeyaml name powercycle_mobile exec_timeout_secs 7200 # 2 hour timeout task overall depends_on name compile commands func setup func set remote credentials vars powercycle_remote_credentials func set ec2 instance vars powercycle_ec2_instance command expansions update powercycle_expansions func run powercycle test vars powercycle_test mongod_extra_options mongodoptions setparameter enabletestcommands1 storageengine mobile code;2018-03-08T04:47:50.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-33695;include loop name recovery files powertest py powercycle rsyncs data files recovery runs mongod started power cycle event name resulting directory also include loop number e beforerecovery 1 still use rsync rename directory;2018-03-06T16:49:02.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-33647;enterprise windows 2008r2 wiredtiger develop shouldnt run push task originally thought setting push_path push_bucket push_name push_arch enterprise windows 2008r2 wiredtiger develop builders expansions would sufficient make push evergreen task op however learned go yaml yaml known behavior differences merge key implemented see go yaml yaml#81 https github com go yaml yaml issues 81 go yaml yaml#325 https github com go yaml yaml issues 325 cause inherit enterprise windows 2008r2 builders configuration https github com mongodb mongo blob 4c97ba23c51ca5b8a5bcb3ea09f8292773aedd3d etc evergreen yml#l5909 l5912 via enterprise windows 64 2k8 template anchor means push task runs enterprise windows 2008r2 wiredtiger develop builder binaries uploaded s3 path releases mongodb happen via mongo release evergreen project issue impacts contents latest nightly releases;2018-03-03T00:53:46.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-33427;improve detectability test failing shardingtest replsettest shut quote max hirschhorn kevin albertson noticed failing shut shardingtest replsettest doesnt cause test log failed load line javascript stack trace makes sense since line would error outcome server 25777 mongo shell could already exit non zero return code without printing failed load message line _is_ logged call mongorunner stopmongod replsettest#stopset shardingtest#stop may missing test also isnt cant logged logseverityerror since logged server process makes log line contain e another thing typically look test fails without failed load took confusion additional scrolling logs realize new test reporting failure seemed like test ran completion successfully thought case theres something done make failure easier detect esha maharishi think confusion understandable goal message make obvious user remediation ought since message isnt surfaced clearly enough change logic mongo shell dont see reason mongo shell must use cout logging exiting failure due unterminated processes message could replace call severe instead prefix log message f think would sufficient purposes would mind filing new server ticket improvement request example even moving call mongorunner stopmongod replsettest#stopset shardingtest#stop may missing test summary 1 test ran 35 86 seconds 0 succeeded 0 skipped 1 failed 0 errored could help messages logged two different processes mongo shell former resmoke py latter isnt really something wed consider related feature resmoke py would special handling around certain exit codes known processes case mongo shell would one memory leak detected asan lsan would another quote see comment thread server 25640 one good idea thread make mongo shell log error message severe log level;2018-02-21T20:35:36.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-32665;tojson print elements passed set object shell code tojson new set 1 2 3 code prints misleading tojson either explicitly throw error print elements;2018-01-11T16:22:43.000+0000;Minor - P4;2.0;0;1;8
SERVER;SERVER-32642;return raw command response validate js hook modify collectionvalidator validatecollections return raw command response make class flexible;2018-01-10T20:52:53.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-33972;bind jstestfuzz version server version fuzzer becomes dependent code server repo like rollback fixture impending preamble hooks would nice make change server wait change fuzzer wait bit go back server remove code left place support old fuzzer behavior able making jstestfuzz module evergreen yml;2018-03-19T14:18:44.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-35108;enable signal processing system_perf yml run command signal processing analyze phase task;2018-05-21T13:25:57.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-35042;mobile builders enterprise mobile builders currently enterprise builds historical reasons dont need also probably shouldnt since plan add additional build variants near future dont want require enterprise code build;2018-05-17T16:16:58.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-34865;test archival fails temporary files removed following error occurred archiving failed test noformat 2018 05 07 112726 351 executorfsm_workload_testjob0 2018 05 07t152726 349+0000 archiving data files test jstests concurrency fsm_workloads yield_group js data db job0 resmoke 2018 05 07 112726 356 executorfsm_workload_testjob0 2018 05 07t152726 355+0000 encountered error test execution 2018 05 07 112726 356 traceback recent call last 2018 05 07 112726 356 file data mci 6612d9aa5374fb14abe6c091b3ffcf03 src buildscripts resmokelib testing job py line 45 __call__ 2018 05 07 112726 356 self _run queue interrupt_flag 2018 05 07 112726 356 file data mci 6612d9aa5374fb14abe6c091b3ffcf03 src buildscripts resmokelib testing job py line 83 _run 2018 05 07 112726 356 self _execute_test test 2018 05 07 112726 356 file data mci 6612d9aa5374fb14abe6c091b3ffcf03 src buildscripts resmokelib testing job py line 113 _execute_test 2018 05 07 112726 356 self archival archive self logger test success 2018 05 07 112726 356 file data mci 6612d9aa5374fb14abe6c091b3ffcf03 src buildscripts resmokelib testing hook_test_archival py line 78 archive 2018 05 07 112726 356 self _archive_test logger test success 2018 05 07 112726 356 file data mci 6612d9aa5374fb14abe6c091b3ffcf03 src buildscripts resmokelib testing hook_test_archival py line 69 _archive_test 2018 05 07 112726 356 self _archive_hook_or_test logger test_name test 2018 05 07 112726 356 file data mci 6612d9aa5374fb14abe6c091b3ffcf03 src buildscripts resmokelib testing hook_test_archival py line 105 _archive_hook_or_test 2018 05 07 112726 356 s3_bucket s3_path 2018 05 07 112726 356 file data mci 6612d9aa5374fb14abe6c091b3ffcf03 src buildscripts resmokelib utils archival py line 157 archive_files_to_s3 2018 05 07 112726 356 s3_bucket s3_path 2018 05 07 112726 356 file data mci 6612d9aa5374fb14abe6c091b3ffcf03 src buildscripts resmokelib utils archival py line 245 _archive_files 2018 05 07 112726 356 file_list_size input_files free_space temp_file 2018 05 07 112726 356 file data mci 6612d9aa5374fb14abe6c091b3ffcf03 src buildscripts resmokelib utils archival py line 39 file_list_size 2018 05 07 112726 356 file_bytes + directory_size ifile 2018 05 07 112726 356 file data mci 6612d9aa5374fb14abe6c091b3ffcf03 src buildscripts resmokelib utils archival py line 52 directory_size 2018 05 07 112726 356 dir_bytes + os path getsize full_name 2018 05 07 112726 356 file data mci 6612d9aa5374fb14abe6c091b3ffcf03 venv lib python2 7 genericpath py line 57 getsize 2018 05 07 112726 356 return os stat filename st_size 2018 05 07 112726 356 oserror errno 2 file directory data db job0 resmoke shard1 node0 wiredtiger turtle set noformat code doe handle case temporary file directory list subsequently deleted examined code def directory_size directory return size bytes files directory tree dir_bytes 0 root_dir _ files os walk unicode directory name files full_name os path join root_dir name try dir_bytes + os path getsize full_name except oserror # symlinks generate error ignored os path islink full_name pass else raise return dir_bytes code oserror handle case;2018-05-07T15:39:50.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-34738;mongo_lock py graph display lock type lockmanager locks thread waiting lock lock graph would useful know lock mode waiting;2018-04-27T19:12:45.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-34614;paralleltester use different connection new test test uses connection tests share set authenticated users interfere state getlasterror new test get connection;2018-04-23T14:54:31.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-33975;enable auth standalone 1 node replset 3 node replset turn authentication standalone 1 node replset 3 node replset industry benchmarks tasks;2018-03-19T14:44:43.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-34539;enable sharded mapreduce concurrency testing use single mongos concurrent sharded mapreduce testing disabled part server 20057 however appears bug ticket occurs multiple mongoses believe testing enabled use one mongos since may concurrent sharded mapreduce related issues server 33538 found test coverage;2018-04-18T15:48:58.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-34420;set idle event stepdown thread even thread exits stepdown py stepdown py https github com mongodb mongo blob c6af07af7922c58293e86992ff9ef0a9ad77d398 buildscripts resmokelib testing hooks stepdown py#l157 stepdown thread exits setting idle event endlessly keep waiting pause stepdown thread noformat 2018 04 11 001817 596 thread 140674028517120 2018 04 11 001817 596 file opt mongodbtoolchain v2 lib python2 7 threading py line 774 __bootstrap 2018 04 11 001817 596 self __bootstrap_inner 2018 04 11 001817 596 file opt mongodbtoolchain v2 lib python2 7 threading py line 801 __bootstrap_inner 2018 04 11 001817 597 self run 2018 04 11 001817 597 file opt mongodbtoolchain v2 lib python2 7 threading py line 754 run 2018 04 11 001817 597 self __target self __args self __kwargs 2018 04 11 001817 597 file data mci bfe6b97b5e63a6c8969ac499179caac2 src buildscripts resmokelib testing job py line 45 __call__ 2018 04 11 001817 597 self _run queue interrupt_flag 2018 04 11 001817 597 file data mci bfe6b97b5e63a6c8969ac499179caac2 src buildscripts resmokelib testing job py line 83 _run 2018 04 11 001817 597 self _execute_test test 2018 04 11 001817 597 file data mci bfe6b97b5e63a6c8969ac499179caac2 src buildscripts resmokelib testing job py line 115 _execute_test 2018 04 11 001817 597 self _run_hooks_after_tests test 2018 04 11 001817 597 file data mci bfe6b97b5e63a6c8969ac499179caac2 src buildscripts resmokelib testing job py line 168 _run_hooks_after_tests 2018 04 11 001817 597 self _run_hook hook hook after_test test 2018 04 11 001817 597 file data mci bfe6b97b5e63a6c8969ac499179caac2 src buildscripts resmokelib testing job py line 121 _run_hook 2018 04 11 001817 597 hook_function test self report 2018 04 11 001817 597 file data mci bfe6b97b5e63a6c8969ac499179caac2 src buildscripts resmokelib testing hooks stepdown py line 75 after_test 2018 04 11 001817 597 self _stepdown_thread pause 2018 04 11 001817 597 file data mci bfe6b97b5e63a6c8969ac499179caac2 src buildscripts resmokelib testing hooks stepdown py line 157 pause 2018 04 11 001817 597 self _is_idle_evt wait 2018 04 11 001817 597 file opt mongodbtoolchain v2 lib python2 7 threading py line 614 wait 2018 04 11 001817 597 self __cond wait timeout 2018 04 11 001817 597 file opt mongodbtoolchain v2 lib python2 7 threading py line 340 wait 2018 04 11 001817 597 waiter acquire noformat could fixed stepdown py https github com mongodb mongo blob c6af07af7922c58293e86992ff9ef0a9ad77d398 buildscripts resmokelib testing hooks stepdown py#l181 l185 noformat def _step_down_all self self _is_idle_evt clear try rs_fixture self _rs_fixtures self _step_down rs_fixture finally self _is_idle_evt set noformat;2018-04-11T19:44:52.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-34380;system_perf yml remove compile_proxy task server 33513 added compile_proxy task system_perf yml layer indirection workaround due able use depends_on variant level implemented evg 2923 therefore use instead note compile_proxy task used master end result ticket also backported stable branches system_perf yml consistent possible across branches;2018-04-09T11:48:49.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-34374;resmoke py uses bytestrings representing pathnames leading silently failing clear dbpath windows https bugs python org issue24672 describes issue python shutil rmtree fails delete files non ascii pathnames bytestring e str instance python 2 ntpath py module python preserves type argument https github com python cpython blob 6a336f6484a13c01516b6bfc3b767075cc2cb4f7 lib ntpath py#l398 l401 sufficient use unicode instance instead order python call w suffixed win32 apis return unicode strings ive verified windows spawn host following patch config py addresses issue change parser py someone specify dbpathprefix trying reproduce failure outside evergreen codediff diff git buildscripts resmokelib config py b buildscripts resmokelib config pyindex 66753c389d 2f13c2df96 100644 buildscripts resmokelib config py+++ b buildscripts resmokelib config py 34 7 +34 7 default_benchmark_min_time datetime timedelta seconds5 # default root directory resmoke py puts directories containing data files mongods # starts well started individual tests default_dbpath_prefix os path normpath data db +default_dbpath_prefix os path normpath u data db # names correspond specified via command line options yaml file defaults diff git buildscripts resmokelib parser py b buildscripts resmokelib parser pyindex d9f40da3e9 1353f899fd 100644 buildscripts resmokelib parser py+++ b buildscripts resmokelib parser py 352 7 +352 7 def update_config_vars values # pylint disabletoo many statements _config archive_limit_tests config pop archive_limit_tests _config base_port int config pop base_port _config buildlogger_url config pop buildlogger_url _config dbpath_prefix _expand_user config pop dbpath_prefix + _config dbpath_prefix unicode _expand_user config pop dbpath_prefix _config dbtest_executable _expand_user config pop dbtest_executable _config dry_run config pop dry_run _config exclude_with_any_tags _tags_from_list config pop exclude_with_any_tags code however im sure special handling linux platforms necessary changes https github com pypa setuptools commit 5ad13718686bee04a93b4e86929c1bb170f14a52 suggest shouldnt use unicode string literals sys getfilesystemencoding ascii currently set langc environment variable ubuntu 16 04 builders server 31717 server 33184 isnt clear wed even able create files non ascii pathnames cc mark benvenuto noformat langc python c import sys print sys getfilesystemencoding ansi_x3 4 1968 noformat;2018-04-07T23:51:55.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-34371;stop ignoring errors test fixture fails delete data files standalone test fixture attempts delete data files https github com mongodb mongo blob 73cf755e6e4cf5e0e3f43e0d98954c583ed00060 buildscripts resmokelib testing fixtures standalone py#l53 starting node ignore errors deleting data files dont know deletion successful example deletion could fail windows another process keeping file open fail delete data files tests fail expect start clean data files add logging understand fail delete data files;2018-04-06T21:36:51.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-34155;add clean shutdowns kill_secondaries kill_primaries passthroughs clean shutdowns leave server different state unclean shutdowns respect recover stable timestamp interesting lot coverage around clean shutdowns replication;2018-03-27T19:28:14.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-38182;run_check_repl_dbhash_background aborts transactions error even theyve already successfully committed dbhash command run inside transaction run_check_repl_dbhash_background js node tests replica set committing transactions iterate session one per node call committransaction https github com mongodb mongo blob 410656e971aff8f491a87337a17d04bd866389ba jstests hooks run_check_repl_dbhash_background js#l236 l245 calls throws error catch error iterate session try abort transaction https github com mongodb mongo blob 410656e971aff8f491a87337a17d04bd866389ba jstests hooks run_check_repl_dbhash_background js#l251 l257 transaction already successfully committed trying abort errors noformat error cannot call aborttransaction calling committransaction noformat try abort transactions still active;2018-11-16T19:50:43.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-38232;mongod ubuntu 16 18 create pid file alerted missing log files production mongod servers yesterday cause log rotate trying use pid file send signal mongo tell log files rotated pid file wasnt expected find looking systemd service file var run mongodb mongod pid nothing appeared even created folder missing added mongod config file codejava processmanagement pidfilepath var run mongodb pid code mongod failed start didnt permission create touched file gave mongo permissions started fix issues would say fixed admins correctly managed mongods systemd service file would expected warning error appear logs situation nothing appears codejava 2018 11 22t122535 418+0000 control main server restarted 2018 11 22t122535 427+0000 control initandlisten mongodb starting pid12211 port27017 dbpath srv mongodb 64 bit hostsome host domain com2018 11 22t122535 427+0000 control initandlisten db version v3 4 15 2018 11 22t122535 427+0000 control initandlisten git version 52e5b5fbaa3a2a5b1a217f5e647b5061817475f92018 11 22t122535 427+0000 control initandlisten openssl version openssl 1 0 2g 1 mar 2016 2018 11 22t122535 427+0000 control initandlisten allocator tcmalloc 2018 11 22t122535 427+0000 control initandlisten modules none 2018 11 22t122535 427+0000 control initandlisten build environment 2018 11 22t122535 427+0000 control initandlisten distmod ubuntu1604 2018 11 22t122535 427+0000 control initandlisten distarch x86_64 2018 11 22t122535 427+0000 control initandlisten target_arch x86_64 2018 11 22t122535 427+0000 control initandlisten options config etc mongod conf net http restinterfaceenabled false enabled false replication replsetname dev storage dbpath srv mongodb directoryperdb true engine wiredtiger journal enabled true wiredtiger collectionconfig blockcompressor snappy engineconfig journalcompressor snappy indexconfig prefixcompression true systemlog destination file logappend true logrotate reopen path var log mongodb mongodb log 2018 11 22t122535 454+0000 storage initandlisten wiredtiger_open config create cache_size7511m session_max20000 eviction threads_min4 threads_max4 config_basefalse statistics fast log enabledtrue archivetrue pathjournal compressorsnappy file_manager close_idle_time100000 checkpoint wait60 log_size2gb statistics_log wait0 verbose recovery_progress 2018 11 22t122538 052+0000 storage initandlisten wiredtiger message 154288953852406 122110x7fbb84eded00 txn recover main recovery loop starting 5591 383232002018 11 22t122538 174+0000 storage initandlisten wiredtiger message 1542889538174123 122110x7fbb84eded00 txn recover recovering log 5591 55922018 11 22t122538 232+0000 storage initandlisten wiredtiger message 1542889538232811 122110x7fbb84eded00 txn recover recovering log 5592 55922018 11 22t122555 956+0000 storage initandlisten starting wiredtigerrecordstorethread local oplog rs2018 11 22t122555 956+0000 storage initandlisten size storer reports oplog contains 39153394 records totaling 10711736188 bytes2018 11 22t122555 956+0000 storage initandlisten sampling oplog nov 8 0449551e nov 22 1225262 determine place markers truncation2018 11 22t122555 957+0000 storage initandlisten taking 1000 samples assuming section oplog contains approximately 391418 records totaling 107085642 bytes code server running 3 4 15 tested 3 14 18 repo mongodb org laptop saw issue;2018-11-22T12:31:31.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-45867;use latest version signal processing dag engineer id like use latest version signal processing doesnt configuration collisions dsi ac upgrade 2 0 reconfigure signal processing one file;2020-01-30T16:04:14.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-45949;update validate commit message client work new patch description standard current patch description format commit message new patch description following format commit queue merge commit message owner repobranchmultiple modules supported follows commit queue merge commit message 1 commit message 2 owner main_repomasterthis description comes evergreen client executable since cant force client upgrade validate client must support formats;2020-02-04T17:30:11.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-45958;end end tests selected_tests user storyas server engineer want know changes made code related buildscripts selected_tests_py tested via end end test buildscripts selected_tests_py sure script dependencies functioning correctly ac least 1 end end tests buildscripts selected_tests_py exists run part buildscripts_test;2020-02-04T20:27:59.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-46236;selected_tests_gen task run tasks required variants enterprise rhel 62 64 bit currently selected_tests_gen task runs tasks enterprise rhel 62 64 bit variant https github com mongodb mongo blob 74306a6fd07a7194567f77c930e0dc4e18098df3 etc evergreen yml#l1552 https github com mongodb mongo blob 74306a6fd07a7194567f77c930e0dc4e18098df3 etc evergreen yml#l1552 https github com mongodb mongo blob 74306a6fd07a7194567f77c930e0dc4e18098df3 etc evergreen yml#l1552 specified design doc https docs google com document 1azkrjr3babowhr6m8vs9cctqomldueyqmyvkp_ensow edit# selected_tests_gen taskshould run tasks required builders mongodb engineer confident selected_tests_gen taskis running affected tasks required builders required tasks missed ac selected_tests_gen task result tasks run onenterprise rhel 62 64 bit enterprise windows required linux 64 debug enterprise ubuntu dynamic 1604 clang andubuntu1804 debug aubsan lite;2020-02-18T20:42:43.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-46326;update multiversion tests following 4 4 0 rc0 please take look comments inhttps jira mongodb org browse server 41227that link 5 commits made 4 2 encompass work thats needed done ac update binversion server js https github com mongodb mongo blob 6d58b7371e1bec5b4281f25ea797cdb50bf20e62 src mongo shell servers js#l207 4 4 update binary version constants defined multiversionconstants py https github com mongodb mongo blob 6d58b7371e1bec5b4281f25ea797cdb50bf20e62 buildscripts resmokelib multiversionconstants py#l3 fcv constants file left work done part ofserver 46323 ensure new redness introduced enterprise rhel 6 2 implicit multiversion build variant;2020-02-21T21:30:37.000+0000;Critical - P2;2.0;2;1;2
SERVER;SERVER-46437;create baseline build variant understand task splitting overhead would nice way understand overhead associated splitting tasks subtasks would allow us watch runtime issues might hidden splitting task e g large test runtime increases masking aggressive splits tests would also help us understand opportunities improvements task splitting one way accomplish would build variant mimics standard build variant without splitting tasks wouldnt need run task frequently week would likely enough dev prod engineer want build variant without task split run measure overhead task splitting causes ac way measuring overhead task splitting exists;2020-02-26T21:31:22.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-46439;add acceptance tests burn_in_tags add end end tests buildscripts burn_in_tags py server engineer want end end tests burn_in_tagsso makes changes scripts without worrying breaking things acat least 1 test executes main body burn_in_tags;2020-02-26T22:12:46.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-46643;eslint running 30+ minutes commit queue enterprise changes frequently seeing eslint take 30 minutes commit queue looking recent occurrences appears happen enterprise changes guess since changes mongo repository linting entire repository server engineer want enterprise changes commit queue take 30 minutes lint dont long running task blocking commit queue ac enterprise commit queue entries take 30 minutes process;2020-03-05T17:24:09.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-46684;repackage hang analyzer resmoke subcommand move hang_analyzer py resmoke directory rewire usages hang analyzer run new command syntax assert soon evergreen yml run hang analyzer ensure running hang analyzer locally works update documentation engineer outreach ensure users aware change buildscripts hang_analyzer py print new command syntax backport 4 2the exact syntax need fleshed new command least able accept pids process_types backwards compatibility;2020-03-06T19:48:17.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-46820;kill hung processes last step resmokes signal handler signal handler finished running hang analyzer kill hung processes similarly archival necessary ensure resmoke make forward progress shut evergreen agent timeout waiting resmoke processes exit note archival still need able shut hung processes case test fails normally without timing;2020-03-12T14:53:33.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-46867;ensure db directory created even alwaysuselogfiles enabled alwaysuselogfiles enabled nocleandata option set make sure previously logged data deleted prevent resetdbpath called however resetdbpath used create db path first place need create directory doesnt exist allowing existing paths cleaned;2020-03-13T21:10:23.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-46891;selected_tests_gen creating tasks excluded selected_tests_gen generate non jstest tasks currently logic uses exclude non jstest tasks run tasks generated task_mappings see https github com mongodb mongo blob 36ae8a4824a88bd49ab5fa62740419c10c6bc39d buildscripts selected_tests py#l192 l196 also run logic tasks generated test_mappings currently tasks generated test mappings resulting non jstest tasks generated see example https evergreen mongodb com version 5e6d148f2fbabe4bcd3215b5 shows _concurrency tasks generated server engineer know selected_tests_gen generates jstest tasks line scope selected tests project ac changing files changed version result concurrency_ tasks generated;2020-03-16T15:22:29.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-47882;update signal processing package version dag engineer id like use latest version signal processing newest version signal processing algorithms used ac upgrade 3 0 ensure perf sys perf updated backport;2020-05-01T15:13:43.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-47880;send sigstop processes attaching prevent processes getting unstuck hang analyzer attaches sending sigstop first commands run process threads still work use commands noformat gdb handle sigstop ignore gdb handle sigstop noprint noformat;2020-05-01T14:36:43.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-47796;commit queue lint clang format run enterprise changes issue server 45586 think https jira mongodb org browse evg 7894 looks like maybe commit queue ci might include enterprise module changes lint clang format task way master waterfall ci submitted change got format errors enterprise code break master waterfall generate bfg https jira mongodb org browse bfg 599619my commit queue ci runs lint clang format task doesnt look like made patch enterprise module change https evergreen mongodb com task_log_raw mongodb_mongo_master_enterprise_rhel_62_64_bit_lint_clang_format_patch_085ffeb310e8fed49739cf8443fcb13ea795d867_5ea60ada306615619458e984_20_04_26_22_29_05 0typet#l1035;2020-04-27T15:04:38.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-47795;top level logging infra resmoke module subcommands afterserver 46769 resmoke begin supporting various sub commands subcommand implements logging infrastructure move resmoke module creates loggers subcommands context resmoke py optparse single top level logging config specific resmoke would work subcommands hang analyzer subcommand added server 46684 work inserver 46769 moves resmoke py logging impl run subcommand similar areas consider exiting resmoke special behavior needs reasoned moving exit resmoke py module;2020-04-27T14:54:31.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-47771;error gdb isnt found systems expect check https github com mongodb mongo blob 322f541cd162e7f99249115a8debdaafb8a3dedb etc evergreen yml#l3450 gdb present gathering failed unittests dont actually produce logging output indicate error system present isnt reason suspect gdb occasionally present expected assert;2020-04-24T20:57:28.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-47755;send sigabrt fallback hang analyzer due tig 859 hang analyzer may fail attach create core dumps macos tests core dumps often way get information process state lack may completely block server engineers bfs recent bf 16858 fallback measure send sigabrt processes debugger failed create core dumps precedent server 45342 sending externally created sigabrts logging messages distinguish internally generated aborts since signal handler separate thread doesnt take locks work case hang;2020-04-24T16:32:09.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-47620;upgrade eslint eslint version outdated doesnt support newer js syntax like object spread shell supports;2020-04-17T12:42:49.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-47589;integrate live record resmoke py add option resmoke py run live record;2020-04-16T13:29:25.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-47548;fix remove unittests_ yml test suites unittests_ yml test suites added server 18839 make easier run c++ unit tests related particular component locally however longer meaningfully run unit tests executables collapsed single executable per directory part changes server 41809 doubly unable meaningfully run result switch hygienic builds due build unittests txt refers files build install bin directory;2020-04-15T01:06:42.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-47509;resmoke accepts multiple mongodsetparameters options uses last one example resmoke suitecore mongodsetparameters enableindexbuildcommitquorum false mongodsetparameters logcomponentverbosity command 2 override first argument apply second noformat resmoke py mongodfixturejob0 date2020 04 13t141305 638 0400 si ccontrol id21951 ctxinitandlisten msgoptions set command line attr options net port20000 replication enablemajorityreadconcerntrue setparameter logcomponentverbosity command 2 storage dbpath data db job0 resmoke noformat causes problems testing majority read concern suite enables custom setparameters https github com mongodb mongo blob 79809da04aa7d49a6a276cb5ebfd191a6f664942 etc evergreen yml#l10186 runs suites like rollback_fuzzer enables setparameters https github com mongodb mongo blob 79809da04aa7d49a6a276cb5ebfd191a6f664942 etc evergreen yml#l4927 effect builders mongodsetparameters overrides test suite also revert changes server 47510;2020-04-13T18:20:41.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-47256;update listed maintainer repo package files self hosted apt repo listed maintainer date per sam kleinman current listed maintainer maintainer ernie hershey ernie hershey mongodb com line found packages packages gz files apt repo supported platforms ubuntu debian supported archs mdb editions community enterprise examples https repo mongodb org apt ubuntu dists xenial mongodb org 4 2 multiverse binary amd64 packages https repo mongodb org apt ubuntu dists bionic mongodb org 4 2 multiverse binary amd64 packages https repo mongodb org apt ubuntu dists xenial mongodb org 4 2 multiverse binary i386 packages gz https repo mongodb org apt debian dists buster mongodb org 4 2 main binary amd64 packages https repo mongodb org apt debian dists stretch mongodb org 4 2 main binary amd64 packages https repo mongodb com apt debian dists stretch mongodb enterprise 4 2 main binary amd64 packages https repo mongodb com apt ubuntu dists bionic mongodb enterprise 4 2 multiverse binary amd64 packages;2019-10-21T18:21:49.000+0000;Minor - P4;2.0;0;1;8
SERVER;SERVER-47165;missing mongohouse binary server patch code changes color#1d1c1d missing mongohouse binary server patch code changes color color#1d1c1d https evergreen mongodb com task mongodb_mongo_master_enterprise_rhel_62_64_bit_mqlrun_patch_c5eea7753b2fe3082d853ff9400117c85ac42dab_5e7e553f7742ae355b925437_20_03_27_19_34_40 color;2020-03-27T21:01:58.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-47004;eslint properly linting enterprise modules eslint run properly commit queue allowing lint failures introduced see https evergreen mongodb com task mongodb_mongo_master_enterprise_rhel_62_64_bit_lint_eslint_fadc3d1cd88084567e24559f75b216158186bde8_20_03_17_17_17_42 example;2020-03-19T21:07:01.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-47611;work to_local_args function using argparse current optparse implementation uses private method _get_all_options argparse equivalent;2020-04-16T22:38:11.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-45832;generate selected tasks patch using task mappings mongodb engineer able run selected_tests_gen task know run tasks given set related task mappings returned selected tests service know tasks affected code changes run ac run selected_tests_gen task patch build runs tasks related file changes using task mappings model run buildscripts selected_tests py locally logs tasks steps executed engineers debug issues encountered execution task parent display task returned task mappings endpoint given source file selected_tests_gen task know run _gen task associated parent display task execution task;2020-01-28T22:20:01.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-45730;update commit queue message validation change commit message validation raise error ticket reference omitted currently warning handle revert messages author different jira assignee currently generates warning changed handled similar backport;2020-01-23T19:35:27.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-45713;run rhel7 push publish tasks large rhel70 distro rhel7 repos big rhel70 small distro push publish_reo tasks need 80g free space;2020-01-22T22:07:36.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-44832;modify hooktestarchival reset fixtures archiving files hooktestarchival call sig kill test case terminate fixture archiving archiving execute fixturesetuptestcase restart fixture failure either steps raise stopexecution exception;2019-11-25T21:35:51.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-44641;platform support remove enterprise rhel 7 zseries sles 12 zseries 3 6 remove following build variants mongodb 3 6 enterprise rhel 7 2 s390x enterprise sles 12 s390x;2019-11-14T20:55:44.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-44338;validate commit message part commit queue process part migration commit queue pre commit git hooks longer run one hooks run validated commit message conformed certain rules evg 6445 able create task runs part commit queue validate commit message server engineer want commit queue check validate commit messageso dont know accidentally commit bad message ac commit queue task run fails commit invalid message;2019-10-31T17:32:19.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-44294;cap runtime generated tasks engineer tries repro test failure sometimes add large resmoke_repeat_suites number evergreen yml causes generated tasks compute large evergreen timeout potentially leaving host running long time cap runtime generated tasks either error inform user max repeat number use interally reduce repeat count smaller number almost always issue fails repro 48 hours unlikely repro happen indicate bug way repro set something wrong machine original failure occurred ac fails tasks expect run specified time limit provide message user explaining task failed want work around;2019-10-29T14:08:17.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-44254;dont run package tests enterprise rhel 7 0 libunwind variant dont create packages build variant therefore dont need run package tests;2019-10-25T20:04:08.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-44632;platform support remove community zseries 4 2 following mongodb 4 4 ga removing community zseries support mongodb 4 2 ssl rhel 6 7 s390x ssl rhel 7 2 s390x ssl sles 12 s390x ssl sles 15 s390x ssl ubuntu 18 04 s390x;2019-11-14T16:43:12.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-47995;extraneous unit tests link failed tasks failed evergreen non unittest tasks unit tests link tarballs gbs e g one https evergreen mongodb com task mongodb_mongo_master_enterprise_rhel_62_64_bit_replica_sets_multiversion_patch_da4a8e0e85627d6febd8bce3fd87f221e0ff97c6_5eb2be6be3c3310f36bc5cf2_20_05_06_13_42_24##257b2522compare2522253a255b257b2522hash2522253a2522da4a8e0e85627d6febd8bce3fd87f221e0ff97c62522257d255d257d 1 8gb unzipped file showed binaries debug symbols mongo gather failed unittests picking function run non unittest tasks requires change evergreen yaml;2020-05-06T20:41:44.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-44844;document use archived data files data files consistently used resurrect mongod instances investigate thoroughly instances behave document behaviors used;2019-11-26T15:36:16.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-45113;dump core test failure test fails resmoke call hang_analyzer py create core dumps currently running mongod processes modify hang_analyzer py option dump without rest analysis;2019-12-12T21:16:34.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-45680;burn_in_tests pick changed files mongo enterprise modules files currently burn_in_tests picks changed files mongodb mongo repo 10gen mongo enterprise modules repo user storyas mongodb engineer able run burn_in_tests patch builds run jstests ive changed 10gen mongo enterprise modules repo ensuring jstests changes cause fail ac burn_in_tests picks changes jstests 10gen mongo enterprise modules repo;2020-01-21T21:35:04.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-45595;update dsi download mongodb tools new tools endpoint eventually removing ability compile tools server code base perf projects use tools load data databases performance testing dsi need updated download tools tarball instead compiling tools server sources;2019-11-15T19:54:55.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-45491;add resmoke py option save mongod log mongos log files server 45491 patch copied tig 2235 server ticket resmoke py runs replica set tests mongod servers log stdout default overridden modifying javascript test code pass uselogfiles replsettest would useful way without modifying javascript test code make servers log files post test analysis propose resmoke py command line option enables logging disk prevents post test cleanup logfiles;2020-01-10T18:32:20.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-45488;detect_outliers doesnt appear running detect_outliers running system_perfl yml https github com mongodb mongo blob master etc system_perf yml#l361 l366 doesnt _set verbose_ cant see runs https evergreen mongodb com task_log_raw sys_perf_linux_1_node_replset_big_update_98ed45ba76c4683caefb921bda33f868c5f803e0_19_12_12_04_57_56 0typet#l5181 code 2019 12 12 163631 301 # detect outliers needs run defer post_run_check exit status later 2019 12 12 163631 301 echo post_run_check status 2019 12 12 163631 302 running command shell exec analyze step 4 3 4 2019 12 12 163631 305 running command shell exec analyze step 4 4 4 2019 12 12 163631 306 filenamerejects json 2019 12 12 163631 306 filename 2019 12 12 163631 306 echo rejecting task due following outliers 2019 12 12 163631 306 cat filename code see step 4 4 4 also artifact https s3 amazonaws com mciuploads dsi linux 1 node replset 98ed45ba76c4683caefb921bda33f868c5f803e0 sys_perf_linux_1_node_replset_big_update_98ed45ba76c4683caefb921bda33f868c5f803e0_19_12_12_04_57_56 sys_perf_98ed45ba76c4683caefb921bda33f868c5f803e0 logs dsi artifacts big_update sys_perf_linux_1_node_replset_98ed45ba76c4683caefb921bda33f868c5f803e0_19_12_12_04_57_56 0 tgz doesnt contain detect_outliers log finally outliers saved outliers collection time code mongodb enterprise performancedata shard 0primary db outliers find project sys perf sort _id 1 limit 1 0 _id gettimestamp isodate 2019 11 11t121907z code;2019-12-13T16:54:04.000+0000;Trivial - P5;2.0;0;1;8
SERVER;SERVER-45074;commit queue commit message validation double check ticket id ticket key real pain make commit wrong ticket number prefix end needing bunch manual work reconcile various places things got logged incorrectly paper mistake since adding validation commit messages ways formatting etc see would possible also validate jira ticket nominally committing makes sense open assigned etc;2019-12-11T22:14:18.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-45355;send sigabrt failed tests use jasper server 45342 modifies process py resmoke allow sigabrt sent fixtures test fails also need allow jasper processes thing core dumps generatedthe main change allow stop jasper_process py stop process sigabrt similar process py https github com mongodb mongo blob 5a14578a131325525fc92cbb1ee315ebb35add8d buildscripts resmokelib core process py#l196;2020-01-03T18:55:36.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-45183;platform support add ubuntu 16 04 using docker 19 03 testing 4 4 ubuntu 16 04 using docker 19 03;2019-12-16T20:11:06.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-48110;simplify resmoke self checks make separate resmoke_selftest resmoke suite calls tests resmokelib fix ignore test_multi_js_test_selector_one_group since takes dozens seconds run remove exclude_files buildscripts_test resmoke suite instead unittest skip add single command script something runs relevant checks resmoke code checks including resmoke self tests linters write quick resmoke_readme md file inside resmokelib details setup test resmoke;2020-05-11T21:02:41.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-48112;use absolute imports resmoke use absolute imports e g buildscripts resmokelib instead;2020-05-11T21:04:01.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-50000;run mongod mongos live record undodb enabled let live record execing way guarantee live record attached shared libs loaded;2020-06-30T17:11:50.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-49504;allow resmokes mongo shell log jasper allow mongo shell spawned resmoke https github com mongodb mongo blob 316408d14e2358225e8f26bfe4d4022cfcf748d9 buildscripts resmokelib core programs py#l462 log logkeeper v3 suites dont use fixtures run almost entirely shell subprocesses making feature easy way validate new logging path well need set logkeepver v3 related credentials resmoke evergreen yml part ticket well;2020-07-14T21:03:28.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-49501;integrate undodb build variant selected_tests_gen add new build variant make required evergreen yml runs selected tests undo need disable certain suites selected_tests_gen dont succeed consistently run undo believe 3;2020-07-14T20:07:53.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-49128;dont hard code selected_tests_buildvariants etc evergreen yml server team switched using enterprise rhel 62 64 bit dynamic required main required build variant running tasks selected_tests_buildvariants longer reflects current list required builders server engineer want selected_tests py generate tasks enterprise rhel 62 64 bit dynamic required required builders run tasks generated correct build variants ac selected_tests_buildvariants removed etc evergreen yml https github com mongodb mongo blob a121dd87e2c3b9268f173ed45d815f9f52ddc821 etc evergreen yml#l12738 required variants identified way;2020-06-25T21:49:01.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-48953;add option resmoke accept replay file lists tests patch allows following command line invocations noformat resmoke run replayfile foo txt noformat noformat resmoke run foo txt noformat contents foo txt noformat jstests concurrency fsm_workloads indexed_insert_multikey jsjstests concurrency fsm_workloads indexed_insert_2dsphere js noformat invocation analogous noformat resmoke run jstests concurrency fsm_workloads indexed_insert_multikey js jstests concurrency fsm_workloads indexed_insert_2dsphere js noformat thus command line flags suite still take effect also noteworthy resmoke run contents replay file order listed repeated test files run per repetition prior behavior dedup test files original ticketwhen running set tests resmoke one option running alphabetical order totally random would nice random runs could least use deterministic order provided seed goal also compatible using jobsn jobs flag partition test suite different runners providing seed runner deterministically run tests order;2020-06-18T14:38:41.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-48705;resmoke py sending sigabrt take core dumps fixture teardown may overwrite core files hang analyzer archival enabled test test suite resmoke py sends sigabrt signal fixture processes take core dump addition collecting mongod data files javascript test already invoked hang analyzer via assert soon core file generated hang analyzer overwritten noformat fsm_workload_testagg_merge_when_matched_replace_with_new 2020 05 26t083420 234+0000 sh118695 saved corefile dump_mongod 4235 core shardedclusterfixturejob0shard0secondary0 attempting send sigabrt resmoke mongod port 20002 pid 4235 noformat note core dump taken resmoke py sending sigabrt signal unlikely match thread stacks hang analyzer output running hang analyzer expected perturb state mongodb cluster;2020-06-10T21:48:34.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-50078;compile bypass applied see dev comment patch build links far understand changes sconstruct disable compile bypass see also evg 12714;2020-08-03T14:55:16.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-48360;bypass compile broken bypass compile https github com mongodb mongo blob master buildscripts bypass_compile_and_fetch_binaries py script looks files changed patch build determines could impact compile artifacts shouldnt impact download binaries mainline build patch built instead actually compiling saves large chunk compile time looks like problem one compile artifacts attempting download named differently windows platforms store artifacts download dictionary https github com mongodb mongo blob 445a62507a009c093385b1ddceb1ea33a107e006 buildscripts bypass_compile_and_fetch_binaries py#l94 l97 seems like need handle windows case better far system failing bypass compile files bypass compile originally written decision made explicitly fail error since would compile normal impact would compile task takes longer makes sense means bypass compile breaks get notice likely stays broken someone digs task logs dont think change behavior ticket something might worth discussion;2020-05-21T15:05:43.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-48158;add resmoke testing jaspers logging endpoint part test driven development approach taking jasper resmoke integration project first add unittests resmoke following scenarios1 resmoke logging parent end point directly one resmoke one jasper process logging child endpoint2 two parent endpoints one child logging endpoint parent wed like assert output log exhibits properties logging hierarchy log go file memory buffer;2020-05-12T18:58:09.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-48156;ensure resmoke works jasper jasper_process py added resmoke ago currently used ensure code still works server tests resmoke self tests succeed running jasper assume always logging stdout;2020-05-12T18:54:20.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-48155;remove testqueuelogger testqueuelogger https github com mongodb mongo blob e2602ad053b2120982fbcac8e33e1ad64e6ec30a buildscripts resmokelib logging loggers py#l321 never logged directly used providing test type information endpoints testloggers storing logging configuration information globally logger determine endpoint remove testqueuelogger completely allow testlogger hooklogger constructed directly log configured endpoints;2020-05-12T18:44:35.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-48150;streamline resmoke loggers currently construct https github com mongodb mongo blob e2602ad053b2120982fbcac8e33e1ad64e6ec30a buildscripts resmokelib logging loggers py#l149 jobloggers executorrootlogger instances creating weird situation use information executorrootlogger information fixturerootlogger changing logging configuration managed able construct jobloggers directly job objects;2020-05-12T17:47:19.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-48132;selected tests missing majority fuzzer tasks selected tests alias using regex _fuzz detect fuzzer tasks however fuzzer tasks named something like jstestfuzz_ none picked fuzzer need update regex come better way selected tasks server engineer want selected tests pull fuzzer tasks dont run manually ac js fuzzer tasks run selected tests patch build;2020-05-12T13:24:24.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-48296;remove logic repeat tests selected_tests_gen task selected_tests runs particular test test related changed source file test_mappings specifies repeat argument see https evergreen mongodb com task_log_raw mongodb_mongo_master_enterprise_rhel_62_64_bit_change_streams_whole_cluster_mongos_passthrough_0_enterprise_rhel_62_64_bit_patch_846cd7c189350edffecfe260e149571927d19d95_5eac9c877742ae2d72c4eb9c_20_05_01_22_03_19 0typet#l249 way burn_in_tests see example version https evergreen mongodb com version 5e385d1ba4cf473b25eabac9 built way using burn_in_tests code selected_tests_gen reason repeat tests reason use repeat arguments dag engineer know tests run tasks generated selected_tests_gen repeat config related arguments provided generated task config simple possible contain repeat arguments doesnt need ac repeat related arguments e repeatsuites1 repeat1 passed resmoke selected_tests_gen;2020-05-19T16:19:07.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-50085;make easier correlate mongo process names ports pids logs fixtures started resmoke test suites whose underlying mongod processes managed resmoke py hard figure mapping mongo process ports replica states pids log messages example replica_sets_jscore_passthrough suite log line shows state replica set node noformat replicasetfixturejob9primary 2019 07 02t020903 027+0000 index conn98 validated collection config transactions uuid f6c6dde1 fc12 4608 b439 c09508cfee9e noformat ideally would easy way know looking log line replica set state primary secondary etc pid port mongo process started sharding suites also want know whether node config server mongos etc currently figuring information requires one trace back beginning logs may entirely separate file fixture restarted recently look startup messages information one thought would print complete mapping ports pids current replica set states beginning every new test execution could also include info directly log message prefix;2019-07-02T15:57:54.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-50298;remove spawnhost related debugging setup scripts buildscripts favor evergreen configuration server 50282 adds files server repos buildscripts directory intended executed spawnhost workaround fact evergreen doesnt provide way customize spawnhosts per project basis server 50282 makes hopefully valuable piece information accessible still great solution usability 1 maintainability 2 ticket follow reverse work favor better solution whenever becomes possible 1 file still executed hand lives different directory spawnhost 2 using buildscripts things local server repo makes sense e g resmoke mongosymb items inside buildscripts depend spawnhost specific knowledge difficult edge programmers remember theyre making potentially breaking evergreen evergreen yaml change;2020-08-13T16:41:02.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-50133;perf yaml cleanups depends server 49786from sys perf yaml# remove mark_idle invocations # switch run dsi invocations use subprocess exec extensions## kill set lines dsienv sh setup dsi env sh kill dsi kill signal_processing_setup sh dsi youre ## never absolute paths py suffixes always run dsi command kill bin anaysis py# kill write yml config favor expansions yml# deploy cluster calls run dsi deploy cluster# json send post task# kill useless constant project_dir platform script_flags varsfor perf yml# call analysis run dsi# killall_mci expansion doesnt exist kill pre post steps make pkill scripts ugly af;2020-08-05T21:31:59.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-50313;add standalone tasks live record buildvariant test suites run standalone except unittests non mongod c++ test suites like libfuzzer snmp test suites run replica set except ones explicitly listed test suites run sharded cluster except ones explicitly listed requires_fast_memory tag excludewithanytagsrequires_fast_memory make following effort run tests undo following approaches combined dont ensure suite run undo modify scope exclude failing test suites blacklist problematic tests time per suite e failing tests one patch build audit tags failing tests tags performance requirements exclude tests increase election timeout increase test task timeout reduce wt cache size reduce size cluster turn continueonfailure reduce number clients adjust data size run larger instances including adding new ec2 8x instance;2020-08-14T12:50:51.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-50312;dont save undodb recordings successful fixtures currently save recordings based resmoke return code instead delete recordings fixture recording corresponds succesful;2020-08-14T12:38:42.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-44144;allow commit queue patches publish scons cache shared scons cache written non patch builds since commit queue builds high likelihood merged master would valuable write cache well particular next item commit queue could reuse lot artifacts server engineer want commit queue builds write shared scons cache future commit queue builds reuse artifacts ac build done part commit queue able write shared scons cache logic whether commit queue read read write found https github com mongodb mongo blob 563dc7451690efa475db5feda913098e777471da buildscripts generate_compile_expansions_shared_cache py#l102 l109 additionally expansion added tell given build commit queue build https jira mongodb org browse evg 5877;2019-10-22T13:52:17.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-41439;dynamically choose distro burn_in_tags py currently hardcoding distro compile rhe162 large need dynamic https github com mongodb mongo commit ff945d4698dfcc61236537d7a5912ddd1abd9695#diff 2b1323d0ae241e7dacc3d4c913d481d8r99 server engineer want burn_in_tags compile distro dynamically selected based base variants provided scriptso adding new variant would pick right distroac burn_in_tags picks distro based buildvariant e windows buildvariant run compile rhe162 large;2019-05-31T20:19:43.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-40592;uncaught exception resmoke py job thread due logkeeper unavailability tearing fixture call teardown_fixture https github com mongodb mongo blob a13c018b51465b04027adee28fd79fd82ed4575b buildscripts resmokelib testing job py#l102 happen try except block theres buildscripts resmokelib errors loggerruntimeconfigerror exception record message self logger error err task logs theres kind exception record message python stacktrace self logger exception encountered error tearing self fixture err task logs additionally set teardown_flag noformat 2019 04 08 210745 443 exception thread thread 1 2019 04 08 210745 443 traceback recent call last 2019 04 08 210745 443 file opt mongodbtoolchain revisions 94dac13bc8c0b50beff286acac77adeb2e81761e stow python3 v3 lje lib python3 7 threading py line 917 _bootstrap_inner 2019 04 08 210745 443 self run 2019 04 08 210745 443 file opt mongodbtoolchain revisions 94dac13bc8c0b50beff286acac77adeb2e81761e stow python3 v3 lje lib python3 7 threading py line 865 run 2019 04 08 210745 443 self _target self _args self _kwargs 2019 04 08 210745 443 file data mci 6e26eb78c635416bfda724f51d2fa812 src buildscripts resmokelib testing job py line 102 __call__ 2019 04 08 210745 443 teardown_flag none self teardown_fixture 2019 04 08 210745 443 file data mci 6e26eb78c635416bfda724f51d2fa812 src buildscripts resmokelib testing job py line 64 teardown_fixture 2019 04 08 210745 443 test_case self report 2019 04 08 210745 443 file opt mongodbtoolchain revisions 94dac13bc8c0b50beff286acac77adeb2e81761e stow python3 v3 lje lib python3 7 unittest case py line 663 __call__ 2019 04 08 210745 443 return self run args kwds 2019 04 08 210745 443 file opt mongodbtoolchain revisions 94dac13bc8c0b50beff286acac77adeb2e81761e stow python3 v3 lje lib python3 7 unittest case py line 588 run 2019 04 08 210745 443 result starttest self 2019 04 08 210745 443 file data mci 6e26eb78c635416bfda724f51d2fa812 src buildscripts resmokelib testing report py line 112 starttest 2019 04 08 210745 443 test logger 2019 04 08 210745 443 file data mci 6e26eb78c635416bfda724f51d2fa812 src buildscripts resmokelib logging loggers py line 205 new_test_logger 2019 04 08 210745 443 test_id format test_basename 2019 04 08 210745 443 buildscripts resmokelib errors loggerruntimeconfigerror encountered error configuring buildlogger test job0_fixture_teardown failed get new test_id noformat;2019-04-11T18:57:03.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-43732;burn_in_tests detect changes core recently caused failure due new test core suite working sharded_collections_jscore_passthrough suite even though ran burn_in_tests patch build felt like burn_in_tests caught;2019-09-30T19:56:00.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-38816;use generate tasks required tasks target runtime apply generate tasks resmoke tasks required builders average runtime greater target runtimes target runtimes rhel 6 2 10 minutes enterprise windows 2008r2 20 mins linux debug 15 mins;2019-01-03T14:25:27.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-42228;loggerruntimeconfigerror exceptions lead background dbhash thread running evergreen task times testreport starttest raises exception job _run_hooks_after_tests wont called https github com mongodb mongo blob e6644474d876eb99579101e81d38c363feef07cd buildscripts resmokelib testing job py#l198 l222 test suites use checkrepldbhashinbackground hook leads background thread continuing spawn mongo shell processes running run_check_repl_dbhash_background js hook logkeeper overwhelmed errors loggerruntimeconfigerror exception also occur attempting tear fixture leads evergreen task time instead failing code 75 background dbhash check continue run fixture still running resmoke pys flush thread therefore never exit dont want always run after_test method hook though example running test crashes server shouldnt attempt run data consistency checks theyll fail connect downed server;2019-07-13T21:15:28.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-42377;burn_in_tests looks incorrect commit compare pushed change expected one burn_in_tests failure failed commits see bf 13954 tests still run task https evergreen mongodb com task mongodb_mongo_v4 2_enterprise_rhel_62_64_bit_required_inmem_display_burn_in_tests_9723ffc820396ca6ccf542cd5d1c3518b5d2db12_19_07_11_20_36_15 commit looks like burn_in_tests looking wrong commit compare find changed tests;2019-07-12T17:51:24.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-39413;write script analyze evergreen task tag usage script analyze task tag usage evergreen yml would useful watching misuse tags scripts provide following information list tags used tasks given tag provide list tasks marked tag;2019-02-07T16:45:17.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-39305;update resmoke support new repeattests options add following new options control test repetition repeatteststimesecs repeattestsmaxthese options help repeat test repeatteststimesecs reached default value none indicates time limit specified resmoke uses repeattests value additional parameter repeattestsmax would used conjunction repeattests minimum number repetitions bound repeatteststimesecs values test runs follows least repeattests times stops repeating either repeatteststimesecs repeattestsmax reachedsee server 38911 proof concept option;2019-01-31T15:14:03.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-39307;update burn_in_tests py support new resmoke repeattests options modify burn_in_tests py support following new options repeattestmin default 2 minimum number times test run repeattestmax default 1000 maximum number times test run repeattesttimesecs default 600 time used compute number repetitions test test task history availablenote last 2 repeat option values passed resmoke different ticket server 39311 enable burn_in testing increase repetition count;2019-01-31T15:21:59.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-40045;validateerror use stringdata instead stdstring validateerror test collection_test cpp creates stdstring 00000 bf 12300 likely caused assumption string length 5 strlen returning 0 change use stringdata instead;2019-03-08T19:14:41.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-42440;burn_in_test run tasks distro normally run burn_in_tests runs tests discovered run tests distro normally run otherwise tests could fail due resource constraints normally server engineer want burn_in_tests run normal distro dont spend time investigating failure due resource constraints ac tasks normally run non default distros run distros burn_in_tests;2019-07-25T21:42:38.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-43055;prevent exception thrown gdb prints bsonobj datetimes beyond datetime maxyear bson python package throw exceptions gdb pretty printer allows exceptions escape gdb lldb cause crash im sure example managed get gdb print python stack trace crash difficult achieve noformat gdb p oplogbson 13 owned bsonobj 340 bytes 0x555556a614a8traceback recent call last file buildscripts gdb mongo_printers py line 130 children bsondoc buf decode codec_optionsoptions file opt mongodbtoolchain revisions e84eb3fd219668197589e62dba14b9914712642d stow python3 v3 ffc lib python3 7 site packages bson __init__ py line 1164 decode return _bson_to_dict self codec_options bson errors invalidbson year 292278994 range noformat;2019-08-27T17:26:53.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-38589;service mongod stop may produce usr bin mongod found running none killed fix applied https github com mongodb mongo blob 6c8dc5e004bf2c91df10975adef861bcf00af6cd debian init prevent error stopping mongod;2018-12-13T00:18:59.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-43900;set max_hosts 1 stitch_support_lib_build_and_test embedded_sdk_build_and_test task groups bf 11716 second task stitch_support_lib_build_and_test task group stitch_support_run_tests failing gets run different build variant time rather dependency task stitch_support_install_tests set max_hosts 1 stitch_support_lib_build_and_test task group tasks get run consecutive order host similarly bf 14342 embedded_sdk_install_dev getting run dependency task embedded_sdk_build_cdriver tasks run part embedded_sdk_build_and_test task group user storyas server engineer run stitch_support_lib_build_and_test embedded_sdk_build_and_test task groups know task groups tasks get run consecutive order host failures build ac tasks within stitch_support_lib_build_and_test task embedded_sdk_build_and_test task groups run consecutive orderbf https jira mongodb org browse bf 11716;2019-10-08T21:09:01.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-41677;perf json call json get_history directly json get_history evergreen fail new task added since task history etc system_perf yml file added workaround server 35207 etc perf yml updated time also etc perf yml newly added tasks fail well server engineer want etc perf yml use json get_historyso add new tasks succeed ac new tasks added etc perf yml able succeed despite history;2019-06-12T19:50:08.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-41295;add timeouts burn_in generated tasks since explicitly set timeout burn_in generated tasks hung test would fail default timeout hit lead timeouts causing large log files written makes difficult access log files given test test history able get approximation long test run set timeouts dynamically generate_resmoke_tasks already server engineer want burn_in generated tasks timeout run long log file test stays manageable size ac every task generated burn_in test history sets timeout based test history;2019-05-23T17:54:54.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-42571;collect windows event logs remote machine powercycle weve many failures since upgrading windows server 2016 mongod service fails start process abruptly terminates started windows event logs revealed notmyfault exe used crash virtual machine log data files cases mongod exe executable cannot opened collect recent messages application security system event logs windows using wevtutil utility https docs microsoft com en us windows server administration windows commands wevtutil order diagnostics around issue mysterious ones surely come future;2019-08-01T03:57:23.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-38721;enable canary outlier detection system_perf yml run command canary outlier detection analyze phase task;2018-12-20T12:35:26.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-43067;add end end tests generating sub tasks add end end tests buildscripts evergreen_generate_resmoke_suites py server engineer want end end tests evergreen_generate_resmoke_suitesso makes changes scripts without worrying breaking things ac least 1 test executes main body evergreen_genreate_resmoke_suites;2019-08-28T18:44:20.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-38710;support dependencies generating evergreen tasks support depends_on requires generating tasks;2018-12-19T20:27:53.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-41762;burn_in_tags need generate compile task burn_in_tags scripts generates build_variants variants would normally run want run burn_in_tests currently also generates compile task build_variant creates need able depend use artifacts existing build_variant server engineer want burn_in_tags generated tasks depend existing compiles compile work duplicated ac build_variants generated burn_in_tags compile task;2019-06-14T18:56:13.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-40031;move pre scons compile tasks separate compile_prereqs task currently spend 2 minutes setting virtualenvs building go tools installing python requirements etc time accounted part compile task isnt really prelude able compile interest better able track account time spent build move pre requisite task runs box compile ensure compile task consists exclusively scons invocation follow work also trimmed;2019-03-07T23:03:02.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-41003;generating suites dont set repeat suites repeat options generate_resmoke_suites option set repeat_suites send resmoke default set 1 however user tries add repeat resmoke_args default overwrite give user want could set repeat_suite option repeat set see https github com mongodb mongo blob b1a9c9adea89b475fb05660e2a1cad00971e6899 buildscripts evergreen_generate_resmoke_tasks py#l294 l295 server engineer set repeat resmoke_args task want overwritten default 1 ac _gen task patch build repeat_suite value set resmoke_args resmoke use value;2019-05-03T19:34:58.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-39488;test see storage statistics profiled output test wt_operation_stats js looks storage statistics profiled output find operation find operation test executed two parts 1 find command 2 getmore triggeredby find test always looks storage statistic last profiled command getmore case getmore always storage stats find command always storage stats hence look storagestats find commands profiled entry;2019-02-11T04:56:21.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-43255;automatically call whatthefailure assert soon friends add logic assert soon automatically call hang analysis prior throwing add additional optional parameter assert soon additional params pass hang analysis js function addition throwing hang analysis fancy new bonus feature need users assert soon using assert soon retry mechanism separate ticket fix callers assert soon;2019-09-10T19:52:23.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-39952;switch master use newer amazon linux 1 distro newer amazon linux 1 distro added evergreen need switch master branch use instead old distro;2019-03-04T22:03:33.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-43186;limit number tests added generated suite cleaneveryn test hook gets run every n tests due way tests run could run different test every execution means use test runtime calculate timeouts might properly account cleaneveryn runtime set timeout short problematic suites made lots short running tests maximum number tests per suite used dividing tests would longer problem server engineer want maximum number tests per generated sub suite cleaneveryn hook cause timeouts ac suites run cleaneveryn hook set maximum number tests per suite;2019-09-05T21:00:10.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-41940;remove use evergreen_client library favor evergreen py burn_in_tests burn_in_tests script calls evergreen #l32 get test history information task running recently build python evergreen client https github com evergreen ci evergreen py added burn_in_tests buildscript https mongodbcr appspot com 461660007 consistent use evergreen py access evergreen api everywhere burn_in_tests script mongo engineer want burn_in_tests use common evergreen client library dont maintain code connect evergreen ac burn_in_tests script use evergreen client buildscripts related tickethttps jira mongodb org browse server 40893;2019-06-26T20:23:49.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-39455;lint evergreen yml file really easy introduce subtle bugs evergreen yml file see server 38822 example using yaml linter could catch issues create evergreen task run one part required builder one https github com adrienverge yamllint seems work installed pip module would want run relaxed mode code yamllint relaxed etc evergreen yml code;2019-02-08T14:55:54.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-39948;remove simultaneous index build related fields createindexes cmd logging code replicasetfixturejob0primary 2019 03 04t153646 969+0000 command conn1796 command test8_fsmdb7 fsmcoll7 appname tid48 command createindexes builduuid uuid e3ece2b5 e401 4530 87f0 abb8448c0dee buildingphasecomplete true runtwophaseindexbuild false commitreadymembers localhost20000 localhost20001 localhost20002 createindexes fsmcoll7 indexes key b 1 0 name b_1 lsid id uuid 3743b6a0 b87d 44f6 8580 14c705d209a0 clustertime clustertime timestamp 1551713805 57 signature hash bindata 0 0000000000000000000000000000000000000000 keyid 0 db test8_fsmdb7 numyields3 reslen239 locks global acquirecount r 7 w 11 database acquirecount r 1 w 6 w 2 acquirewaitcount w 2 w 2 timeacquiringmicros w 46424 w 60687 collection acquirecount r 1 w 5 r 1 mutex acquirecount r 4 storage protocolop_msg 444ms code think https github com mongodb mongo blob 56efcffbcba956aa24518c71d100ecffee965058 src mongo db catalog multi_index_block cpp#l804 l824 logging coming double check;2019-03-04T20:56:18.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-40690;create lightweight enterprise windows build variant thats required patch builds enterprise windows 2008r2 build variant runs number evergreen tasks appear least empirically redundant list tasks run required linux build variants create new variant task list similar following codeyaml name enterprise windows 64 2k8 required display_name enterprise windows 2008r2 modules enterprise run_on windows 64 vs2017 test expansions # use anchor alias avoid duplicating display_tasks dbtest tasks name compile_tg requires name burn_in_tests_gen name verify_pip distros windows 64 vs2017 compile name burn_in_tests_gen name verify_pip name buildscripts_test name dbtest_tg distros windows 64 vs2017 compile name nopassthrough_gen code update display_name enterprise windows 64 2k8 build variant enterprise windows 2008r2 order reflect batchtime 1 hour isnt required build variant definition required alias evergreen database must also updated include enterprise windows 64 2k8 required rather enterprise windows 64 2k8;2019-04-17T15:02:28.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-43406;reduce pip logging tasks evergreen tasks setup python virtualenv python scripts run part pip install requirements writes lot information logs rarely needed could pip output file upload would clean logs still provide traceability python packages installed needs investigated server engineer want pip install requirements write evergreen logs easier find im looking logs ac pip install write installed packages log packages version installed pip still available needed;2019-09-20T21:02:04.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-43288;update fallback values generated tasks cached historic test results turned evergreen past weeks lead generated tasks able use runtime split tasks tasks fallback value use split tasks isnt historic data value set 1 causing timeouts example https evergreen mongodb com task mongodb_mongo_master_ubuntu1804_debug_asan_display_logical_session_cache_sharding_100ms_refresh_jscore_passthrough_0031fa41177db46789e411895a5bcd33b2847ed5_19_09_04_12_24_50 pass suites make sure fallback values appropriate server engineer want generated task fallback value set appropriatelyso tasks still split even cant get historic test results ac generate resmoke tasks etc evergreen yml fallback_num_sub_suites value set 1;2019-09-11T19:52:25.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-40019;change uuidcatalogiterator operator _repositionifneeded the_mapiter _uuidcatalog _orderedcollections end comparison uuidcatalogiteratoroperator fails windows debug builds _mapiter invalidated change meaning iterator equality uuidcatalogiterator prevent _repositionifneeded method also bug returns false _mapiter end map return true iterator actually repositioned;2019-03-07T17:35:38.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-41885;windows scons cache fix windows2008r2 debug scons cache mount script generated windows 2008r2 execution causes failure 2 tasks stitch_support_create_lib stitch_support_install_testswith errror codejava sh line 57 win_mount sh file directory code;2019-06-24T15:49:59.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-42075;add dsi module perf yml explicitly git clone mongo perf dsi perf yml clean use modules things review module calls;2019-07-03T18:56:41.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-41802;generate_resmoke_tasks doesnt apply max_sub_suites option max_sub_suites set given suite generate_resmoke_tasks actual apply split suites see https evergreen mongodb com task mongodb_mongo_master_enterprise_rhel_62_64_bit_display_multi_shard_local_read_write_multi_stmt_txn_jscore_passthrough_patch_259bd089d0265ac510acbe4512eb706cd553562b_5d0173e39ccd4e3b3d8a4ef8_19_06_12_21_52_04##257b2522compare2522253a255b257b2522hash2522253a2522259bd089d0265ac510acbe4512eb706cd553562b2522257d255d257d server engineer want max_sub_suites control much resmoke suites split upso way prevent suites split much ac generated suite max_sub_suites set split specified number sub suites;2019-06-17T20:55:24.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-39988;remove integration_tests compile phase move execution new box phase currently build integration tests part compile pull artifacts tgz run remote machines instead treat like dbtest unit tests compile run box integration_tests phase compile_integration_tests run_integration_tests sub phases;2019-03-06T19:12:41.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-42071;notary client errors system failures cases like https evergreen mongodb com task mongodb_mongo_v4 0_enterprise_rhel_70_64_bit_push_5f93fc9db3a3475dd2c7543b9f1e1179e6f9065f_19_06_14_13_51_46 notary client errors obscured different issue evergreen one line change adding type test line 2437 hard part figuring kind error testred setuplavender want think shouldnt system failure probably make harder diagnose issues;2019-07-03T17:25:59.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-39279;race servicecontextclientdeleter waitforclientstofinish servicecontextclientdeleteroperator client client accesses servicecontext outside servicecontexts mutex call registered observers ondestroy servicecontext may already destroyed service_context_test_fixture https github com mongodb mongo blob e12dcc7fdbdb44fb7806dfb42a49bd740f361d82 src mongo db service_context_test_fixture cpp#l52 since client vector empty checked waitforclientstofinish https github com mongodb mongo blob cdf319123d8e5d3cd169e2a11aec6aea0b951bf1 src mongo db service_context cpp#l344 codec++ void servicecontextclientdeleteroperator client client const servicecontext const service client getservicecontext stdxlock_guardstdxmutex lk service _mutex invariant service _clients erase client service _clients empty service _clientsemptycondvar notify_all servicecontext may already destroyed ondestroy client service _clientobservers delete client code;2019-01-29T23:14:55.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-43003;add option archive data files shell spawned processes fail consistency checks data archival hook currently option archive data data consistency checks fail works resmoke spawned processes also pick shell spawned processes consistency checks automatically shutdown;2019-08-23T14:53:26.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-41393;drives dont come back enterprise amazon linux powercycle testing experimentation brian mccarthy weve found ebs volumes come back amazon1 2018 test evergreen distro entry etc fstab uses uuid drive ubuntu1604 powercycle evergreen distro doesnt appear impacted note also recommendation amazons documentation well quote mount attached ebs volume every system reboot add entry device etc fstab file use device name dev xvdf etc fstab recommend using devices 128 bit universally unique identifier uuid instead device names change uuid persists throughout life partition using uuid reduce chances system becomes unbootable hardware reconfiguration information see identifying ebs device https docs aws amazon com awsec2 latest userguide ebs using volumes html#ebs mount reboot quote based https unix stackexchange com 270216 use either blkid value uuid dev xvd lsblk uuid dev xvd command get uuid write place device_name mount_drives sh script https github com mongodb mongo blob da754e6c0490a3ccacd04339f34fafbd878331b4 buildscripts mount_drives sh#l155;2019-05-30T14:16:32.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-39127;use generate tasks already converted tasks variants several tasks already use generate tasks required builders switched use generate tasks builders non generate tasks tasks removed;2019-01-22T18:41:40.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-42913;use pre_error_fails_task etc evergreen yml evergreen pre tasks tasks run start task execution however failures tasks silently ignored default lead tasks different states run pre tasks fail evergreen option pre_error_fails_task https github com evergreen ci evergreen wiki project files#pre post timeout cause failure pre tasks fail task execution enabling allow us avoid running tasks different state normally would server engineer want pre_error_fails_task enabled evergreen configuration know tasks running consistent state ac pre_error_fails_task enabled etc evergreen yml;2019-08-20T14:04:30.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-42664;add function mongo shell converting bsonobj array purpose function make possible convert object codejavascript 1 2 code sort keys returned compound sort specifications array codejavascript 1 2 code meaningfully interacted via javascript duplicate empty string field names object form otherwise hidden first one possible use function objects non duplicate non empty field names well cases thought function similar object values https developer mozilla org en us docs web javascript reference global_objects object values one actually works bsoninfo instances model function bsonwocompare bsonbinaryequal functions https github com mongodb mongo blob b8602c086ff469967bedc82b14d63d4a236d092c src mongo scripting mozjs bson cpp#l271 l299 mongo shell define bsonobjtoarray global function uses objectwrappertobson https github com mongodb mongo blob b8602c086ff469967bedc82b14d63d4a236d092c src mongo scripting mozjs objectwrapper cpp#l529 convert extract argument bsonobj use valuereaderfrombsonarray https github com mongodb mongo blob b8602c086ff469967bedc82b14d63d4a236d092c src mongo scripting mozjs valuereader cpp#l230 l246 convert bsonobj javascript array;2019-08-07T14:00:09.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-38509;handle degraded mode test history generate_resmoke_suites evergreen going implement degraded mode cannot respond test history queries due load mode queries test history return http 503 see https jira mongodb org browse evg 5633 detect condition attempting split test suites divide suites randomly may want define expansion project much divide situation would allow us change value without needing commit new code;2018-12-10T21:05:45.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-39311;enable burn_in repetition count update evergreen yml use burn_in_tests_gen task update burn_in_test py pass new repeattests options resmoke;2019-01-31T15:57:00.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-44140;use signal processing without dsi dag engineer would like signal processing run outside dsi ac performance sys perf projects mongo repo use signal processing directly detect changes detect outliers;2019-10-21T19:48:29.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-42623;sched module python 3 causes close event mistakenly canceled leading resmoke py hang discovered issue investigating server 42356 yet another way close never called fixturelogger testlogger changes https hg python org cpython rev d8802b055474 made sched event instances returned sched scheduler enter sched scheduler enterabs treated equal time priority https github com python cpython blob v3 7 0 lib sched py#l36 therefore possible remove wrong event list sched scheduler cancel called https github com python cpython blob v3 7 0 lib sched py#l96;2019-08-04T06:08:08.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-40486;remove test lifecycle code longer using test lifecycle code go remove code executing would include references etc evergreen yml buildscripts fetch_test_lifecycle py buildscripts update_test_lifecycle py related files server engineer want test lifecycle code removed dont spend time maintaining ac etc evergreen run test_lifecycle related tasks test lifecycle scripts tests removed mongo repository;2019-04-04T20:58:33.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-42615;run chkdsk command windows powercycle loop weve seen variety errors powercycle testing windows upgrading windows server 2016 none indicative mongodb issue startservice fails service respond start control request timely fashion startservice fails device ready startservice fails access denied startservice fails error performing inpage operation mongod powertest service terminates unexpectedly due able access file unnamed application event logs run chkdsk command https docs microsoft com en us windows server administration windows commands chkdsk read mode e without extra parameters see collect diagnostics indicating ntfs volume corrupt using notmyfault exe crash machine;2019-08-02T16:06:33.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-44017;hang analyzer unzips debug symbols modify hang_analyzer py automatically unzip debug symbols necessary already unzipped cwd take logic https github com mongodb mongo blob master etc evergreen yml#l818 l840 port python ported python consider calling python instead shell lines necessary cases hang_analyzer py called shell part failures assert soon friends server 43254 etc;2019-10-15T14:41:08.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-41170;run genny microbenchmarks cbi etc perf yml compile genny run run workload send evergreen legacy perf json file produced genny metrics post processing expanded metrics yet;2019-04-25T20:46:17.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-42575;compiling running unittests single task part server 33963 unittest tests split 2 tasks one compile unittests one run unittests also put task group max hosts 1 since order run unittests need artifacts generated compiling however task groups hard guarantee later tasks run host earlier task tasks share setup task groups work well saving time sharing setup execution provide inconsistent results sharing artifacts tasks switch compile run tasks back single task unittest task reliable server engineer want compile unittest run unittest single task fail due tasks run different hosts ac compile unittests run unittests run single task;2019-08-01T14:24:47.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-42607;add quoting resmokes invocation local usage line currently situations resmokes local invocation line cannot used verbatim one example https evergreen mongodb com task_log_raw mongodb_mongo_master_enterprise_rhel_62_64_bit_alt_create_indexes_replica_sets_multi_stmt_txn_stepdown_jscore_passthrough_0_enterprise_rhel_62_64_bit_alt_create_indexes_cc1a75e4a6d8de8478e7253da7bd6376052d57a6_19_07_15_15_35_13 0typet#l392 could resmoke quote line would work standard bash im sure hard would figure quotes would need go one simple way would simply add double quotes around every parameter;2019-08-02T12:51:54.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-40550;refactor job py support mock time time tests buildscripts resmokelib testing job py mock time time however faulty time time called logging calls test active cleaner solution would move time time helper function mocked code staticmethod def _get_time return time time code test code buildscripts tests resmokelib testing test_job py code mock_time mocktime increment job_object unitjob suite_options self queue_tests self tests queue queue_element queueelemrepeattime suite_options job_object _get_time mock_time time job_object _run queue self mock_interrupt_flag code;2019-04-09T18:20:12.000+0000;Major - P3;2.0;1;1;5
SERVER;SERVER-34654;write test transaction writes collection created concurrently want verify transactions interact collection creation operations correctly verify test following case# transaction writes collection c doesnt exist different session collection c created verify transaction write collection c commit # transactions writes collection c exists client different session tries create c fail note writing test cases verify behavior differs described make sure matches desired expected behavior;2018-04-24T19:36:40.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-34778;add support specifying atclustertime dbhash command makes possible detect transient data inconsistency failures e g related timestamping differences primary secondary replica set resolved time weve finished waiting operations replicated requires changing dbhash command call getminimumvisiblesnapshot etc autogetcollectionforread currently https github com mongodb mongo blob r3 7 7 src mongo db db_raii cpp#l135 l167;2018-05-01T20:55:23.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-39509;uuidcatalog maintain ordered map dbname uuid pairs replaces current _orderedcollections map scales poorly also improve iterating database uuid order;2019-02-11T20:47:09.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-34711;enable burn_in_tests understand evergreen task selectors adopting task selector tag approach address server 33647 task failed patch build burn_in_tests looks buildscripts ciconfig evergreen py script doesnt understand task selectors link patch build https evergreen mongodb com version 5ae1639dc9ec44641fd52543 noformat 2018 04 26 195237 263 python buildscripts burn_in_tests py branchmaster buildvariantbuild_variant testlistoutfilejstests new_tests json noexec burn_in_args 2018 04 26 195240 420 traceback recent call last 2018 04 26 195240 420 file buildscripts burn_in_tests py line 403 module 2018 04 26 195240 420 main 2018 04 26 195240 420 file buildscripts burn_in_tests py line 354 main 2018 04 26 195240 420 evergreen_conf evergreen evergreenprojectconfig values evergreen_file 2018 04 26 195240 420 file cdatamci77bf60c033fb9b50b3d52f01979f8e40burn_in_tests_clonedirbuildscriptsciconfigevergreen py line 26 __init__ 2018 04 26 195240 420 variant_dict self _conf buildvariants 2018 04 26 195240 420 file cdatamci77bf60c033fb9b50b3d52f01979f8e40burn_in_tests_clonedirbuildscriptsciconfigevergreen py line 111 __init__ 2018 04 26 195240 420 conf_dict tasks 2018 04 26 195240 420 file cdatamci77bf60c033fb9b50b3d52f01979f8e40burn_in_tests_clonedirbuildscriptsciconfigevergreen py line 188 __init__ 2018 04 26 195240 420 task __init__ self task raw 2018 04 26 195240 420 attributeerror nonetype object attribute raw 2018 04 26 195240 429 cygdrive c data mci 77bf60c033fb9b50b3d52f01979f8e40 burn_in_tests_clonedir 2018 04 26 195240 429 command failed command pid1640 encountered problem exit status 1 2018 04 26 195240 429 task completed failure noformat cc max hirschhorn;2018-04-27T04:32:35.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-39512;make database class thread safe earlier tickets epic possible make database class mostly immutable make methods thread safe required allow adding removing renaming collections without exclusive database locks;2019-02-11T20:49:54.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-34680;jscore_mobile task fails bypass compile triggered jscore_mobile task fail bypass compile triggered mongoe binary generated compile example seehttps evergreen mongodb com task mongodb_mongo_master_enterprise_rhel_62_64_bit_required_mobile_jscore_mobile_patch_00f32ac53c595f098ea200ab7b9d7278be4a5193_5ae0cc70c9ec44641fc7335c_18_04_25_18_44_14;2018-04-25T19:43:01.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-34706;write unit test verify transactions oplog entries created correctly verify transactions oplog entries created proper format likely tested op_observer_impl_test cpp also able remove logic js tests explicitly check oplog entry formats unit test added;2018-04-26T19:21:13.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-35036;remove database collection cleanup config teardown functions mentioned comment https jira mongodb org browse server 34548focusedcommentid1868113pagecom atlassian jira plugin system issuetabpanelscomment tabpanel#comment 1868113 server 34548 fsm workloads drop unique database collection config teardown function undermines data consistency checks contents deleted resmoke py hooks run leave cleanupconcurrencyworkloads hook server 30204 drop databases collections data consistency checks run;2018-05-17T03:11:04.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-34826;write targeted fsm workload read repeatability transactions write fsm workload verifies _read repeatability_ transactions workload presumably thread either a_read_ or_update_state _read_ state executes multiples reads sequentially expecting see result set read _update_ state could update random subset documents collection test would good verifying repeatability higher concurrency load targeted tests eventually may also add repeatability test runs existing fsm workloads lieu could valuable targeted workload exercise key property transactions snapshot isolation;2018-05-03T19:59:15.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-33786;platform support remove ubuntu 14 04 builds ubuntu 18 04 shortly would allow us support two lts ubuntu releases 18 04 16 04;2018-03-09T19:21:32.000+0000;Major - P3;4.0;1;2;6
SERVER;SERVER-40032;move post scons compile tasks block tests separate phase scons phase compile task completes spend something like 6 minutes post build packaging uploading tasks many tasks actual prerequisites starting run box tests moving post compile phase would allow tasks run concurrently initiating box testing parts elided still need least binaries archive tgz artifacts get created however seems likely following long running tasks could parallelized generating rpm deb packages uploading debug symbols archive s3 creating tarfiles like shell archive making changes would allow box testing start minutes faster well make timing compile task reflective actual time spent compiling;2019-03-07T23:15:51.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-33817;powercycle test using kill mongod create new powercycle task crashoption kill monogd instead crashing remote host;2018-03-12T15:24:58.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-39957;two phase drop rename delay second phase drop optime checkpointed majority committed currently old two phase drop rename executes second phase drop wt table file majority commit point moves past drop optime majority commit point ahead checkpoint crash happens second phase drop restart server find metadata collection still catalog loads last checkpoint actual wt file gets dropped restart server detect unclean shutdown examining mongod lock file safely remove metadata collections wt table files however instead crashing second phase drop opening backup cursor would cause similar issue harder solve also inconsistency wt table files catalog since dont copy mongod lock backup server trigger code reconciles catalog tries open wt file exist hit fassert https github com mongodb mongo blob 6f3c3df4fc0abda76fd97e970ced4a01f0c48007 src mongo db storage wiredtiger wiredtiger_record_store cpp#l666 fix problem delay second phase drop optime checkpointed;2019-03-05T00:41:47.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-34075;powercycle_replication must run replication recovery observe canary documents server 29213 break powercycle_replication tests ability query canary document crash patch temporarily disabling specifically server 29213 bringing node standalone may result stale data relative node accepted node lost data simply replication recovery needs done data queryable powercycle tests bring node back check canary document standalone mode node brought different port used running replica set member suspect server 34070 make easier make required changes enable powercycle_replication tests whats problematic running replication recovery requires starting node replset option however node running replset different port replset config come primary secondary thus service reads;2018-03-22T20:31:00.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-34198;update content type gzip files content type gzip files make available download application x gzip causes problems browsers dont understand content type according rfc6648 https tools ietf org html rfc6648 x types deprecated rfc6713 https tools ietf org html rfc6713 says right type gzip files application gzip work ticket two parts update evergreen yml use right content type new files update existing files right content type;2018-03-29T18:35:57.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-33936;3 6 nightly builds available download https www mongodb com download center#development theres menu item 3 6 nightly download link doesnt work also binaries page https www mongodb org dl osx_ga2 203632720 1133726881 1521122429 282575863 1477067354_gac1 144900480 1520974309 eaiaiqobchmi_47t6zbq2qivrx6gch2t0qmgeaayasaaegjkjpd_bwe links 3 2 latest 3 4 latest builds 3 6 latest;2018-03-15T14:11:35.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-40470;use roundup_timestamp api instead round_to_oldest wt 4640 deprecating round_to_oldest api favour roundup_timestamp readtrue server needs use new api round_to_oldest removed wiredtiger ticket address change;2019-04-04T06:49:02.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-40433;mongodump extremely slow 4 0 8 since upgrading mongo 4 0 8 3 4 6 mongodumps become extremely slow mongodump archive dir gz h mongo_repl_set_name mongo_set u mongo_user p mongo_pwd gzip readpreference secondarypreferred ssl sslcafile mongodb ca crt authenticationdatabase admin db_or_oplog forcetablescanis command run backups since upgrade seeing 10x slower backups tried moving new machine memory didnt see speed improvement cpu 1 core 100 rest cores little activity iostat doesnt show disk anywhere near saturated tried running mongodump 3 6 4 0 cli without improvement;2019-04-02T00:54:36.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-33641;call checkoplogs checkreplicateddatahashes fails following improve relevance diagnostics face data inconsistency issues# update replsettest#stopset call replsettest#checkoplogs addition replsettest#checkreplicateddatahashes https github com mongodb mongo blob r3 7 7 src mongo shell replsettest js#l2174 l2189 care taken ensure tests run significantly longer need verify large oplog shutting replica set # update periodickillsecondaries hook run checkreploplogs hook addition checkrepldbhash validatecollections hooks https github com mongodb mongo blob r3 7 7 buildscripts resmokelib testing hooks periodic_kill_secondaries py#l137 l147 h6 original descriptionwe save data files would great test could check oplogs automatically note differences;2018-03-02T22:02:38.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-33347;update evergreen yaml files use shared scons cache performance projects system_perf yml longevity yml perf yml;2018-02-14T21:26:26.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-40339;resmoke doesnt always show output failing python unittests see https evergreen mongodb com task_log_raw mongodb_mongo_master_enterprise_rhel_62_64_bit_buildscripts_test_patch_e35e8076dbddc863205cf24517e1b16dc9104d07_5c9a4bcad1fe075bd51ca0ad_19_03_26_15_57_00 0typetthe test_burn_in_tests py failed 2 output shown;2019-03-26T16:44:58.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-40241;resmoke py log invocation local usage changes server 28785 made resmoke py writes command line arguments stdout enables server engineers avoid mental bash evaluation determine command line arguments run tests synthesize pass resmoke py command line arguments aggregation task https evergreen mongodb com task mongodb_mongo_master_enterprise_rhel_62_64_bit_aggregation_6f083bd87264e9d9c3d637fae62103c36a65316a_19_03_11_19_56_34 include large number details metadata specific run tests evergreen noformat 2019 03 11 204106 323 resmoke 2019 03 11t204106 322+0000 resmoke py invocation buildscripts evergreen_run_tests py suitesaggregation storageenginewiredtiger jobs4 shuffle continueonfailure storageenginecachesizegb1 tagfileetc test_retrial yml logbuildlogger staggerjobson buildidmongodb_mongo_master_enterprise_rhel_62_64_bit_6f083bd87264e9d9c3d637fae62103c36a65316a_19_03_11_19_56_34 distroidrhel62 small executionnumber0 projectnamemongodb mongo master gitrevision6f083bd87264e9d9c3d637fae62103c36a65316a revisionorderid24937 taskidmongodb_mongo_master_enterprise_rhel_62_64_bit_aggregation_6f083bd87264e9d9c3d637fae62103c36a65316a_19_03_11_19_56_34 tasknameaggregation variantnameenterprise rhel 62 64 bit versionidmongodb_mongo_master_6f083bd87264e9d9c3d637fae62103c36a65316a archivefilearchive json reportfilereport json perfreportfileperf json noformat compact form engineer run would look like noformat buildscripts resmoke py suitesaggregation storageenginewiredtiger jobs4 shuffle continueonfailure storageenginecachesizegb1 noformat changes ticket add new log message line https github com mongodb mongo blob r4 1 9 buildscripts resmoke py#l147 containing simplified resmoke py invocation codepython self _resmoke_logger info verbatim resmoke py invocation join sys argv config evergreen_task_id args self _resmoke_logger info resmoke py invocation local usage join args code must therefore following always log program name buildscripts resmoke py even though evergreen run wrapper script buildscripts evergreen_run_tests py always log non generated version test suite name buildscripts evergreen_generate_resmoke_tasks py script generates new resmoke py yaml suite files order able dynamically split test suite multiple evergreen task may run concurrently handling behavior achieved propagating self config_options suite new originsuite command line option resmoke py _generate_resmoke_args function https github com mongodb mongo blob r4 1 9 buildscripts evergreen_generate_resmoke_tasks py#l289 l294 sub suite definitions uploaded evergreen _gen task generated task config dont really want engineers worry using always remove command line options seen compact form implementation explicitly list command line options remove new ones still appear default might possible little clever trying remove options evergreen_options group https github com mongodb mongo blob r4 1 9 buildscripts resmokelib parser py#l255 new ones added section never appear;2019-03-20T17:44:38.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-40418;refactor test_adb_monitor use files testing mock file creation subprocess invocations testing adb_monitor;2019-04-01T16:53:29.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-34645;write test repeatable reads transactions want write targeted javascript test basic checks transactions guarantee _read repeatability_ tested starting one session starts read transaction reads set documents multiple times another session executes various crud operations collection verify first transaction repeatedly reads result set inside transaction;2018-04-24T17:52:22.000+0000;Major - P3;4.0;1;2;6
SERVER;SERVER-34646;write test killing cursors opened transaction want write test makes sure transactions behave correctly cursors opened get killed test starting transaction opens cursor reads externally killed verify transaction able continue commit even cursor killed;2018-04-24T18:01:18.000+0000;Major - P3;4.0;1;2;6
SERVER;SERVER-34647;write test transaction opens multiple cursors want write test exercises transaction opens multiple cursors reads data make sure results returned multiple cursors inside transaction return data snapshot also test multiple cursors collection multiple cursors span different collections additionally verify killing multiple cursors open inside transaction behaves correctly;2018-04-24T18:36:00.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-34648;write test types transaction write conflicts want verify possible types write conflicts correctly abort transactions generally tested running two transactions different sessions exercising cases listed may additional interesting cases worth testing single document conflicts# two transactions update document# two transactions try delete document# two transactions try insert identical documents# one transaction tries delete document transactions tries update document dpredicate based conflicts# two transactions execute predicate based update document sets updated transaction intersect# two transactions execute predicate based delete document sets delete transaction intersect# one transaction executes predicate based delete another transaction executes predicate based update document sets targeted transaction intersect;2018-04-24T18:46:11.000+0000;Major - P3;4.0;1;2;6
SERVER;SERVER-34650;write test transaction write conflicts non transactional writes want test behavior write conflicts multi statement transactions writes outside multi statement transactions test following cases# start transaction outside transaction update document try write document within transaction verify write conflict occurs # start transaction write document try non transactional update verify non transactional write blocks transaction committed maxtimems expires;2018-04-24T18:53:32.000+0000;Major - P3;4.0;1;2;6
SERVER;SERVER-34652;write tests transactions write collection concurrently dropped want test interaction transactions collection drops test following cases# transaction writes collection one session separate session drop attempted collection collection drop block either transaction commits maxtimems expires also test dropdatabase # create collections b start transaction reading collection separate session drop collection b try write collection b transaction verify write fails since collection dropped;2018-04-24T19:17:59.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-39929;drivers nightly latest fails compile windows code 2019 02 28 074421 460 python buildscripts scons py ssl mongo_distmodwindows 64 release cpppathc openssl include c sasl include c snmp include c curl include libpathc openssl lib c sasl lib c snmp lib c curl lib j grep c processor proc cpuinfo 4 dynamic windows win version minws08r2 variant_dirwin32 cachenolinked cache dirzdatascons cache36b32a55 bc89 55f9 a1e2 24b4148e7f52 core unittests mongo_version4 1 8 227 g6403ca518b 2019 02 28 074423 740 scons reading sconscript files 2019 02 28 074423 740 mkdir buildscons 2019 02 28 074423 740 scons version 3 0 4 2019 02 28 074429 800 python version 2 7 15 final 0 2019 02 28 074429 800 checking whether c compiler works yes 2019 02 28 074431 591 checking whether c++ compiler works yes 2019 02 28 074444 505 checking c++ compiler link c++ program yes 2019 02 28 074444 566 checking c++ compiler cc msvc yes 2019 02 28 074444 657 checking c compiler cl msvc yes 2019 02 28 074444 657 detected x86_64 processor 2019 02 28 074444 735 checking target os windows supported toolchain yes 2019 02 28 074444 738 adding module enterprise 2019 02 28 074444 834 checking c compiler microsoft visual studio 2017 15 9 newer 2019 02 28 074445 109 checking c++ compiler microsoft visual studio 2017 15 9 newer 2019 02 28 074445 109 error refusing build compiler meet requirements 2019 02 28 074445 109 see cdatamcidbe494bf13f1f7c042e6932354168ddesrcbuildsconsconfig log details code see https evergreen mongodb com version drivers_nightly_6403ca518b832a49d66352620a23606348595fac;2019-03-01T21:08:02.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-34332;enable tests buildscripts_test suite number tests disabled https github com mongodb mongo blob 8d4c7404718bd32de68f3cce500cc160f9f7ecef buildscripts resmokeconfig suites buildscripts_test yml python buildscripts test suite apart buildscripts tests test_remote_operations py requires ssh enabled locally tests able run new deployment toolchain modifying file paths used tests use os path join instead hardcoding posix strings;2018-04-05T13:56:52.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-39883;powercycle doesnt actually wait mongod process exit shutdown_mongod shutdown_mongod action runs shutdown 1 force true command linux waits psutil say processes name mongod exist wait_for_mongod_shutdown function sleeps arbitrary extra 5 seconds https github com mongodb mongo blob 8b4f0a7893a329b0c0370385180d6a13077a8f22 pytests powertest py#l1481 l1483 order wait pending finish possible 5 seconds long enough file disappear running rsync mongod process fail start;2019-02-28T07:05:04.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-34548;make fsm workloads able run via burn_in_tests py repeat2 individual fsm workloads designed clean rather expect runners take care problematic create modify workload picked burn_in_tests runs workload several times without evident cleanup runs result test conflict e g trying create database already exists second run;2018-04-18T18:35:14.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-39580;4 0 skip repairing fcv document major version low repair 4 0 3+ runs older versions mongodb first repair databases check restore fcv document checking collections uuids https github com mongodb mongo blob 7f82db91f5a77568c72669554abe22b79b5dc312 src mongo db repair_database_and_check_version cpp repair exits without completing cleanly downgrading wiredtiger log files noformat important upgrade problem data files need fully upgraded version 3 6 attempting upgrade 4 0 see http dochub mongodb org core 4 0 upgrade fcv details downgrading wiredtiger datafiles noformat causes problems first appears like error despite repaired databases remove _repair_incomplete file causes mongodb 4 0 fassert following startup noformat incomplete repair detected likely repair operation unexpectedly failed completing mongodb start without repair fatal assertion 50922 src mongo db storage storage_engine_init cpp 86 noformat result fassert wiredtiger log file version downgraded something clean shutdown following effects log file versions unintentionally upgraded preventing original binary ever starting fcv old enough 1 major release new binary also fails startthe options recovering become delete journal files lead data inconsistencies retry repair backup without introducing unclean shutdown;2019-02-14T07:08:07.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-34593;resmoke py able run multiple instances single test parallel try run single javascript test resmoke py using combination repeatn flag jm flag still run test sequentially e g noformat python buildscripts resmoke py repeat100 j10 sometest js noformat ideally could parallelize repeated execution single test example repeat100 j10 would run 10 instances test parallel would execute 10 times could helpful quickly trying reproduce particular test failure locally;2018-04-20T16:05:16.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-34488;hang_analyzer py fails ptrace protection disabled noformat 2018 04 11 235755 068 return code 0 command buildscripts remote_operations py verbose userhost ubuntu 10 122 4 143 sshconnectionoptions data mci 70130a2c6fcea1306c5dce5ebe2ec512 powercycle pem gssapiauthenticationno checkhostipno stricthostkeycheckingno userknownhostsfile dev null connecttimeout20 connectionattempts20 retries 10 commands path opt mongodbtoolchain gdb binpath opt mongodbtoolchain v2 bin python2 buildscripts hang_analyzer py c file stdout p dbtest java mongo mongod mongos python _test g bsondump mongodump mongoexport mongofiles mongoimport mongoreplay mongorestore mongostat mongotop commanddir log powercycle 2018 04 11 235755 068 found 1 interesting processes 2858 mongod 2018 04 11 235755 068 debugger opt mongodbtoolchain gdb bin gdb analyzing mongod process pid 2858 2018 04 11 235755 068 dumping core dump_mongod 2858 core 2018 04 11 235755 068 opt mongodbtoolchain gdb bin gdb quiet nx ex set interactive mode ex set print thread events ex file mongod ex attach 2858 ex info sharedlibrary ex info threads ex set python print stack full ex echo nwriting raw stacks debugger_mongod_2858_raw_stacks log n ex set logging redirect ex set logging file debugger_mongod_2858_raw_stacks log ex set logging ex thread apply bt ex set logging ex source log powercycle buildscripts gdb mongo py ex source log powercycle buildscripts gdb mongo_printers py ex source log powercycle buildscripts gdb mongo_lock py ex mongodb uniqstack mongodb bt active ex set scheduler locking ex gcore dump_mongod 2858 core ex mongodb dump locks ex mongodb show locks ex mongodb waitsfor graph debugger_waitsfor_mongod_2858 gv ex mongodb javascript stack ex set confirm ex quit 2018 04 11 235755 068 reading symbols mongod reading symbols log powercycle mongod debug done 2018 04 11 235755 068 done 2018 04 11 235755 068 attaching program log powercycle mongod process 2858 2018 04 11 235755 068 ptrace operation permitted noformat;2018-04-15T20:53:16.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-39899;enable initial sync fuzzer evergreen create new initial_sync_fuzzer yml resmoke py yaml suite file causes mongod processes use effectively infinite number initial sync attempts codeyaml titlebuildscripts resmokeconfig suites initial_sync_fuzzer yml test_kind js_testselector roots jstestfuzz jsexecutor archive tests true config shell_options nodb readmode commands global_vars testdata # todo logcomponentverbosity setparameters numinitialsyncattempts 10000000 code define new initial_sync_fuzzer_gen evergreen task based existing rollback_fuzzer_gen evergreen task https github com mongodb mongo blob e33301994172d80c0f4e62bd3b01fa41f35561ec etc evergreen yml#l4922 l4933 codeyaml ## initial sync fuzzer ## jstestfuzz_template name initial_sync_fuzzer_gen commands func generate fuzzer tasks vars jstestfuzz_config_vars # todo number files based tests take run # target time generated task 10 minutes num_files num_tasks 5 npm_command initsync fuzzer resmoke_args suitesinitial_sync_fuzzer name initial_sync_fuzzer code configure new initial_sync_fuzzer_gen evergreen task run build variants existing rollback_fuzzer_gen evergreen task runs exception enterprise rhel 6 2 inmemory linux ephemeralfortest build variants since initial version initial sync fuzzer meant targeting interaction initial sync prepared transactions run wiredtiger storage engine enterprise rhel 6 2 enterprise rhel 6 2 majority read concern windows 2008r2 debug macos enterprise rhel 6 2 debug code coverage asan enterprise ssl ubuntu 16 04 debug ubsan enterprise ubuntu 16 04 debug;2019-03-01T06:21:52.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-36997;stepdown thread perform wall write stepping restarting node stepdown thread steps node nodes set may go rollback rollback happen unpredictable times since based node gets new batch triggers oplogstartmissing error rollback occurs node closes connections stepdown thread robust connections closing arbitrary points stepdown thread wait rollbacks complete performing wall write stepping node;2018-09-05T15:54:51.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-39225;update kill_rooted_or js indexbuildscoordinator gracefully handle index build already progress errors coordinator registers index spec name comes indexes set index catalog progress subsequent requests index names hit error coordinator without coordinator spec requests normally automatically filtered theyre already found built building via index catalog concurrency test 10 threads potentially running createindexes requests time theres already index name errors make sense previously theyd get filtered redundant commands return ok perhaps new error code indexbuildalreadyinprogressforname fix tests consider final behavior changes later easily identify changes error code want undo related problem regarding spec checking scattered place different levels code;2019-01-28T16:26:17.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-36856;continuous stepdown thread may execute stepdown paused stepdown thread execute stepdown resumed event cleared hook thread ran wait # stepdown thread checks wait checks _is_resumed_evt set continues # hook calls pause ## pause _is_resumed_evt cleared ## pause hook waits _is_idle_evt already set continues # stepdown thread runs _step_down_all;2018-08-24T18:01:29.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-39106;globallock acquisition throw ticket acquisition times max lock timeout deadline global lock acquisition times acquiring ticket constructor throw resource unlocked leads invariant failure attempt acquire global lock https github com mongodb mongo blob 89c3502129303b41b8d35bf5d64eb0a242f061da src mongo db transaction_participant cpp#l788 call canacceptwritesfordatabase https github com mongodb mongo blob 89c3502129303b41b8d35bf5d64eb0a242f061da src mongo db transaction_participant cpp#l800 invariants lock held https github com mongodb mongo blob 89c3502129303b41b8d35bf5d64eb0a242f061da src mongo db repl replication_coordinator_impl cpp#l1947 caller provide deadline checking lock acquisition failure lock acquisition throw consider applying following patch noformat diff git src mongo db concurrency lock_state cpp b src mongo db concurrency lock_state cppindex 11a4028 e7040b8 100644 src mongo db concurrency lock_state cpp+++ b src mongo db concurrency lock_state cpp 353 6 +353 12 lockresult lockerimpl_lockglobalbegin operationcontext opctx lockmode mode dassert islocked _modeforticket mode_none _modeforticket mode_none auto acquireticketresult _acquireticket opctx mode deadline + uassert errorcodeslocktimeout + strstream unable acquire ticket mode mode+ within max lock request timeout + _maxlocktimeout get + milliseconds + acquireticketresult lock_ok _maxlocktimeout acquireticketresult lock_ok return acquireticketresult noformat;2019-01-18T23:08:01.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-37465;remove rosette linguistics platform options debian files per discussion https jira mongodb org browse pm 1178pagecom atlassian jira plugin system issuetabpanels3acomment tabpanelfocusedcommentid2012178#comment 2012178 references rosette linguistics platform remain debian files need removed;2018-10-03T20:50:54.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-37359;update test lifecycle script use new evergreen test stats endpoint lifecycle_test_failures py https github com mongodb mongo blob 82b62cf1e513657a0c35d757cf37eab0231ebc9b buildscripts lifecycle_test_failures py script updated use new evergreen api endpoint test execution statistics becomes available;2018-09-27T19:36:07.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-37101;add optimization mode aggregation pipeline fuzzer evergreen add run aggregation pipeline fuzzer optimization mode evergreen previously attempted change seen https evergreen mongodb com version 5b9923622fbabe77fd9660b1;2018-09-12T18:25:45.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-37301;add ubuntu 18 04 zseries build variant add community enterprise builds ubuntu 18 04 zseries;2018-09-24T19:05:02.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-39308;update burn_in_tests py generate sub tasks json file modify burn_in_tests py support following new option generatetasksfile default false generate json tasks file used generate tasks;2019-01-31T15:24:45.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-36129;concurrency stepdown suites wait replication workload setups starting stepdown thread concurrency stepdown suites wait setup called workload starting stepdown thread https github com mongodb mongo blob a291ec89affd9e849ac62ad55a736bfb940a0bb6 jstests concurrency fsm_libs resmoke_runner js#l101 l111 setup methods dont run overriden majority read write concern effects setup guaranteed majority committed point though immediate stepdown still roll back setup like creation ttl index indexed_insert_ttl js https github com mongodb mongo blob a291ec89affd9e849ac62ad55a736bfb940a0bb6 jstests concurrency fsm_workloads indexed_insert_ttl js#l30 l31 fix would waiting replication shards config server starting stepdown thread;2018-07-13T20:23:35.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-36622;package tests fail newer ubuntu package tests expect failure ubuntu 18 04 install_compass script since previously hard coded work 14 04 16 04 changed work 14 04 package tests expect success newer ubuntus like 18 04;2018-08-13T21:06:32.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-36698;add suite agg expr fuzzer optimized vs unoptimized acceptance criteria optimized agg expression fuzzer running green evergreen;2018-08-16T16:41:56.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-37555;abort collmod need refreshentry index rollback collmod operation aborts writeunitofwork need call refreshentry rollback index catalog change via collmod already invoke refreshentry refreshentry restore state rollback itregisters indexremovechange;2018-10-10T20:51:52.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-37663;add support running genny via resmoke py locally aid local development experience writing new performance workloads add new test kind running genny tests resmoke py latency metrics collected wont particularly interesting processes running machine well able ensure mechanics new performance workloads sound submitting evergreen running distributed cluster resmoke py yaml suite file configurations stand alone mongod mongodfixture 1 node replica set replicasetfixture num_nodes1 3 node replica set replicasetfixture num_nodes3 all_nodes_electabletrue sharded cluster shardedclusterfixture configsvr_options num_nodes3 num_mongos3 num_shards3 num_rs_nodes_per_shard3 order match configurations genny_workloads evergreen task runs part dsi evergreen project note isnt need wire gennys output format resmoke pys perfreportfile mode intended local development running evergreen;2018-10-19T13:42:19.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-38531;increase parallelism test lifecycle update script perform rollups server side update_test_lifecycle py script parallelizes requests across tasks given batch tests able parallelize requests improve overall run time additionally take advantage group_num_days parameters evergreen api fetch stats results already aggregated reliable unreliable periods;2018-12-11T16:41:37.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-37778;platform support add community enterprise ubuntu 18 04 zseries platform support add community enterprise ubuntu 18 04 zseries;2018-10-26T16:38:22.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-38115;consolidate setting resmoke py job python script create buildscripts evergreen_resmoke_job_count py determine number jobs pass resmoke py similar existing buildscripts evergreen_task_timeout py script run tests function evergreen yml updated use new script;2018-11-13T16:59:02.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-38116;update fuzzer tasks use generate tasks update fuzzer tasks etc evergreen yml use generate tasks split dynamically number tasks generated number files generated task configurable;2018-11-13T17:00:28.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-39061;fix wt_operation_stats test wait operation log appear wt_operation_stats test looks storage statistics slow operation log message case linked bf expected log message appeared check done test might required rescan logs first log scan find desired log message;2019-01-17T05:29:00.000+0000;Minor - P4;3.0;0;2;9
SERVER;SERVER-37768;platform support add community enterprise debian 10 x64 platform support add community enterprise debian 10 x64;2018-10-26T16:36:32.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-37769;platform support add community enterprise sles 15 x64 platform support add community enterprise sles 15 x64;2018-10-26T16:36:39.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-38931;apply relevant changes snapshot_read_kill_operations js 4 0 branch server 37009 fixed error snapshot_read_kill_operations js https github com mongodb mongo blob 0ffb6bc78dc1219692b294215c97d48a7e9f1fdd jstests concurrency fsm_workloads snapshot_read_kill_operations js test caused killsessions portion test silently fail kill session corresponding session document exist fix uncovered issues test fixed master backported 4 0 relevant fixes test including fix server 37009 applied 4 0 version test one possible way would replace 4 0 version test corresponding version master mindful changes made test specific master;2019-01-10T18:13:13.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-39064;storage interface changes specifying durable_timestamp storage interface must allow specifying durable_timestamp committing prepared transaction;2019-01-17T13:54:24.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-37771;platform support add enterprise ubuntu 18 04 ppcle platform support add enterprise ubuntu 18 04 ppcle;2018-10-26T16:36:56.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-37772;platform support add community enterprise rhel 8 x64 platform support add community enterprise rhel 8 x64;2018-10-26T16:37:05.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-37776;platform support add community enterprise sles15 zseries s390x platform support add community enterprise sles15 zseries;2018-10-26T16:38:09.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-38927;cache collection temp status collection object cache things like validators capped status collection object need go way storage open storage transaction every time want check value far know temp cannot change collmod renamecollection rollback needed server 38139 ban temporary collections transactions without consult storage engine extra time every transaction statement;2019-01-10T15:53:05.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-38818;better handle dependencies generated tasks generated tasks dependencies tasks gets complicated dependencies exist generator tasks generating task query evergreen api determine dependent tasks generated add dependencies tasks created;2019-01-03T14:29:08.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-38817;use generate tasks resmoke tasks migrate resmoke tasks using generate tasks use generate tasks;2019-01-03T14:26:42.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-35250;save dbtest debug symbols debug_symbols tar would like able symbolize stack traces generated dbtest bfs;2018-05-25T20:39:44.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-35262;add concurrency_simultaneous_replication yml test suite would increase variety concurrent operations exercise replica set existing concurrency_simultaneous yml test suite limited cannot run fsm workloads use transactions concurrency_simultaneous_replication evergreen task added build variants currently run concurrency_simultaneous evergreen task;2018-05-27T19:18:46.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-39505;make viewcatalog decoration viewcatalog also durableviewcatalogimpl;2019-02-11T20:39:29.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-35071;split mmapv1 tasks separate variants sys perf split mmapv1 tasks separate variant remove _wt _mmapv1 task names use anchors collapse task lists schedule mmap variants run every 7 days build ticket copy history correctly backports;2018-05-18T15:19:38.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-35097;run checkreploplogs sharded passthroughs currently isnt supported sharded clusters dbhash failures without oplog checks often miss underlying cause;2018-05-18T21:19:38.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-35109;enable signal processing perf yml run command signal processing analyze phase task;2018-05-21T13:26:48.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-39362;make parallel basic js test respect resmoke py tag based exclusions jstests parallel basic js tests couple shortcomings due javascript test runs javascript tests# resmoke py doesnt know individual tests run therefore cannot apply tag based exclusion using exclude_any_with_tags # resmoke py doesnt spawn separate mongo shell processes individual tests run therefore cannot create separate log endpoints output b report separate pass fail statuses ticket intended address #1 addressing #2a difficult due existing logkeeper schema makes assumption test ended soon another test thats part build_id started addressing #2b difficult creating new test_id tied resmoke py starting test https github com mongodb mongo blob r4 1 7 buildscripts resmokelib testing report py#l92 l117 new parallel_js_test test kind introduced makes use resmoke pys buildscripts resmokelib selector py module within paralleljstestcase class filter tests jstests core directory shouldnt run jstests parallel basic js tests paralleljstestcase _make_process spawn mongo shell process new testdata testschedule array option similar name element corresponds list tests scopedthread spawned jstests parallel basic js tests run codejavascript testdata testschedule list sourced exclusively executor config serial_execution section 0 jstests core killop_drop_collection js jstests core fsync js jstests core currentop js list following ones sourced exclusively tests filted executor config selector section arent present executor config serial_execution section 1 jstests core js 2 jstests core all2 js 3 jstests core all3 js code logic paralleltester createjstestslists function https github com mongodb mongo blob r4 1 7 jstests libs paralleltester js#l143 l323 expressed resmoke py yaml suite file performed paralleljstestcase class particular tests https github com mongodb mongo blob r4 1 7 jstests libs paralleltester js#l212 l222 automatically excluded resmoke py invoked excludewithanytagsrequires_find_command parallel_compatibility evergreen task https github com mongodb mongo blob r4 1 7 etc evergreen yml#l5883 configures order tests testdata testschedule including mentioned executor config serial_execution section shuffled error explicitly mention test executor config selector section doesnt exist happen automatically error explicitly mention test executor config serial_execution section doesnt exist notes number array elements generate testdata testschedule defined constant 4 paralleljstestcase class need configurable via yaml new parallel_jscore_passthrough parallel_jscore_compatibility_passthrough evergreen tasks introduced build variants currently run parallel parallel_compatibility tasks respectively codeyaml titlebuildscripts resmokeconfig suites parallel_jscore_passthrough yml test_kind parallel_js_testselector roots jstests parallel basic js executor archive hooks validatecollections config selector roots jstests core js exclude_files # transactions supported mongodb standalone nodes jstests core txns js serial_execution # following tests run fsync 1 lock 1 command jstests core currentop js jstests core fsync js jstests core killop_drop_collection js shell_options readmode commands hooks class validatecollections fixture class mongodfixture mongod_options set_parameters enabletestcommands 1 code;2019-02-04T03:16:37.000+0000;Major - P3;4.0;1;2;6
SERVER;SERVER-39313;create burn_in_tests metric tracking script script track effectiveness burn_in_tests manually run script called buildscripts metrics burn_in_tests py script invoke task history patch mainline builds user specific period default 4 weeks provide following builds ran burn_in_tests number patch builds number failing tasks number failing burn_in_tests tasks number patch builds burn_in_tests failed number tasks generated number tests executed number times task exceeded expected run time+aws costs+ computing aws costs associated burn_in task sub tasks spawned useful understanding additional cost run burn_in twice costs computed using task history time generated tasks main burn_in task weighted type distro tasks ran contrasting result prior burn_in tasks runs provide metric increased cost aws costs burn_in computed following splunk query indexevergreen stat task end stats task burn_in_tests project mongodb mongo master timechart span1h avg cost;2019-01-31T16:01:02.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-36069;vendor mongoebench compatible json config files mongodb mongo perf src third_party json config files live directory called src third_party mongo perf mongoebench possible rerun vendoring script automatically update pick new modified mongo perf test cases well likely want filter test cases rely capped collections server side javascript;2018-07-11T14:51:15.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-36077;create new resmoke py test suite running mongoebench android device build top work server 36076 run mongoebench statically linked binary android device mongoebench json config file likely copied device run using combination adb push adb shell commands note integrating buildscripts mobile adb_monitor py utility test suite happen part server 36078;2018-07-11T18:41:04.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-39419;stepdown interrupting running dropdatabase command could leave unclean state comment linked bf describes stepdown could interrupt running dropdatabase leave droppending true database;2019-02-07T18:40:13.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-35578;switch package tests new package testing vpc dedicated account vpc package testing use avoid rate limit build failures package test high volume build times like release season;2018-06-13T15:50:29.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-47827;request local burn_in_tests py locally runs tests changed since master including committed local branch attempt run burn_in_tests py locally wrong tests chosen snippet logs showing tests untracked git noformat 2020 03 13 172015 455 __main__ debug 2020 03 13 1720 15 found changed tests files jstests replsets oplog_sampling1 js jstests concurrency fsm_workloads collreindex js jstests nopassthrough duplicate_key_get_last_error js jstests sharding create_collection_prepared_transactions js noformat ideally would like local burn_in_tests py locally run modified tests since master including already committed local branch without needing generate evergreen task configs understanding presently local burn_in_tests py run tests committed local branch even part master;2020-03-13T21:24:15.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-43608;end end tests burn_in_tests bug introduced resmoke caused burn_in_tests start failing add end end tests burn_in_tests catch type errors buildscripts_test server engineer want catch errors burn_in_tests commit trust burn_in_tests running correctly ac least 1 end end tests burn_in_tests exists run part buildscripts_test;2019-09-24T18:28:34.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-47621;parse_options powertest py implicitly deduplicates mongod options powercycle evergreen tests make invocation powertest py following mongod options codejava setparameter enabletestcommands1 setparameter logcomponentverbosity storage recovery2 storageengine wiredtiger code one checks mongod log afterwards appears setparameter options deduplicated setparameter logcomponentverbosity storage recovery2 remains seems bug parse_options powertest py creates defaultdict mongod options implicity deduplicates two setparameter options;2020-04-17T13:49:06.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-47965;remove multiverison blacklisting burn_in_tests py see server 47136 context part adding multiversion testing repl sharding blacklisting code added burn_in_tests specific suites order blacklist tests behaved differently mongo version example bug fix waiting backport however burn_in_tests probably correct place blacklisting logic live putting logic burn_in_tests effectively saying tests unstable tests inconsistencies versions might make sense put logic resmoke burn_in_tests already using get list tests run already blacklisting;2020-05-05T17:52:47.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-48048;use resmoke tag files multiversion blacklisting well use new tag backports_required_multiversion perform blacklisting multiversion suite ymls set option exclude_with_any_tags tag well extract script use etc backports_required_for_multiversion yml generate resmoke tag file https github com mongodb mongo blob master buildscripts ciconfig tags py associates tag appropriate tests specified existing tagfile option tag file need created per patch blacklisting taken care resmoke invocations burn_in_tests multiversion;2020-05-08T16:29:45.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-48091;clean resmoke arguments create inevergreen option instead relying taskid avoid ambiguity around get resmoke behave certain way running evergreen note inevergreen part evergreen argument group want able set even local runs reproducing evergreen failure remove options save values dest variables eg shuffle shufflemode send email kernel 10gen done look existing options list move appropriate options advanced_options improve help clutter see raidens comment cr internal https mongodbcr appspot com 604130007 info;2020-05-11T16:46:23.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-47312;run hang_analyzer py via assert soon without calling gcore asan builders changes e89c041 https github com mongodb mongo commit e89c041616cbaea0648bb60ce32ddab1f33d3e97 part server 45884 disabled running hang analyzer asan build variant e builders using sanitizeaddress via assert soon due gcore respecting madvise settings 20tb shadow memory come previously server 29886 timeout phase etc evergreen yml project configuration resolved running hang_analyzer py without c option order avoid producing core dumps could similarly mongo shell omit c option running hang_analyzer py related note mongo shell offers _isaddresssanitizeractive function returns true compiled sanitizeaddress generally assume server binaries build flags consider removing testdata isasanbuild avoid two ways expressing thing add test check hang_analyzer still runs asan without dumping core;2020-04-02T22:31:29.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-47367;specifying high number fallback_num_sub_suites causes evergreen run test excluded list h2 motivation requesth2 contexth2 descriptionfor example abort_expired_transaction js excluded run multiple times herehttps evergreen mongodb com task mongodb_mongo_master_enterprise_rhel_62_64_bit_flow_control_off_display_logical_session_cache_sharding_100ms_refresh_jscore_txns_passthrough_patch_6923fac12fdf1a1dd1ad313033b8418d69bb29ee_5e7bb6f7d1fe07236b6a99a7_20_03_25_19_55_07##257b2522compare2522253a255b257b2522hash2522253a25226923fac12fdf1a1dd1ad313033b8418d69bb29ee2522257d255d257dlowering number 48 10 appears worked around issue;2020-03-30T18:57:08.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-47409;writeconcern1 gives error standalone server query db collection insertone namexyz w2 gives error standalone server correct butdb collection insert namexyz w2 got mongo enterprise 4 2;2020-04-08T16:05:12.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-47547;benchmarks yml test suites need updated switch hygienic changes a83ee33 https github com mongodb mongo commit a83ee33c56dcfc8cdcfa0dd0c458f6fef89a3113 exclude hash_table_bm microbenchmark evergreen effectively undone file run build install bin hash_table_bm causing benchmarks_orphaned task time evergreen since mid february https evergreen mongodb com task mongodb_mongo_master_enterprise_rhel_62_benchmarks_benchmarks_orphaned_876b3af1091b299884869c34a41f7f37d4dcc0bb_20_02_14_12_24_50 0 also causing chunk_manager_refresh_bm microbenchmark run part benchmarks_orphaned task rather benchmarks_sharding task;2020-04-15T01:04:52.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-47590;download install udb allow udb downloaded installed live record runs need figure way keep download url private;2020-04-16T13:31:41.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-47591;add build variant runs tests live record run smattering light weight tests live record new bv tests start 5 processes excluded;2020-04-16T13:32:53.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-48521;build store grpcio arm64 ppc s390x pre built wheels grpcio arm64 armv8 ppc s390x cant compiled toolchain box would take 15+ min even compile work need either set ci project compile ask upstream get us version works platforms;2020-06-01T18:33:45.000+0000;Major - P3;4.0;1;2;6
SERVER;SERVER-48723;selected_tests_gen generate tasks already pulled patch build see spike details https jira mongodb org browse dag 199as server engineer able pull tasks selected tests patch build selected_tests_gen task error generating tasks name task pulled ac selected_tests_gen task within selected tests patch following changed files sharding_op_query task manually pulled patch succeed https evergreen mongodb com version 5ec6eb797742ae0c9e7520de##1;2020-06-11T15:38:32.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-48951;create resmoke option better manages output reproducing runs locally resmoke dump output either stdout log file people running things locally often want save detailed output log file perusal way know run may hit error condition way know set tests making progressmany people use series mrlog greps tee output redirection achieve e g noformat resmoke run suite sample_suite mrlog tee output_file log egrep invariant fassert backtrace failed load noformat additionally many people craft individual reproduction attempts havent yet realized saving shell alias function script would useful future goal ticket provide useful starting point accomplishing bullet points using current keywords mongodb tests generate;2020-06-18T14:34:44.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-49203;jepsen smoke 15 system failure rate failures manifest like noformat 2020 06 03 202422 459 error 2020 06 03 202422 458 main jepsen cli oh jeez im sorry jepsen broke heres 2020 06 03 202422 459 java util concurrent executionexception java lang runtimeexception mongo setup ip 10 122 57 220000 timed 2020 06 03 202422 459 java util concurrent futuretask report futuretask java122 na1 8 0_252 2020 06 03 202422 459 java util concurrent futuretask get futuretask java192 na1 8 0_252 2020 06 03 202422 459 clojure corederef_future invokestatic core clj2208 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure corefuture_callreify__6962 deref core clj6688 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure corederef invokestatic core clj2228 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure corederef invoke core clj2214 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure coremapfn__4785 invoke core clj2644 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure lang lazyseq sval lazyseq java40 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure lang lazyseq seq lazyseq java49 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure lang rt seq rt java521 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure coreseq__4357 invokestatic core clj137 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure core protocolsseq_reduce invokestatic protocols clj24 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure core protocolsfn__6738 invokestatic protocols clj75 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure core protocolsfn__6738 invoke protocols clj75 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure core protocolsfn__6684g__6679__6697 invoke protocols clj13 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure corereduce invokestatic core clj6545 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure coreinto invokestatic core clj6610 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure coreinto invoke core clj6604 clojure 1 8 0 jarna 2020 06 03 202422 459 jepsen controlon_nodes invokestatic control clj373 jepsen 0 1 8 jarna 2020 06 03 202422 459 jepsen controlon_nodes invoke control clj357 jepsen 0 1 8 jarna 2020 06 03 202422 459 jepsen controlon_nodes invokestatic control clj362 jepsen 0 1 8 jarna 2020 06 03 202422 459 jepsen controlon_nodes invoke control clj357 jepsen 0 1 8 jarna 2020 06 03 202422 459 jepsen corerun_bang_fn__4284fn__4287 invoke core clj584 jepsen 0 1 8 jarna 2020 06 03 202422 459 jepsen corerun_bang_fn__4284 invoke core clj572 jepsen 0 1 8 jarna 2020 06 03 202422 459 jepsen corerun_bang_ invokestatic core clj553 jepsen 0 1 8 jarna 2020 06 03 202422 459 jepsen corerun_bang_ invoke core clj500 jepsen 0 1 8 jarna 2020 06 03 202422 459 jepsen clisingle_test_cmdfn__4984 invoke cli clj329 jepsen 0 1 8 jarna 2020 06 03 202422 459 jepsen clirun_bang_ invokestatic cli clj273 jepsen 0 1 8 jarna 2020 06 03 202422 459 jepsen clirun_bang_ invoke cli clj203 jepsen 0 1 8 jarna 2020 06 03 202422 459 jepsen mongodb runner_main invokestatic runner clj164 classes na 2020 06 03 202422 459 jepsen mongodb runner_main doinvoke runner clj162 classes na 2020 06 03 202422 459 clojure lang restfn invoke restfn java3894 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure lang var invoke var java676 clojure 1 8 0 jarna 2020 06 03 202422 459 usereval5 invokestatic form init3654414589850886228 clj1 nana 2020 06 03 202422 459 usereval5 invoke form init3654414589850886228 clj1 nana 2020 06 03 202422 459 clojure lang compiler eval compiler java6927 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure lang compiler eval compiler java6917 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure lang compiler load compiler java7379 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure lang compiler loadfile compiler java7317 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure mainload_script invokestatic main clj275 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure maininit_opt invokestatic main clj277 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure maininit_opt invoke main clj277 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure maininitialize invokestatic main clj308 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure mainnull_opt invokestatic main clj342 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure mainnull_opt invoke main clj339 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure mainmain invokestatic main clj421 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure mainmain doinvoke main clj384 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure lang restfn invoke restfn java421 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure lang var invoke var java383 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure lang afn applytohelper afn java156 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure lang var applyto var java700 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure main main main java37 clojure 1 8 0 jarna 2020 06 03 202422 459 caused java lang runtimeexception mongo setup ip 10 122 57 220000 timed 2020 06 03 202422 459 jepsen mongodb coredbreify__2125 setup_bang_ core clj330 classes na 2020 06 03 202422 459 jepsen dbcycle_bang_ invokestatic db clj25 jepsen 0 1 8 jarna 2020 06 03 202422 459 jepsen dbcycle_bang_ invoke db clj20 jepsen 0 1 8 jarna 2020 06 03 202422 459 clojure corepartialfn__4759 invoke core clj2516 clojure 1 8 0 jarna 2020 06 03 202422 459 jepsen controlon_nodesfn__2069 invoke control clj372 jepsen 0 1 8 jarna 2020 06 03 202422 459 clojure lang afn applytohelper afn java154 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure lang afn applyto afn java144 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure coreapply invokestatic core clj646 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure corewith_bindings_star_ invokestatic core clj1881 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure corewith_bindings_star_ doinvoke core clj1881 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure lang restfn applyto restfn java142 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure coreapply invokestatic core clj650 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure corebound_fn_star_fn__4671 doinvoke core clj1911 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure lang restfn invoke restfn java408 clojure 1 8 0 jarna 2020 06 03 202422 459 jepsen utilreal_pmaplauncher__1160fn__1161 invoke util clj49 jepsen 0 1 8 jarna 2020 06 03 202422 459 clojure corebinding_conveyor_fnfn__4676 invoke core clj1938 clojure 1 8 0 jarna 2020 06 03 202422 459 clojure lang afn call afn java18 clojure 1 8 0 jarna 2020 06 03 202422 459 java util concurrent futuretask run futuretask java266 na1 8 0_252 2020 06 03 202422 459 java util concurrent threadpoolexecutor runworker threadpoolexecutor java1149 na1 8 0_252 2020 06 03 202422 459 java util concurrent threadpoolexecutorworker run threadpoolexecutor java624 na1 8 0_252 2020 06 03 202422 459 java lang thread run thread java748 na1 8 0_252 noformat repeated execution latest failure https evergreen mongodb com task mongodb_mongo_master_ubuntu1804_debug_aubsan_lite_jepsen_smoke_e53293b8749c692ae2abe50ff02f4aee6fea8b84_20_06_30_10_26_41 green indicating transient error rather something linked server represents bug test infrastructure rather server fixes see are# disable task# add retry logic task# dig deeper jepsen test figure happens roughly 15 time;2020-06-30T20:03:44.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-49333;use host create set remote instance powercycle powercycle task launches remote instance powertest https github com mongodb mongo blob f39585101d93f47c216ea8c30e276ac0410c30a2 pytests powertest py run powercycle events fix issues connecting remote instance windows use host create https github com evergreen ci evergreen wiki project commands#host create launch instance;2020-07-07T16:09:41.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-49972;randomize unit tests execution order currently unit tests always executed follows fixtures alphabetical order within fixture order declaration test filesthis ordering implies given presence global shared state unit tests potentially depend deterministic way would good randomize execution order force programmers write proper setup teardown cleanup reused state quite sure random shuffle fixture names tests ordering within files would currently result tests failing even improbable case everything would work still important address ticket warranty future tests would hit problem example described problem bug solved server 49969 https jira mongodb org browse server 49969 way catch error changing fixture name;2020-07-29T10:05:01.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-49498;enable resmoke py download undodb recordings given task id undodb fetch asset asset begins bf bfg treat like ticket otherwise assume evergreen task;2020-07-14T17:16:19.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-48299;provide detail error stopping mongod test errors example message + stack noformat js_testbackup_restore_stop_start 2020 05 18t213552 494+0000 2020 05 18t213552 398z 22821 js shell stopped mongo program port port attr port20021 js_testbackup_restore_stop_start 2020 05 18t213552 948+0000 uncaught exception stoperror mongodb process stopped exit code 9 js_testbackup_restore_stop_start 2020 05 18t213552 948+0000 stoperror mongodb process stopped exit code 9 js_testbackup_restore_stop_start 2020 05 18t213552 948+0000 mongorunner stoperror src mongo shell servers js92444 js_testbackup_restore_stop_start 2020 05 18t213552 948+0000 mongorunner stopmongod src mongo shell servers js102815 js_testbackup_restore_stop_start 2020 05 18t213552 948+0000 replsettest stop src mongo shell replsettest js298419 js_testbackup_restore_stop_start 2020 05 18t213552 948+0000 _nodeparamtoconn src mongo shell replsettest js22657 js_testbackup_restore_stop_start 2020 05 18t213552 948+0000 _nodeparamtosinglenode src mongo shell replsettest js26045 noformat port often thats needed identify node question things tricky port used across restarts information use identify process lifetimes included available process id dbpath used binary name e g mongo mongos mongobridge mongod mongod 4 4;2020-05-19T18:25:18.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-48111;format python black kill yapf favor black replace yapflinter class blacklinter disable change pylint checks fail result consider relaxing number pydocstyle checks tend result useless comments added appease linter d103 missing docstring public function d107 missing docstring __init__ d100 missing docstring public module d101 missing docstring public class d200 one line docstring fit one line quotes;2020-05-11T21:03:32.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-48145;extract resmoke logging configurations executorrootlogger fixturerootlogger testsrootlogger mostly exist configuration purposes create confusing secondary logger hierarchy removed favor passing configuration information loggers configuration may need partially global inheritance relationships avoid duplicating logic long cleanly separated loggers;2020-05-12T17:26:28.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-43256;fix incorrect uses assert soon make hang analysis call exit number places use assert soon retry mechanism e g ssl_test js least one test index_delete js runs assert soon try finally block capture better error messages looks like code try assert soon function return checkprogram serverpid alive 0 _runmongoprogram apply null clientargv connect failed connecttimeoutmillis catch ex return false finally _stopmongoprogram port code cases assert soon fails due timeout want instead run hang analysis exit rather returning control caller comment robert think assert soon almost always fails due timeout whats reason exiting case uses assert soon pervasive jstests best effort fix could modify assert soon patch build throw immediately test doesnt fail likely using incorrectly say 3 4 cases using assert soon retry mechanism create helper assert retry method name location tbd similar signature assert soon doesnt call hang analyzer barf callback never truthy instead returns success error array success last result callback error errors thrown callback exact signature tbd depending used callers extant assert soon finally done modify existing callers hang analyzer probably assert soon call exit running hang analysis;2019-09-10T19:53:27.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-46682;reuse debugger process processes type hang_analyzer py reloading symbols every process another bottleneck alleviate hang_analyzer py modified reuse debugger process analyze processes type ex mongod processes analyzed debugger process processes grouped process type ex mongod processes single process created codejava run debugger load symbols process processes attach process dump info code debugger scripts hardcoded strings script gdb https github com mongodb mongo blob c553f6acd0ce7768d25a2dcdfa9358aa22b5ee55 buildscripts hang_analyzer py#l363 l385 especially ugly gdb api python https sourceware org gdb onlinedocs gdb python api html change turns non trivial hardcode plaintext consider rewriting use python api part ticket ensure performance improves;2020-03-06T19:24:02.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-46691;rework timeout task evergreen yml ensure analysis archival works server 46687 completed timeout task evergreen yml needs modified running powercycle jepsen run hang analyzer call resmoke hang analyzer args directly means keep section https github com mongodb mongo blob c553f6acd0ce7768d25a2dcdfa9358aa22b5ee55 etc evergreen yml#l3526 l3577 resmoke execute powercycle mechanism outlined project work otherwisecall new script send sigusr1 windows event resmoke processes explictly code exists hang_analyzer py needs moved file still lives mongo buildscripts wait resmoke processes exit since already know pids easy;2020-03-06T20:39:47.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-46941;add suite mode burn_in_tags add mode burn_in_tag detect changes test suites run entire suite specified build variants server engineer want changed test suites detected run burn_in_tags feel confident changes work non required build variants ac changes test suites cause entire suite run specified build variants burn_in_tags new test suites run specified build variants burn_in_tags see project scope https docs google com document 1 syoxkhm9sryhpxfcnuxedrcbfkmvb82vmdeqryuppg edit#headingh sye21yee6q34;2020-03-18T14:18:20.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-46827;e2e tests working actual features add e2e tests outlined test plan ensure failcreate resmoke unit tests test scenarios run single test using resmoke fixture simulating test timeout run multiple tests using resmoke fixture simulating task timeout run test using mongorunner spin mongods simulating non fixture test test script sends signal resmoke called script waits processes exited inspect analysis archival done cases test everything except evergreen calling timeout task beginning add project features ensure pass tests;2020-03-12T16:31:26.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-43991;encountered illegal file format internal value 0x0 server crash restart actual time 45 days mongo process restart timegot crash noformat 2019 10 14t125013 572+0200 network conn47816 received client metadata 127 0 0 152150 conn47816 driver name mongo java driver version 3 9 1 os type linux name linux architecture amd64 version 4 4 0 148 generic platform java oracle corporation 1 8 0_201 b09 2019 10 14t125246 143+0200 e storage conn47814 wiredtiger error 22 1571050366142348 250570x7f6756b9f700 fileindex 8 5793834522867476723 wt wt_cursor search __cell_data_ref 626 encountered illegal file format internal value 0x0 invalid argument raw 1571050366142348 250570x7f6756b9f700 fileindex 8 5793834522867476723 wt wt_cursor search __cell_data_ref 626 encountered illegal file format internal value 0x0 invalid argument2019 10 14t125246 143+0200 e storage conn47814 wiredtiger error 31804 1571050366143726 250570x7f6756b9f700 fileindex 8 5793834522867476723 wt wt_cursor search __wt_panic 520 process must exit restart wt_panic wiredtiger library panic raw 1571050366143726 250570x7f6756b9f700 fileindex 8 5793834522867476723 wt wt_cursor search __wt_panic 520 process must exit restart wt_panic wiredtiger library panic2019 10 14t125246 143+0200 f conn47814 fatal assertion 50853 src mongo db storage wiredtiger wiredtiger_util cpp 4092019 10 14t125246 144+0200 f conn47814 aborting fassert failure2019 10 14t125246 222+0200 f conn47814 got signal 6 aborted noformat;2019-10-14T18:04:09.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-46769;migrate optparse argparse pythons optparse support subcommands argparse click enable need migrate look click whether would better option define new resmoke syntax argparse differences optparse argparse work syntax change add infrastructure resmoke run subcommands emphasis extensibility future attempt keep old resmoke syntax eventually deprecate might possible look legacy flag least print nice error messages make easy figure new syntax update usages resmoke system update documentation engineer outreach ensure users aware change;2020-03-10T18:42:39.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-50134;run microbenchmarks tests dsi depends tig 2471# move start server logic mongodb_setup script# use workload_setup test_control genny# use test_control run perf tests# dont write overrides yml use expansions yml call bootstrap # dont require special analysis yml file# call analysis via run dsi;2020-08-05T21:50:55.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-43153;expose pids spawned processes shell expose existing getrunningmongochildprocessids function shell native run hang analyzer sub processes error scenarios;2019-09-04T18:08:30.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-43254;hang analyzer shell integration uses child peer mongo processes done parallel pm 1546 work create new whatthefailure js javascript file class shell single static method called wtf areothermongosdoing opts name subject change shell existing hang_analyzer py script via runprogram shell built opts parameter following fields# pids optional array pids pass hang analyzer specified use pids child peer mongo processes obtained via testdata shell built ins added tickets # args optional array strings additional set args pass hang analyzer specified use reasonable defaults probably empty private parameter documented required backward compatible users never need use see set;2019-09-10T19:50:30.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-43253;resmoke passes pids peer mongo process testdata peer mongo process one started resmoke rather shell via _startmongoprogram particular test modify resmoke pass peer mongo process pids spawned mongo shell processes via existing testdata mechanism;2019-09-10T19:49:06.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-50314;expand task set live record buildvariant add next 4 tasks undodb variant explain cant added burn_in_tests concurrency suites concurrent fuzzer rollback fuzzer suites run rhel62 largewe make following effort run tests undo following approaches combined dont ensure suite run undo modify scope exclude failing test suites blacklist problematic tests time per suite e failing tests one patch build audit tags failing tests tags performance requirements exclude tests increase election timeout increase test task timeout reduce wt cache size reduce size cluster turn continueonfailure reduce number clients adjust data size run larger instances including adding new ec2 8x instance;2020-08-14T12:51:51.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-50316;resmokes undodb download subcommand download debug symbols configure udb find download extract debug symbols alongside users worktree given evergreen task url task id add udbinit set solib serach path debug symbol search path verify local gdbinit home directory worktree also sourced udb;2020-08-14T12:55:27.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-45182;platform support add ubi 7 testing 4 4 platform support add ubi 7 using rhel 7 build artifacts docker 19 03 container support;2019-12-16T20:10:31.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-45394;generate selected tasks patch using test mappings mongodb engineer able run selected_tests_gen task know run tasks given set test mappings returned selected tests service know tasks affected code changes run ac run selected_tests_gen task patch build runs tasks related file changes using test mappings model run buildscripts selected_tests py locally logs tasks steps executed engineers debug issues encountered;2019-10-01T21:37:09.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-44831;create fixture sigkill test case test case intended executed archiving begins resmoke subclass fixturetestcase send sigkill terminating fixtures processes;2019-11-25T21:29:27.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-46141;testing burn_in_tests requires multiversion installation run tests burn_in_tests python unittest buildscripts tests test_burn_in_tests py get following error mongo 4 2 installed codejava error test_one_task_one_test buildscripts tests test_burn_in_tests testcreatemultiversiongeneratetasksconfig traceback recent call last file users lydia stepanek src mongo buildscripts tests test_burn_in_tests py line 634 test_one_task_one_test evg_config tests_by_task evg_api gen_config file users lydia stepanek src mongo buildscripts burn_in_tests py line 665 create_multiversion_generate_tasks_config task_path_suffix file users lydia stepanek src mongo buildscripts evergreen_gen_multiversion_tests py line 142 get_exclude_files last_stable_commit_hash get_backports_required_last_stable_hash task_path_suffix file users lydia stepanek src mongo buildscripts evergreen_gen_multiversion_tests py line 96 get_backports_required_last_stable_hash shell_version check_output last_stable_shell_exec version decode utf 8 file users lydia stepanek pyenv versions 3 7 0 lib python3 7 subprocess py line 376 check_output kwargs stdout file users lydia stepanek pyenv versions 3 7 0 lib python3 7 subprocess py line 453 run popen popenargs kwargs process file users lydia stepanek pyenv versions 3 7 0 lib python3 7 subprocess py line 756 __init__ restore_signals start_new_session file users lydia stepanek pyenv versions 3 7 0 lib python3 7 subprocess py line 1499 _execute_child raise child_exception_type errno_num err_msg err_filename filenotfounderror errno 2 file directory data multiversion mongo 4 2 data multiversion mongo 4 2 ran 77 tests 52 378sfailed errors4 code understanding test requires developer run buildscripts evergreen_gen_multiversion_tests py locally order create necessary multiversion mocks test needs run separate tests separate file testing burn_in_tests also test multiversion setup since different things mongodb engineer able run burn_in_tests tests without needing multiversion related dependencies installed ac error occur running test_burn_in_tests py;2020-02-13T21:02:55.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-46267;bypass compile burn_in_tags broken bypass compile burn_in_tags working see patch build https evergreen mongodb com version 5e3d7a85c9ec4401bd159b1b things wrong rhel 62 compile also bypassed burn_in_tags needs use mainline compile artifacts trying use rhel 62 artifacts exist compile task longer generates shell file bypass compile attempting copy file compile_tg includes package task default add 25 minute task burn_in build variants fix things server engineer want bypass compile work burn_in_tags dont wait recompile artifacts already compiled ac burn_in_tags reused compiled artifacts even rhel 62 compile used bypass compile burn_in_tags run package generated build variants;2020-02-19T22:24:12.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-45544;burn_in_tests certain tests time regardless changed recently worked ticket modified create_index_background_unique_collmod js workload noticed even patch build variable name change test would cause burn_in_tests time possibly due test interfacing well way burn_in_tests run;2019-12-13T22:49:32.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-45644;reevaluate timeouts used burn_in_test burn_in_tests dynamically set timeouts https github com mongodb mongo blob b758eb90dd982460af62fbb61737f935dae9b828 buildscripts burn_in_tests py#l462 l519 based expected runtime test run however issues https evergreen mongodb com task mongodb_mongo_master_enterprise_rhel_62_64_bit_display_burn_in_tests_patch_e3dd9e80e38f3528bc50c3e1115c46a0687885fa_5e1602857742ae2ce7683e71_20_01_08_16_26_12##257b2522compare2522253a255b257b2522hash2522253a2522e3dd9e80e38f3528bc50c3e1115c46a0687885fa2522257d255d257d timeouts used investigate improve timeout calculations server engineer dont want burn_in_tests runs timeout issues spend time investigating non issues ac burn_in_timeouts adjusted generate less false timeouts;2020-01-17T20:02:22.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-33342;turn shared scons cache shipping builders enterprise linux 64 amazon amiubuntu1204ubuntu1404ubuntu1604amazonrhel62rhel70enterprise ubuntu1204 64enterprise ubuntu1404 64enterprise ubuntu1604 64enterprise suse12 64suse12enterprise suse11 64suse11enterprise debian71 64enterprise debian81 64debian71debian81;2018-02-14T21:23:38.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-32825;add infrastructure upgrade downgrade v2unique indexes addition new index format allows use v2 v2unique format initially would add gating variable select unique index format switch fcv deciding factor format used setting fcv4 2 cause unique indexes updated v2unique update content indexes fcv4 0 would create older v2 format indexes;2018-01-22T05:53:35.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-41048;address regression transaction performance storage stats collection appx 15 regression transaction performance due collection storage statistics individual operation transaction ticket tracks work work required resolve issue;2019-05-08T07:51:58.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-41096;continuousstepdown thread resmoke runner synchronize properly stepdown permitted file stepping file running workload teardowns fsm runners main thread removes stepdown permitted file https github com mongodb mongo blob 54cc4d76250719b247080c1195d4b672322d989e jstests concurrency fsm_libs resmoke_runner js#l166 waits stepping file present https github com mongodb mongo blob 54cc4d76250719b247080c1195d4b672322d989e jstests concurrency fsm_libs resmoke_runner js#l167 l172 continuous stepdown thread following checks stepdown permitted file https github com mongodb mongo blob 54cc4d76250719b247080c1195d4b672322d989e buildscripts resmokelib testing hooks stepdown py#l183 starting stepdown round https github com mongodb mongo blob 54cc4d76250719b247080c1195d4b672322d989e buildscripts resmokelib testing hooks stepdown py#l187 writes stepping file https github com mongodb mongo blob 54cc4d76250719b247080c1195d4b672322d989e buildscripts resmokelib testing hooks stepdown py#l440 completing stepdown round removes stepping file https github com mongodb mongo blob 54cc4d76250719b247080c1195d4b672322d989e buildscripts resmokelib testing hooks stepdown py#l444 allows following interleaving continuous stepdown thread checks stepdown permitted file sees fsm runner thread removes stepdown permitted file fsm runner thread checks stepping file doesnt see fsm runner thread starts executing workloads teardown continuous stepdown thread starts stepdown round cause workloads teardown thread get network error;2019-05-10T19:44:22.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-38243;test session storage statistics part slow operation report test session storage statistics part slow operation report create doc ticket;2018-11-26T03:45:57.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-32999;platform support remove debian 7 debian 7 going eol soon https wiki debian org lts opening ticket deprecate ultimately remove platform;2018-01-30T14:06:01.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-33341;turn shared cache builders build every commit note two list already testing server 33278enterprise rhel 62 64 bitenterprise ubuntu1604 clang 3 7 libcxxlinux 64 debugenterprise rhel 70 64 bitenterprise ubuntu dynamic 1604 64 bitubuntu1604 debug ubsan;2018-02-14T21:22:24.000+0000;Major - P3;4.0;1;2;6
SERVER;SERVER-33149;createindexes fails report error index created specified name createindexes command fails report error index created specified name index already exists keys different name;2018-02-06T22:05:07.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-40924;add evergreen task sanity check fuzzer parse javascript tests mutational jstestfuzz fuzzer uses acorn https github com acornjs acorn parse javascript tests abstract syntax tree weve cases server engineer attempts use newer javascript features supported version spidermonkey integrated mongo shell ecmascript version weve configured acorn parse javascript special handling features e g class may need done rewrite generated javascript avoid uncatchable syntaxerrors strict mode violations add lint_fuzzer_sanity_patch evergreen task enterprise rhel 6 2 required builder takes contents patch_files txt file generated get modified patch files function https github com mongodb mongo blob f7a4c4a9632f75996ed607ffc77e2a3cab15ea88 etc evergreen yml#l1038 l1057 calls npm run parse jstest lint_fuzzer_sanity_patch task declared requires section compile task scheduling compile task either implicitly explicitly implicitly schedules lint_fuzzer_sanity_patch task also add lint_fuzzer_sanity_all evergreen task since removed tig daily cron build variant calls npm run parse jstest contents jstests src mongo db modules enterprise jstests directories handle cannot guarantee commits mongodb mongo repository corresponding patch build guarantee evergreen schedules every commit mongodb mongo repository periodic task day checks javascript tests means dont need complicated logic like burn_in_tests task diff files changed since commit task last ran mainline;2019-04-30T22:21:36.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-40895;dynamically generate burn_in_tests tag validation certain build variants around ensure newly added modified tests tagged correctly variants copy flags used variants run compile burn_in_tests could use generate tasks dynamically build variants would make easier manage remove configuration evergreen mongo engineer want script generate burn_in_tests testing tagged variantsso doesnt explicit evergreen configuration one ac following build variants built dynamically removed etc evergreen yml enterprise rhel 6 2 majority read concern linux journal;2019-04-29T19:58:55.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-33146;mongod service source system wide environment variables stated documentation following kerberos tutorial https docs mongodb com manual tutorial control access mongodb kerberos authentication #krb5 ktname unable configure keytab environment variable rpm installed mongod service file https github com mongodb mongo blob master rpm mongod service source etc sysconfig mongodas workaround modified service file include code environmentkrb5_trace path krb5 logenvironmentkrb5_ktname path keytab code;2018-02-06T19:28:00.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-42156;install mongodb org tools 3 2 22 possible rhel 7 possible install mongodb org tools x86_64 03 2 22 1 el7 rhel codejava package arch version repository sizeupdating mongodb org x86_64 3 2 22 1 el7 mongodb org 3 2 5 8 k mongodb org mongos x86_64 3 2 22 1 el7 mongodb org 3 2 5 7 mongodb org server x86_64 3 2 22 1 el7 mongodb org 3 2 13 mongodb org shell x86_64 3 2 22 1 el7 mongodb org 3 2 6 8 mongodb org tools x86_64 3 2 22 1 el7 mongodb org 3 2 35 mtransaction summaryupgrade 5 packagestotal size 60 mtotal download size 35 mis ok n ydownloading packagesno presto metadata available mongodb org 3 2mongodb org tools 3 2 22 1 el7 failed eta https repo mongodb org yum redhat 7server mongodb org 3 2 x86_64 rpms mongodb org tools 3 2 22 1 el7 x86_64 rpm errno 14 curl#63 callback abortedtrying mirror error downloading packages mongodb org tools 3 2 22 1 el7 x86_64 errno 256 mirrors try code codejava mongodb org 3 2 namemongodb repositorybaseurlhttps repo mongodb org yum redhat releasever mongodb org 3 2 x86_64 gpgcheck1enabled1gpgkeyhttps www mongodb org static pgp server 3 2 asc code yum clean rm rf var cache yum fix issue exact problem server 39005 andserver 26564 matter use 7server 7 repository;2019-07-11T08:46:50.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-42144;remove use evergreen rest v1 api favor evergreen py bypass_compile_and_fetch_binaries py bypass_compile_and_fetch_binaries burn_in_tags_bypass_compile_and_fetch_binaries scripts call evergreen api get build ids given revision recently built python evergreen client added burn_in_tests buildscript consistent use evergreen py access evergreen api everywhere currently scripts call endpoint directlyhttps evergreen mongodb com rest v1 projects project revisions revisioninstead use evergreen py call v2 endpointhttps evergreen mongodb com rest v2 versions version mongo engineeri want bypass_compile_and_fetch_binaries burn_in_tags_bypass_compile_and_fetch_binaries use common evergreen client libraryso dont maintain code connect evergreen ac bypass_compile_and_fetch_binaries burn_in_tags_bypass_compile_and_fetch_binaries scripts directly call evergreen api related tickets https jira mongodb org browse server 40893 https jira mongodb org browse server 41940;2019-07-10T17:05:40.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-42140;de duplicate generate_compile_expansions build script following two files largely duplicated makes complicated edit maintain lead complications release branching processes around 4 2 files generate_compile_expansions pygenerate_compile_expansions_shared_cache pyi think important backport v4 2;2019-07-10T15:57:50.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-30204;create resmoke py hook drops databases without restarting cluster add support including background perpetual workloads background perpetual workloads done background threads resmoke py dont need special handling ensuring adequate documentation internal wiki also add new hook drop dbs collections every fsm test running db collection fsm modes pass db collection dropped new cleanup hook cleanupoption dropping certain dbs taken account needed new hook used place cleaneveryn avoid overhead spinning large cluster multiple times;2017-07-18T14:30:54.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-41309;create commit_queue task evergreen yml create task evergreen yml run commit queue use generate tasks generate tasks commit queue run server engineeri commit queue task runs part commit queueso changes want merge validated dag engineeri want commit queue generating taskso update tasks included commit queue without disruption ac new task commit_queue added evergreen generate tasks commit queue require commit_queue task generate lint task rhel 62 compile task required builders new tasks op mainline builds;2019-05-24T17:50:41.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-41227;update multiversion tests following 4 2 branch see server 35152 work done following 4 0 branch;2019-05-18T04:56:50.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-31535;platform support remove ubuntu 12 04 builds ubuntu 12 04 eol drop support 3 6;2017-10-12T21:01:50.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-31570;adjust mongobridge port allocations easier debugging mongobridge assigns ports sequentially use modular arithmetic figure bridges associated mongods assigned bridge port mongod port + 10000 would easy map;2017-10-13T20:37:13.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-21861;better timestamp object comparison mongo shell would great operators timestamp objects would work expected bsonwocompare used mean time even though end comparing member functions well long fields compared first fields;2015-12-11T15:35:39.000+0000;Major - P3;3.0;1;2;6
SERVER;SERVER-20056;log startup warning wiredtigercachesizegb 80 ram currently set wiredtigercachesizegb 100 available memory almost certainly lead problems perhaps startup check confirm wiredtigercachesizegb 80 available memory;2015-08-20T01:51:46.000+0000;Minor - P4;3.0;0;2;9
SERVER;SERVER-46687;run hang analyzer resmoke integrate archival note behind flag server 46691 remove test task times evergreen resmoke sent sigusr1 signal signal handler https github com mongodb mongo blob c553f6acd0ce7768d25a2dcdfa9358aa22b5ee55 buildscripts resmokelib sighandler py#l23 l32 resmoke modified call hang analyzer tests still running case test timeout one case task timeout multiple jobs complexity exists determining test pids tests started resmoke fixtures grab fixture pids tests using mongorunner start processes use process children https psutil readthedocs io en latest #psutil process children mongo shell process get list;2020-03-06T20:02:30.000+0000;Major - P3;7.0;1;2;6
SERVER;SERVER-46940;add suite mode burn_in_tests add mode burn_in_tests detect changes test suites run entire suite multiple times server engineer want changed test suites detected run burn_in_tests feel confident changes introduce reliability issues ac changes test suites cause entire suite run multiple times burn_in_tests new test suites run multiple times burn_in_tests see project scope https docs google com document 1 syoxkhm9sryhpxfcnuxedrcbfkmvb82vmdeqryuppg edit#headingh sye21yee6q34;2020-03-18T14:15:51.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-47126;clean dbpath downgrading arbiters multiversion tests multiversion tests mongo v4 4 waterfall page kept failing recent v4 2 wiredtiger drop withwt 5892 merge ofserver 47006 wt 5926 created address wiredtiger error captured do_upgrade_downgrade js latest commit build https evergreen mongodb com task mongodb_mongo_v4 4_enterprise_rhel_62_64_bit_display_multiversion_d7e99a30dc7fa02a971f3a8bb60c35e9f36d45c8_20_03_25_19_46_48 10+ tests failed task investigate understand image 2020 03 26 14 47 08 170 png width425 height172;2020-03-26T03:48:29.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-46167;enumerate remove storage related fcv 4 2 dependent code tests following tasks need completed branch 4 61 create list tickets code tests remove add 4 6 upgrade downgrade epic mark depended ticket assist upgrade downgrade team tracking progress insufficient amount work warrant multiple tickets work done ticket directly 2 complete necessary tickets promptly 3 create ticket identifying storage related generic upgrade downgrade references upgrade downgrade team update 4 2 dependent references removed;2020-02-14T15:58:56.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-46125;system_perf yml perf yml cleanups following server 46082 etc perf yml etc system_perf yml cleaned bit source dsienv sh removed setup dsi env sh removed shell exec blocks merged least perf yml perf yml diverged master 4 2 example mongod log ends different directory reconciled stable branches microbenchmarks two mongod log checks always green check files dsi unittest files pending future work dsi libanalysis code suggested solution rm r dsi bin tests ryan prefer also perf yml uses run dsi added couple set verbose troubleshooting bin analysis py could removed think think possibly related perf yml analysis py mongod log check isnt picking test start end times perf json workaround disabled election related checks analysis common yml bet boostrap production isnt actually needed perf yml addition team discussion consolidate setupcluster one dsi command read expansions yml instead sysperf currently write runtimesecret yml etc system_perf yml consider also renaming yaml file expansions match used dsi cluster infrastructure_provisioning setup mongodb_setup test test_control;2020-02-13T13:55:17.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-48395;extended stalls heavy insert workload working repro wt 6175 noticed extended stalls insert phase stalls png width100 stalls seem end start next checkpoint checkpoints disabled stalls lasted long 10 minutes stalls log reports operations took entire duration stall complete appear something page splits ftdc logs repro script attached repro creates two collections 5 gb 5 gb cache using 50 client threads machine 24 cpus;2020-05-25T14:48:19.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-47652;size _id index 60 bigger noticed 4 3 5 _id index size 60 bigger 4 3 4;2020-04-16T20:50:52.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-48909;fix bug sharded backup restore test loses record mongodb test suite seen failure sharded backup restore test doesnt see expected set records end test test run majority read concern test case code src mongo db modules enterprise jstests hot_backups sharded_last_stable_pit_backup_restore_simple js code stacktrace noformat assert src mongo shell assert js1519_verifydataiscausallyconsistent src mongo db modules enterprise jstests hot_backups libs sharded_backup_restore js15913_checkdataconsistency src mongo db modules enterprise jstests hot_backups libs sharded_backup_restore js21727shardedbackuprestoretest run src mongo db modules enterprise jstests hot_backups libs sharded_backup_restore js9609 src mongo db modules enterprise jstests hot_backups sharded_last_stable_pit_backup_restore_simple js2411 src mongo db modules enterprise jstests hot_backups sharded_last_stable_pit_backup_restore_simple js102 noformat logs noformat assert failed doc 100 missing noformat;2020-06-11T23:25:44.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-48960;drive powercycle setup commands expansions yml create python wrapper around remote_operations py takes evergreen expansions yml input calls remote_operations py throughout evergreen yml since wrapper script python call remoteoperations https github com mongodb mongo blob 31a64f0cc546f325e1773091562f15264049c2d1 buildscripts remote_operations py#l344 directly instead subprocess remote_operations py invoked different points evergreen yml cant combine 20 invocations single call wrapper instead want retain existing logic create subcommand wrapper contiguous group calls subcommand names mirror function names evergreen yml copy_ec2_monitor_files setup_ec2_intance tar_ec2_artifacts copy_ec2_artifacts gather_remote_event_logs gather_remote_mongo_coredumps copy_remote_mongo_coredumpsits likely calls grouped together based usage evergreen yml https github com mongodb mongo blob 31a64f0cc546f325e1773091562f15264049c2d1 etc evergreen yml#l3184 l3196 overlook part ticket ensure dont accidentally change behavior powercycle goal ticket set ssh_connection_options private_ip_address command line options every invocation python wrapper;2020-06-18T15:51:25.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-49096;replica set tests log pid port topology goal make convenient find mappings without look invocation process also include ports used mongobridge investigate whether log output resmoke rotates logs test;2020-06-25T14:28:33.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-50277;performance yaml cleanups pt 1 handful things make iteration bit easier really hard separate tickets staged way smaller prs first wherever possible minimize times backport best rip bandaid changes sys perf yamls master 4 4 # single f_run_dsi_workload evergreen function## mostly logic thats currently handful existing functions single function ## update param names match files e g cluster infrastructure_provisioning ## use conventional module locations possible## use conventional report output locations possible## remove cruft like dsienv sh run dsi invocations single line scripts# change order tasks functions keep compile dsi stuff separated # add genny task generated task changes microbenchmarks yamls master 4 4 # single f_run_microbenchmarks_workload evergreen function non genny workloads# single f_run_genny_workload evergreen function genny workloads# functions use conventional module locations possible# remove extraneous genny invocation think need call lamp without venv nonsense# tidy weird pkill logic# conventional locations genny dsi signal processing modules# change order tasks functions keep compile dsi non dsi based workloads separated changes dsi# update conventional paths above# make evergreen dsitest yml representative snapshot whats system_perf yml possible something similar perf yml# change documentation patch build without compilechanges genny# kill legacy task gen logic;2020-08-12T18:32:21.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-34555;migrate concurrency_sharded_with_stepdowns _and_balancer yml test suites run directly via resmoke py changes server 19630 make fsm workloads run individual test cases concurrency_sharded_causal_consistency _and_balancer yml concurrency_sharded_replication _and_balancer yml test suites concurrency_sharded_with_stepdowns _and_balancer yml test suites werent migrated new style parts setting environment run fsm workloads arent prepared primary csrs replica set shard stepped rather trying get retry logic correct e g handling manualinterventionrequired attempting shard collection https github com mongodb mongo blob 53c378f137bc4f577f6c92f71f47ede70ec93456 jstests libs override_methods mongos_manual_intervention_actions js instead delay resmoke pys stepdownthread actually runs fsm workload started sketch interactions _stepdownthread class https github com mongodb mongo blob 14d03a79f55d69ccdd27bb4a08906a4be5eb4a8e buildscripts resmokelib testing hooks stepdown py#l98 resmoke_runner js via filesystem described appropriate place runworkloads function codediff diff git jstests concurrency fsm_libs resmoke_runner js b jstests concurrency fsm_libs resmoke_runner jsindex d94fd4e31c af0afca2bb 100644 jstests concurrency fsm_libs resmoke_runner js+++ b jstests concurrency fsm_libs resmoke_runner js 104 6 +104 15 cleanup push workload + config setup function called safe stepdown+ thread start running main thread wont attempt interact cluster+ spawned worker threads finished + + todo call writefile stepdown_permitted function indicate the+ stepdown thread run unnecessary stepdown thread indicate that+ going start running eventually worker threads have+ started + since worker threads may running causal consistency enabled set initial clustertime initial operationtime sessions theyll create guaranteed observe effects workloads config setup function 128 17 +137 34 try start set worker threads threadmgr spawnall cluster executionoptions allow 20 threads fail allows workloads run underpowered test hosts threadmgr checkfailed 0 2 + try + start set worker threads + threadmgr spawnall cluster executionoptions + allow 20 threads fail allows workloads run on+ underpowered test hosts + threadmgr checkfailed 0 2 + finally + threads must joined destruction even presence of+ exceptions + errors push threadmgr joinall map + e new workloadfailure + e err e stack e tid foreground + e workloads join + finally threads must joined destruction even presence exceptions errors push threadmgr joinall map e new workloadfailure e err e stack e tid foreground + e workloads join + guaranteed stepdown thread isnt running isnt safe for+ config teardown function called signal resmoke py that+ stepdown thread stop running wait stepdown thread to+ signal stopped + + todo call removefile stepdown_permitted next time stepdown+ thread checks see keep running instead stops stepping+ cluster creates file named stepdown_off + + todo call ls function inside assert soon assert soonnoexcept + wait stepdown_off file created assert soonnoexcept + probably used related error attempting list the+ contents directory file created doesnt lead a+ javascript exception causes test fail finally call workloads teardown function teardowns completed check code;2018-04-18T21:42:35.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-34579;populate indexdetails mobile storage engine causes apitest_dbcollection js fail mongoe reproduce noformat python buildscriptsresmoke py suitescore mongod mongoe jstests core apitest_dbcollection js noformat noformat 2018 04 19t164424 586 0400 e query js error 0 0 equal a_1 exists indexdetails contains information ns test apttest_dbcollection size 33 count 1 avgobjsize 33 storagesize 33 capped false nindexes 2 indexdetails a_1 totalindexsize 22 indexsizes _id_ 16 a_1 6 ok 1 doassert src mongo shell assert js1814assert neq src mongo shell assert js2079checkindexdetails jstestscoreapitest_dbcollection js2171 jstestscoreapitest_dbcollection js2261 jstestscoreapitest_dbcollection js1512 noformat;2018-04-19T20:45:51.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-34598;add millisecond granularity wallclock times various metrics replsetgetstatuss optimes subdocument response replsetgetstatus includes subdocument named optimes contains optime various important oplog events including lastcommittedoptime readconcernmajorityoptime appliedoptime durableoptime mongodb 3 6 actual oplog entries corresponding optimes wall clock time milliseconds resolution recorded extend replsetgetstatus report wall clock times corresponding optimes usually get millisecond granularity measurements replication lag back back majority read modify write latencies work ticket split server 40080 server 40078 server 40353 server 34598 umbrella ticket work items;2018-04-20T19:46:13.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-35154;exceptions escape scopedthread fail test start scopedthread test throws exception exception swallowed error test even main test thread calls join returndata scopedthread lead subtle problems tests issues tests broken longer testing supposed one notices;2018-05-22T16:52:41.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-34779;check dbhash periodically new version replica_sets_jscore_passthrough yml test suite create another version jstests libs override_methods run_check_repl_dbhash js possibly replsettest#checkreplicateddatahashes doesnt require 1 flushing background indexes collmod operations 2 fsync+locking primary 3 call replsettest#awaitreplication background thread inside resmoke py run dbhash command periodically via hook file cause test marked failure data inconsistency detected;2018-05-01T20:56:01.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-33340;turn shared cache non shipping non push builders originally planned test two weeks may able shorten since began testing server 33278linux 64 repeated executionlinux 64 durofflinux 64 lsmenterprise rhel 62 64 bit inmemlinux 64 ephemeralfortestubuntu1404 rockdbubuntu1604 debug asanubuntu1604 asanenterprise rhel 62 64 bit coverage;2018-02-14T21:21:18.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-34456;add comprehensive testing keystring length decoding unique index key format would changed enable pit reads secondary result unique indexes could old new format keys upgrade reading keys mixed format index requires distinguishing old new format keys index keys stored keystring objects read keys correctly mixed format indexes function written decode keystring calculate size key ticket aims add comprehensive test new keystring length decoding function;2018-04-13T05:44:44.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-34451;mongodb installation windows error setup wizard ended prematurely instances users failing install mongodb windows e g win10 setup error message setup wizard ended prematurely general solution seems uncheck mongodb compass installation likely caused one firewall antivirus blocking access https compass mongodb com api v2 download latest server access internet powershell execution policy set executionpolicy https docs microsoft com en us powershell module microsoft powershell security set executionpolicyviewpowershell 6 preventing script executed;2018-04-12T22:43:11.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-34258;error mount_drives sh windows setfacl file directory error observed running mount_drives sh windows remote instance noformat 2018 04 02 122748 862 return code 0 command buildscripts remote_operations py verbose userhost administrator 10 122 9 230 sshconnectionoptions cygdrive c data mci d50ca8d39e058ec1000e48604476e076 powercycle pem gssapiauthenticationno checkhostipno stricthostkeycheckingno userknownhostsfile dev null connecttimeout20 connectionattempts20 retries 10 commands bash mount_drives sh ntfs l e u administratornone ls ld data db log df mount 2018 04 02 122748 862 warning permanently added 10 122 9 230 ecdsa list known hosts 2018 04 02 122748 862 looking drive mount data 2018 04 02 122748 862 looking drive mount data 2018 04 02 122748 862 looking drive mount data 2018 04 02 122748 862 looking drive mount data 2018 04 02 122748 862 found drive 2018 04 02 122748 862 junction created cdata ddata 2018 04 02 122748 862 setfacl file directory 2018 04 02 122748 862 ls cannot access data db file directory 2018 04 02 122748 862 ls cannot access log file directory 2018 04 02 122748 862 filesystem 1k blocks used available use mounted 2018 04 02 122748 862 c cygwin 67106812 49203748 17903064 74 2018 04 02 122748 862 104855548 95076 104760472 1 cygdrive 2018 04 02 122748 862 c cygwin bin usr bin type ntfs binary auto 2018 04 02 122748 862 c cygwin lib usr lib type ntfs binary auto 2018 04 02 122748 862 c cygwin type ntfs binary auto 2018 04 02 122748 862 c cygdrive c type ntfs binary posix0 user noumount auto 2018 04 02 122748 862 cygdrive type ntfs binary posix0 user noumount auto noformat;2018-04-02T20:13:00.000+0000;Minor - P4;5.0;0;2;9
SERVER;SERVER-34242;enable causal consistency concurrency_replication suite either enable causal consistency concurrency_replication create separate suite causal consistency enabled causal consistency would allow us run multi_statement_transaction_simple js varying writeconcerns since could use causal consistency ensure worker threads read writes performed setup;2018-03-30T22:07:24.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-33921;revisit mongo shell decides whether retry command mongo shell currently bases decision whether retry command command request txnnumber argument https github com mongodb mongo blob r3 7 3 src mongo shell session js#l335 l338 since find getmore command requests inside read read write transaction also contain txnnumber argument well need set explicit state mongo shells session indicate request perform retried codejavascript let numretries cmdobj hasownproperty txnnumber jstest options skipretryonnetworkerror 1 0 code;2018-03-15T23:09:18.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-34033;powercycle script fails complete evergreen yml evergreen script run powercycle test follows code run powercycle test command shell exec params working_dir src shell bash script set verbose set errexit set +o errexit python u pytests powertest py configfileconfig_file test_status aws_ec2 python buildscripts aws_ec2 py imageid instance_id mode status echo test completed ami ec2 instance instance_id status aws_ec2 exit test_status code shell exec script exits python u pytests powertest py configfileconfig_file irregardless exit code python appear evergreen issue seem due powertest py perhaps killing parent pid mistake;2018-03-21T14:30:27.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-34150;create passthrough clean shutdowns recoverable rollback work specifically make fastcount correct across clean shutdown passthrough clean shutdowns primaries secondaries could catch bugs around general data consistency;2018-03-27T19:18:15.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-38140;acquire database ix lock replicated collection drops temporary collections dropped step state transitions cannot take locks conflict prepared transactions;2018-11-14T22:33:59.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-38211;optimise duplicate check algorithm timestamp safe unique index timestamp safe unique index 4 2 incorporates duplicate key check prevention algorithm older unique index used prevent duplicate keys different way put algorithm timestamp safe linkbench load_node_bulk shows performance penalty due check ticket tracks effort optimising algorithm get performance back;2018-11-20T02:38:04.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-38225;implement constant time fast count biggie se currently numrecords recordstore method takes time proportional number documents making test runs extremely slow;2018-11-21T16:30:07.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-38239;define implement getoperationstatistics storage interface define storage interface getoperationstatistics method implement interface wiredtiger storage engine suggestion 1 storage interface could recoveryunitgetoperationstatistics bool reset 2 wiredtiger method could wiredtigerrecoveryunitgetoperationstatistics bool reset wiredtiger implementation open session statistics cursor fetches statistics wiredtiger session returns bson object whether return bson object statistics zero need discussed ny;2018-11-26T03:21:07.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-38240;extend opdebug object support storage statistics add _boostoptionalbsonobj operationstoragestats_ provide setter method populate storage statistics extend opdebugappend opdebugreport use operationstoragestats report generation storage statistics;2018-11-26T03:29:07.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-38323;create index builds interface embedded version server indexbuildscoordinator managing index builds across replica set links networking threadpool run index builds embedded server cannot link networking code use threadpools therefore must make simple class builds indexes via indexbuildsmanager need asynchronous threads embedded server effectively standalone without networking asynchronously running threads havent looked whether possible make separate class link embedded inheritance necessary necessitating splitting existing indexbuildscoordinator interface implementation id guess inheritance necessary since commands standalone library probably included greater repl inclusive libraries shims also potential tool havent explored idea either;2018-11-29T21:15:48.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-38378;hybrid builds yield locks check interrupts draining background writes indexbuildinterceptordrainwritesintoindex https github com mongodb mongo blob ce4649cbe2f15fcd40b7b292090c3ab185b4c59f src mongo db index index_build_interceptor cpp#l54 call checkforinterrupt every iteration additionally yield locks committing batch;2018-12-03T21:46:40.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-38396;improve indexbuildscoordinator unit testing made interface two implementations server 38323 added embedded implementation original unit test tests original implementation task cover implementations unit testing;2018-12-04T19:15:29.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-38467;renamecollection across databases require uninterruptible database x lock cleaning temp collections rename collection across databases creates temporary collections case error drops temporary collections dropping temporary collections acquires database x lock destructor must succeed thread accessor temporary collections need take strong lock;2018-12-07T20:51:45.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-37770;platform support add community enterprise ubuntu 18 04 arm64 platform support add community ubuntu 18 04 arm64;2018-10-26T16:36:46.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-37664;add support resmoke py process management jasper https github com mongodb jasper library process management commands socket process management available service means 1 consolidate various implementations subprocess subprocess32 python packages mongo shells shell_utils_launcher cpp c++ code 2 allow tests interact cluster potentially destructive way #2 enables tools genny able run performance workloads measure latency operations restarting mongod mongos process make 497 exposed jasper curator binary;2018-10-19T13:42:47.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-37645;add parsing new index build fields index catalog entries probably upgrade parsing idl _update actually sounds like potential black hole given much pass around bson elsewhere index building layer _ defaults false memory absentruntwophaseindexbuild bool defaults scanning absent set scanning verifying committingbuildphase string defaults 1 absent versionofbuild integer default absent bool function say whether present buildconstraintviolationsfile string newwritesinterceptortable string pick field name seems suitable check design finalizing;2018-10-15T21:11:08.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-38478;remove uninterruptiblelockguard query yield restorelockstate used query yielding https github com mongodb mongo blob a66a5578d5b006cef85b16eac05c96b58c877ebe src mongo db query query_yield cpp#l92 transaction reaper https github com mongodb mongo blob a66a5578d5b006cef85b16eac05c96b58c877ebe src mongo db transaction_reaper cpp#l165 make sure dont conflict prepared transactions stepdown shutdown need guarantee restore ix locks restore locks wont conflict transactions;2018-12-07T22:47:20.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-37272;disable hybrid index builds fcv 4 0 interaction hybrid index builds prepared transactions see server 38588 hybrid index builds dependent two phase behavior simultaneous index builds enabled fcv 4 2 reason hybrid index builds disabled unless node fcv 4 2;2018-09-21T19:55:56.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-37368;systemctl start mongod fails rpm installed prefix mongodb rpm relocatable according code rpm qvip code however appears included mongod service reflect relocation still expects executable usr bin mongod service fails start editing mongod service updating execstart fixes issue;2018-09-28T09:51:38.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-37644;make createindexes command join already progress index builds depends server 37643 move index builds behind index build interface established server 37636 createindexes command check whether index es already built wait upon new waiting function must added index build interface appropriate error message returned commitquorum match progress index build indexes specs match identically single index builder note multiple indexes key pattern different collations https github com mongodb mongo blob 9f363b489585124afa1e26412e19f6728763e1ad src mongo db catalog index_catalog_impl cpp#l749 l768 server 24239;2018-10-15T20:55:32.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-38667;notify indexbuildscoordinator replica set member stepup stepdown add step step hooks indexbuildscoordinator theres field mongod implementation indicates primary secondary state https github com mongodb mongo blob 5eca4a77da863bd4e68bf4eb7c2d0c920982f8b9 src mongo db index_builds_coordinator_mongod h#l137and interface functions setting primary secondary look like theyve implemented mongod embedded already https github com mongodb mongo blob 5eca4a77da863bd4e68bf4eb7c2d0c920982f8b9 src mongo db index_builds_coordinator h#l197 l198well need call state change functions https github com mongodb mongo blob 4d09b2e0a605aefd7adefda28e01e309bbf30883 src mongo db repl replication_coordinator_external_state_impl cpp#l483 looks like stepdown hooks go maybe https github com mongodb mongo blob 4d09b2e0a605aefd7adefda28e01e309bbf30883 src mongo db repl replication_coordinator_impl cpp#l2800 check someone repl find preferences new hook additions;2018-12-17T14:42:10.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-39239;two phase index builds secondaries wait commitindexbuild oplog entry committing secondarys index build thread spin loop finishing committing index secondary nothing spinning loop drop locks server 39458 add functionality loop periodically reacquiring lock running side table draining receipt commitindexbuild oplog entry secondary signal index build commit timestamp passed oplog entry oplog applier thread need drop locks allow index build take x lock index commit believe safe since c oplog entries applied serially dropping lock ok indexbuildscoordinatorcommitindexbuild need fetch future index build return oplog applier thread wait upon commit completion server 39533 done ticket hook abortindexbuild oplog entry alternatively index build secondary aborted spinning loop waiting commit case thats design consideration try act abort commit signals earlier index build secondaries spinning loop waits commit abort simple first iteration implementation well make fancier subsequent ticket;2019-01-28T22:25:50.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-39361;synchronise collecting storage engine stats shutdown erroneously calling storage engine part curopcompleteandlogoperation without holding locks means synchronization server shutdown rollbacktostable function call access statistics session need fix design stats gathering might need gather stats earlier part writeunitofwork destruction stats local put slow query log entry;2019-02-03T23:04:52.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-39377;make efficient hot backup work enablemajorityreadconcernfalse currently hot backup work server enablemajorityreadconcernfalse ticket modify mechanism enable testing variants;2019-02-05T16:14:28.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-39414;use task tags evergreen yml switch evergreen yml use task tags specifying tests run variant involve investigation determine good way selecting tags use switching etc evergreen yml use tags mongodb engineer want able specify build variants task run via tasks dont manually add task buildvariants run ac tasks run build variant change;2019-02-07T16:46:15.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-39428;record indexing errors simultaneous index builds later constraint checking hybrid index builds record duplicate key conflicts side table later resolution simultaneous index builds primary secondary need record conflicts case secondary becomes primary becomes responsible constraint checking today secondaries also ignore types indexing errors maintain idempotency guarantee errors resolved primary cannot send createindexes oplog entry unless simultaneous indexes secondaries cannot ignore indexing errors must also record conflicts side table secondary becomes primary needs guarantee indexing errors resolved;2019-02-07T22:27:53.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-39224;explore queryoptimizer3 js fails using indexbuildscoordinator fix test one thread repeatedly recreate collection indexes bulk insert bunch docs single index table scan second thread drop collection repeatedly check index table scan cursors get aborted dropcollection;2019-01-28T16:22:08.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-39219;insert performance mongodb 3 4 10 mongodb 4 0 5 mongostat insert700 million data mongodb 3 4 10 needs 4 5 hours upgrade mongodb 4 0 5 needs 6 5 hours time goes insert data need time check setting improve performance mongodb 3 4 10 cache dirty 6 mongodb 4 0 5 cache dirty 20 install mongodb default setting disable numa related content attachments thanks lot;2019-01-28T09:42:50.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-39160;test initial flow control poc required testing project work ticket produce graphs results running required workloads initial sleep based poc flow control mechanism graphs compared corresponding graphs pocs;2019-01-23T19:59:33.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-38735;extended stalls cache pressure attached script taken another ticket creates cache pressure primary lagging secondary isnt ideal condition storage engine appears 3 6 significantly better workload 4 0stalls png width100 3 6 workload completed significantly faster 4 0 extended total stalls 80s whereas worst 3 6 tests 8s appears 4 0 2 may little worse 4 0 0 although erratic performance makes data noisy much longer runs would probably needed see real differenceftdc data 9 stack samples taken one stalls attached couple top stacks counts 9 samples one application threads evicting data threads waiting code 109 pthread_cond_timedwait glibc_2 3 2238 __wt_cond_wait_signal __wt_cache_eviction_worker __wt_txn_commit __session_commit_transaction mongowiredtigerrecoveryunit_txnclose mongowiredtigerrecoveryunit_commit mongowriteunitofworkcommit mongo anonymous namespace insertdocuments mongoperforminserts mongo anonymous namespace cmdinsertinvocationrunimpl mongo anonymous namespace writecommandinvocationbaserun mongo anonymous namespace invokeintransaction mongo anonymous namespace execcommanddatabase mongo anonymous namespace receivedcommands mongoserviceentrypointcommonhandlerequest mongoserviceentrypointmongodhandlerequest mongoservicestatemachine_processmessage mongoservicestatemachine_runnextinguard std_function_handler mongotransportserviceexecutorsynchronousschedule mongoservicestatemachine_schedulenextwithguard mongoservicestatemachine_sourcecallback mongoservicestatemachine_sourcemessage mongoservicestatemachine_runnextinguard std_function_handler std_function_handler mongo anonymous namespace runfunc start_thread333 clone109 15 __lll_lock_wait135 __gi___pthread_mutex_lock80 __split_internal_lock __wt_split_multi __wt_evict __evict_page __wt_cache_eviction_worker __wt_txn_commit __session_commit_transaction mongowiredtigerrecoveryunit_txnclose mongowiredtigerrecoveryunit_commit mongowriteunitofworkcommit mongo anonymous namespace insertdocuments mongoperforminserts mongo anonymous namespace cmdinsertinvocationrunimpl mongo anonymous namespace writecommandinvocationbaserun mongo anonymous namespace invokeintransaction mongo anonymous namespace execcommanddatabase mongo anonymous namespace receivedcommands mongoserviceentrypointcommonhandlerequest mongoserviceentrypointmongodhandlerequest mongoservicestatemachine_processmessage mongoservicestatemachine_runnextinguard std_function_handler mongotransportserviceexecutorsynchronousschedule mongoservicestatemachine_schedulenextwithguard mongoservicestatemachine_sourcecallback mongoservicestatemachine_sourcemessage mongoservicestatemachine_runnextinguard std_function_handler std_function_handler mongo anonymous namespace runfunc start_thread333 clone109 9 pwrite6481 __posix_file_write __block_write_off __wt_block_write __wt_bt_write __rec_split_write __wt_reconcile __wt_evict __evict_page __wt_cache_eviction_worker __wt_txn_commit __session_commit_transaction mongowiredtigerrecoveryunit_txnclose mongowiredtigerrecoveryunit_commit mongowriteunitofworkcommit mongo anonymous namespace insertdocuments mongoperforminserts mongo anonymous namespace cmdinsertinvocationrunimpl mongo anonymous namespace writecommandinvocationbaserun mongo anonymous namespace invokeintransaction mongo anonymous namespace execcommanddatabase mongo anonymous namespace receivedcommands mongoserviceentrypointcommonhandlerequest mongoserviceentrypointmongodhandlerequest mongoservicestatemachine_processmessage mongoservicestatemachine_runnextinguard std_function_handler mongotransportserviceexecutorsynchronousschedule mongoservicestatemachine_schedulenextwithguard mongoservicestatemachine_sourcecallback mongoservicestatemachine_sourcemessage mongoservicestatemachine_runnextinguard std_function_handler std_function_handler mongo anonymous namespace runfunc start_thread333 clone109 code;2018-09-25T15:18:13.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-38748;background indexes created applyops run command thread fatal assertion 50769 invalid replicated index build created via applyops;2018-12-21T20:18:58.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-38779;build mechanism periodically cleanup old wt sessions session cache way session cache maintained idle sessions keep accumulating session cache workload doesnt use idle sessions oldest sessions stay open forever cases sessions might hold resources inside wiredtiger cause problems eg dhandles never close wiredtiger ticket build mechanism around session cache cleanup old sessions idle long details linked tickets;2018-12-27T03:06:14.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-39004;introduce quota mechanism overflow file dont currently quota mechanism prevent wiredtigerlas wt growing eventually running disk space would help configuration place file reaches configured size reboot mongod process effectively clean wiredtigerlas wt file;2019-01-15T08:03:33.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-38562;implement indexbuildscoordinatorvotecommitindexbuilds consider moving clientsetlastoptosystemlastoptime https github com mongodb mongo blob 597b4748fc36210c61cf4d6c086d364013df740a src mongo db commands vote_commit_index_builds_command cpp#l77 l80 logic function logic flag must set memory index build whether proceed without voting end thread voting successfully finding flag set fact commitindexbuild build already reached committing phase set flag start new asynchronous thread commit else memory flag set index build discovers later bypasses voting proceeding straight commit necessary stalling commit thereby stalling replication secondary cannot permitted take long network call potentially take matter seconds presumably alternative would make votecommitindexbuild command sent secondary short enough timeout dont mind stalling replication amount time risky given determining reasonable time network replication latencies might impossible index build thread would exist finishing voting opposed waiting condition variable commitindexbuild signal replindexbuildstate currently expecting condition variable already set waiting used need change flag must also initialized correctly index build recovery depending persisted state;2018-12-12T14:57:45.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-39085;move secondary oplog application logic index creation indexbuildscoordinator secondary oplog application delegate index creation indexbuildscoordinator;2019-01-18T17:54:24.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-39086;move startup recovery index creation logic indexbuildscoordinator index creation startup recovery delegated indexbuildscoordinator;2019-01-18T17:55:51.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-39157;collect workloads test poc implementations flow control mechanisms workloads collected consist required test cases flow control project workloads may either scripts tests use sys perf framework;2019-01-23T19:24:01.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-39159;create poc hysteresis commit rate tracking flow control mechanism mechanism builds initial sleep based flow control poc tracks commit rate addition current replication lag adds hysteresis make sure commit rate settles modifying amount time operations spend sleeping;2019-01-23T19:37:23.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-39068;replication simultaneous index builds startindexbuild commitindexbuild oplog entries temporary command twophasecreateindexes already exists server 39066 sets opobserver oplog cpp wait server 37643 set builders indexbuildscoordinator manager set code path coordinator manager two phase index build twophasecreateindexes command call twophaseindexbuild https github com mongodb mongo blob e990d25622d96897d78e72b362db61f2a4f9d99c src mongo db repl_index_build_state h#l88 flag replindexbuildstate object set startindexbuild oplog entry optionally based coordinators twophaseindexbuild setting written wuow index catalog entry initialization write parallel oplog write commit seen https github com mongodb mongo blob e990d25622d96897d78e72b362db61f2a4f9d99c src mongo db catalog multi_index_block cpp#l664 l666 https github com mongodb mongo blob e990d25622d96897d78e72b362db61f2a4f9d99c src mongo db commands create_indexes cpp#l402 l406 startindexbuild oplog entry start index build think already hooked https github com mongodb mongo blob e990d25622d96897d78e72b362db61f2a4f9d99c src mongo db repl oplog cpp#l280 l292 inactive tested commitindexbuild oplog entry optionally swapped createindexes oplog entry currently written index commit based twophasecreateindexes setting secondaries dont anything receipt commitindexbuild leave implement separate patch;2019-01-17T17:51:40.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-36019;create script collect resource utilization android application script assume application already running device shouldnt concern application started e itll responsibility part mobile testing framework deals script run continuously collect resource utilization configurable frequency signaled exit define functions like start stop script also used library controlled programmatically cpu consumption python systrace py reference https developer android com studio command line systrace memory consumption adb shell dumpsys meminfo refence https developer android com studio command line dumpsys#meminfo battery consumption adb shell dumpsys batterystats reference https developer android com studio command line dumpsys#battery;2018-06-11T18:11:08.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-36058;create profiling template collect resource utilization ios application enabling profiling done directly device settings developer logging menus create profiling template https developer apple com library archive documentation developertools conceptual instrumentsuserguide profilingtemplates html captures desired resource utilization metrics also use wireless device profiling stream trace back host machine ios devices battery discharging application running cpu consumption https developer apple com library archive documentation developertools conceptual instrumentsuserguide measuringcpuuse html memory consumption https developer apple com library archive documentation developertools conceptual instrumentsuserguide monitoringmemoryusage html battery consumption https developer apple com library archive documentation developertools conceptual instrumentsuserguide measuringenergyimpact html;2018-06-26T05:28:17.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-35422;adapt check_uuids_consistent_across_cluster js resmoke fixtures checkuuidsconsistentacrosscluster hook called part shardingtests stop function equivalent version resmoke sharded clusters result concurrency sharding suites ported use resmoke fixtures hook longer runs adapt hook create new version works resmoke fixtures;2018-06-05T20:40:22.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-36076;create new resmoke py test suite running mongoebench desktop run mongoebench various json config files live src third_party mongo perf mongoebench directory vendored source tree part changes server 36069 involves creating new buildscripts resmokelib testing testcases mongoebench_test py test case executes mongoebench appropriate arguments example value benchmarkmintimesecs command line option forwarded time command line option mongoebench also involves creating new hook similar combinebenchmarkresults hook https github com mongodb mongo blob r4 0 0 buildscripts resmokelib testing hooks combine_benchmark_results py parses json stats file specified output command line option server 36073 mongoebench new hook accumulate benchmark results test cases run part test suite serialize json file taking name perfreportfile command line option used json send evergreen command display performance results test case also handle benchmarkrepetitions command line option python equivalent option forward mongoebench accumulate benchmark results multiple executions may find beneficial define separate test suites run subset test cases similar done performance evergreen project test cases run benchrun py https evergreen mongodb com build performance_linux_wt_standalone_80c7c825a44cf99b17e81f4233445c7ab1927706_18_07_11_01_45_09 avoid evergreen task run long time;2018-07-11T18:34:15.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-35473;mobile se fix writeconflictretry loop map reduce jstests fixes server 32997 still see issues map reduce jstests concurrency fsm_workloads concurrency concurrency_simultaneous test suites stay disabled mobile se waiting fixing map reduce validate ticket tracks work needed fix map reduce concurrency issues;2018-06-07T03:48:21.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-35537;create version benchrun used embedded makes possible use existing https github com mongodb mongo perf tests performance tests embedded likely get away creating separate executables mongo perf test case uses serviceentrypointembedded embeddedinitialize dbdirectclient instead dbclientconnection https github com mongodb mongo blob 5a1bdde940b6a91e1133b64ee5365ce595b23e3a src mongo shell bench cpp#l1363 perform operations note well also need remove split check function requires linking javascript engine;2018-06-11T19:42:20.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-36090;install_compass fails macos due ssl version noformat monkey101downloads mongodb osx x86_64 4 0 0 bin install_compasstraceback recent call last file mongodb osx x86_64 4 0 0 bin install_compass line 173 module download_and_install_compass file mongodb osx x86_64 4 0 0 bin install_compass line 157 download_and_install_compass pkg download_pkg link pkg_formatpkg_format file mongodb osx x86_64 4 0 0 bin install_compass line 58 download_pkg res urllib urlretrieve link filenametmpf 1 reporthookdownload_progress file system library frameworks python framework versions 2 7 lib python2 7 urllib py line 98 urlretrieve return opener retrieve url filename reporthook data file system library frameworks python framework versions 2 7 lib python2 7 urllib py line 245 retrieve fp self open url data file system library frameworks python framework versions 2 7 lib python2 7 urllib py line 213 open return getattr self name url file system library frameworks python framework versions 2 7 lib python2 7 urllib py line 443 open_https h endheaders data file system library frameworks python framework versions 2 7 lib python2 7 httplib py line 1049 endheaders self _send_output message_body file system library frameworks python framework versions 2 7 lib python2 7 httplib py line 893 _send_output self send msg file system library frameworks python framework versions 2 7 lib python2 7 httplib py line 855 send self connect file system library frameworks python framework versions 2 7 lib python2 7 httplib py line 1274 connect server_hostnameserver_hostname file system library frameworks python framework versions 2 7 lib python2 7 ssl py line 352 wrap_socket _contextself file system library frameworks python framework versions 2 7 lib python2 7 ssl py line 579 __init__ self do_handshake file system library frameworks python framework versions 2 7 lib python2 7 ssl py line 808 do_handshake self _sslobj do_handshake ioerror errno socket error ssl unsupported_protocol unsupported protocol _ssl c590 noformat link compass download behind load balancer disabled older tls versions couple possible solutions consider;2018-07-12T14:41:33.000+0000;Critical - P2;8.0;2;2;3
SERVER;SERVER-36615;add linux repo package testing steps server projects add chef recipes configure repos install mongod add inspec test kitchen configuration add logic push task test rebuild repos;2018-08-13T19:50:07.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-36162;powercycle ensure internal crash command executed remote host possible due ssh connection error remote command internally crash server never run powertest py script expects crash command fail ssh connection terminated however examine output crash command determine actually run remote host heres case remote command failed execute noformat 2018 07 15 161138 976 2018 07 15 201047 078 info crashing server 46 seconds 2018 07 15 161138 976 2018 07 15 201137 188 info inserting canary document x 1531685447 025 db power collection cycle 2018 07 15 161138 976 ssh serveralivecountmax10 serveraliveinterval6 stricthostkeycheckingno connecttimeout10 connectionattempts20 cygdrive c data mci 3ab7f95ff9a32d5ea1ad8ffe3e1a09fd powercycle pem gssapiauthenticationno checkhostipno stricthostkeycheckingno userknownhostsfile dev null connecttimeout10 connectionattempts20 10 122 5 210 bin bash c source venv_powercycle scripts activate python u powertest py remoteoperation sshuserhost 10 122 5 210 sshconnection cygdrive c data mci 3ab7f95ff9a32d5ea1ad8ffe3e1a09fd powercycle pem gssapiauthenticationno checkhostipno stricthostkeycheckingno userknownhostsfile dev null connecttimeout10 connectionattempts20 rsync rsyncexcludefiles diagnostic data metrics interim backuppathbefore log powercycle beforerecovery backuppathafter log powercycle afterrecovery validate local canary local docforcanary none seeddocnum 10000 crashoption notmyfault notmyfaultc64 exe accepteula crash 1 instanceid 093c2bc45b5317756 crashwaittime 45 jitterforcrashwaittime 5 numcrudclients 10 numfsmclients 10 rootdir log powercycle mongodb_mongo_v3 6_windows_64_2k8_ssl_powercycle_syncdelay_wt_f1bcba35cefd0c5c0402e32575327a77507ac03e_18_07_14_22_41_33 mongodbbindir log powercycle dbpath data db logpath log powercycle mongod log mongodusableports 20000 20001 mongodoptions setparameter enabletestcommands1 syncdelay 10 storageengine wiredtiger remotepython source venv_powercycle scripts activate python u crash_server 2018 07 15 161229 518 2018 07 15 201216 477 info connection timed banner exchange noformat;2018-07-17T15:38:31.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-39451;add recover stable timestamp logic startindexbuild abortindexbuild commitindexbuild entering rollback abort active index builds https github com mongodb mongo blob 6abbac58cc5b5f4b66b50ada20e70fdf96301571 src mongo db repl bgsync cpp#l635 rolling back add logic reconcilecatalogandidents https github com mongodb mongo blob c046a5896652acea84c9db1d9346a43b2745a37b src mongo db storage storage_engine_impl cpp#l324 restart unfinished two phase builds;2019-02-08T14:20:32.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-32883;enhanced fsm testing reading secondaries 1 change secondary_reads_passthrough yml test suite added part server 34384 use forcesyncsourcecandidate failpoint server parameter force secondary #2 sync secondary #1 2 add new version concurrency_replication yml test suite uses 5 node replica set secondary syncing succession e linear chain writeconcern w 1 readconcern level local afterclustertime readpreference mode secondary well also likely want make wrapper around mongo connection object primary specific secondary individual worker thread talks particular secondary time rather secondaries potentially never read quote think theres additional complexity want fsm worker thread reads different secondary well probably pin particular secondary similar round robin using multiple mongos processes seems like well want mongo connection object implemented javascript commands present list https github com mongodb mongo blob 6841ce738419923002958acc760e150769b6f615 jstests libs override_methods set_read_preference_secondary js#l10 l23 routed via direct connection secondary commands present list routed via direct connection primary think existing connection cache concurrency framework makes relatively straightforward direct connections nodes cluster quote creating wrapper around two separate mongo connection objects may also want change server 34383 implemented construct wrapper around secondarys connection connection cache instead creating replica set connection worker thread h6 original descriptionas part server 32606 turned testing tailing oplog secondaries including case chained replication light code paths secondary reads gotten quite different reads primaries passthrough test test behaviors related server 32606 big task part ticket;2018-01-24T20:32:07.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-33000;platform support add ubuntu 18 04 go backlog ubuntu 18 04 available soon ready add platform soon images;2017-12-12T20:40:31.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-33002;platform support add macos 10 13 high sierra 1 add image distro evergreen2 run test build3 communicate availability storage4 functional want put rotation 5 review performance open subsequent investigation ticket makespan substantially different;2018-01-30T14:21:41.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-16612;implicitly zeroed files wiredtiger problem implicit zeroing files kernel certain platforms see server 15369 details workaround put place issue mmapv1 files explicitly zero ns files purpose ticket determine areas wiredtiger similar vulnerabilities issue customer impact issue wiredtiger beyond advising customers avoid using wiredtiger platforms issue reasonably work around problem explicitly zeroing files rather relying kernels implicit zeroing;2014-12-19T20:33:42.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-29999;implement fsm workload scheduler concurrency_simultaneous task well want port scheduleworkloads function https github com mongodb mongo blob r3 7 7 jstests concurrency fsm_libs runner js#l148 l206 javascript python resmoke py control groups fsm workloads run together behavior around number subsets individual fsm workload part identical concurrency_simultaneous yml test suite today additionally specifying suitesconcurrency_simultaneous jstests concurrency fsm_workloads workloada js jstests concurrency fsm_workloads workloadb js run two fsm workloads together rather sequence say list files omitted numsubsets groups fsm workloads run list files present exactly 1 group fsm workloads run latter aims serve engineer wishes reproduce particular failure running group fsm workloads together;2017-07-06T13:43:41.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-32437;platform support add amazon linux 2 december 13th amazon released amazon linux 2 installation current package amzl fails noformat ec2 user ip 172 31 32 108 sudo yum install mongodb enterpriseloaded plugins langpacks update motdamzn2 core 2 0 kb 000000 https repo mongodb com yum redhat 2017 12 mongodb enterprise 3 6 x86_64 repodata repomd xml errno 14 https error 404 foundtrying mirror resolving dependencies running transaction check package mongodb enterprise x86_64 03 6 0 1 amzn1 installed processing dependency mongodb enterprise tools 3 6 0 package mongodb enterprise 3 6 0 1 amzn1 x86_64 processing dependency mongodb enterprise shell 3 6 0 package mongodb enterprise 3 6 0 1 amzn1 x86_64 processing dependency mongodb enterprise server 3 6 0 package mongodb enterprise 3 6 0 1 amzn1 x86_64 processing dependency mongodb enterprise mongos 3 6 0 package mongodb enterprise 3 6 0 1 amzn1 x86_64 running transaction check package mongodb enterprise mongos x86_64 03 6 0 1 amzn1 installed processing dependency libsasl2 2 64bit package mongodb enterprise mongos 3 6 0 1 amzn1 x86_64 package mongodb enterprise server x86_64 03 6 0 1 amzn1 installed processing dependency libsasl2 2 64bit package mongodb enterprise server 3 6 0 1 amzn1 x86_64 processing dependency libnetsnmpmibs 20 64bit package mongodb enterprise server 3 6 0 1 amzn1 x86_64 processing dependency libnetsnmphelpers 20 64bit package mongodb enterprise server 3 6 0 1 amzn1 x86_64 processing dependency libnetsnmpagent 20 64bit package mongodb enterprise server 3 6 0 1 amzn1 x86_64 processing dependency libnetsnmp 20 64bit package mongodb enterprise server 3 6 0 1 amzn1 x86_64 package mongodb enterprise shell x86_64 03 6 0 1 amzn1 installed processing dependency libsasl2 2 64bit package mongodb enterprise shell 3 6 0 1 amzn1 x86_64 package mongodb enterprise tools x86_64 03 6 0 1 amzn1 installed processing dependency libsasl2 2 64bit package mongodb enterprise tools 3 6 0 1 amzn1 x86_64 finished dependency resolutionerror package mongodb enterprise mongos 3 6 0 1 amzn1 x86_64 mongodb enterprise requires libsasl2 2 64bit error package mongodb enterprise shell 3 6 0 1 amzn1 x86_64 mongodb enterprise requires libsasl2 2 64bit error package mongodb enterprise server 3 6 0 1 amzn1 x86_64 mongodb enterprise requires libnetsnmpmibs 20 64bit error package mongodb enterprise tools 3 6 0 1 amzn1 x86_64 mongodb enterprise requires libsasl2 2 64bit error package mongodb enterprise server 3 6 0 1 amzn1 x86_64 mongodb enterprise requires libnetsnmpagent 20 64bit error package mongodb enterprise server 3 6 0 1 amzn1 x86_64 mongodb enterprise requires libnetsnmphelpers 20 64bit error package mongodb enterprise server 3 6 0 1 amzn1 x86_64 mongodb enterprise requires libnetsnmp 20 64bit error package mongodb enterprise server 3 6 0 1 amzn1 x86_64 mongodb enterprise requires libsasl2 2 64bit could try using skip broken work around problem could try running rpm va nofiles nodigest noformat guess missing dependencies could manually added still amazon linux 2 officially supported moment;2017-12-21T17:18:27.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-29446;sample stage could find non duplicate document using random cursor error originally reported server 20385 marked fixed 3 1 9 still able reproduce version 3 4 4;2017-06-05T15:38:57.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-26988;secondary delay causes large drop insert rate primary due cache full condition heavy insert load secondary delayed cache primary fills 100 operation rates drop heres run showing behavior primary secondary delayed due lag similar effect seen secondary intentionally delayed using slavedelay lagging png width100 e cache 95 full insert rate drops considerably possibly due application threads evictions f g h seem seem related checkpoints possibly also combination full cache rate pages walked eviction generally high 6k times rate pages actually evicted suggesting issue difficulty finding pages evict keep cache target levelsthe high rate pages walked eviction suggests connection server 22831 also showed symptom connection full cache however run 3 2 5 rc1 server 22831 fixed seems different issue test involved 3 2 5 rc1 2 node replica set 25 gb cache 100 gb oplog 5 threads inserting 800 byte documents 5 separate collections code seq 5 mongo eval x var i0 i800 i++ x + x docs var i0 i1000 i++ docs push xx ops op insert ns test c + doc docs res benchrun ops ops seconds 10000 parallel 1 donewait code;2016-11-10T21:58:01.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-28940;make resmoke fixture setup teardown testcases fixture setup teardown logs go logkeeper dont show evergreen sidebar assertions cant extracted without figuring logkeeper url task log since everything else logs logkeeper e test hooks testcase shows sidebar fixture events get spots well;2017-04-24T15:21:25.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-27016;mongod pid removed calling db shutdownserver preventing subsequent init start running mongod init service amazon linux v 3 2 10 matter stop mongod shutdownserver service stop next start get code error starting mongod var run mongodb mongod pid exists code rm pid file start annoying happen 3 2 1 please advise init changes apply fix;2016-11-14T07:03:58.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-39452;add rollback via refetch logic startindexbuild abortindexbuild commitindexbuild read relevant design documents sections details edge case handling;2019-02-08T14:20:57.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-39458;add continuous draining secondarys index build thread awaits commitindexbuild oplog entry secondary oplog application indexbuildscoordinator periodically drain side tables awaiting commitindexbuild abortindexbuild oplog entries primary;2019-02-08T16:09:36.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-42840;investigate test related sample stage could find non duplicate document sharded cluster take look linked test get better understanding failing higher frequency recently;2019-08-16T01:27:41.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-43674;mongodb crash got signal 11 segmentation fault good daymongodb node crashed got signal 11 segmentation fault traces blame wireshark although direction https jira mongodb org browse server 31236 looks familiar thank codejava sep 26 110808 opmc3 mongod 27022 133152 conn22428213 killcursors found 0 1sep 26 110808 opmc3 mongod 27022 133152 conn22428213 killcursors oddsportal system profile numyields0 locks global acquirecount r 2 database acquirecount r 1 acquirewaitcount r 1 timeacquiringmicros r 1104368 collection acquirecount r 1 1104mssep 26 110815 opmc3 mongod 27022 133152 conn22428213 invalid access address 0x88sep 26 110815 opmc3 mongod 27022 133152 conn22428213 got signal 11 segmentation fault 0x55caa3f91ff1 0x55caa3f91209 0x55caa3f91876 0x55caa3076cf1 0x7fbfb29a80c0 0x55caa28e7666 0x55caa28906c1 0x55caa27b3d67 0x55caa27afb05 0x55caa2d388f0 0x55caa2d389b1 0x55caa2d435c7 0x55caa2d43967 0x55caa2d17748 0x55caa2d19e7c 0x55caa2d1a9ed 0x55caa2d1ad98 0x55caa2980fc5 0x55caa298bfaa 0x55caa2987967 0x55caa298ada1 0x55caa388d7e2 0x55caa29867cf 0x55caa2988d15 0x55caa298960b 0x55caa29879ed 0x55caa298ada1 0x55caa388dd45 0x55caa3e4b5a4 0x7fbfb299e494 0x7fbfb26e0acf begin backtrace backtrace b55caa1d5a000 o2237ff1 s_zn5mongo15printstacktraceerso b55caa1d5a000 o2237209 b55caa1d5a000 o2237876 b55caa1d5a000 o131ccf1 b7fbfb2997000 o110c0 b55caa1d5a000 ob8d666 s__wt_btcur_reset b55caa1d5a000 ob366c1 b55caa1d5a000 oa59d67 s_zn5mongo17wiredtigersession13releasecursoremp11__wt_cursor b55caa1d5a000 oa55b05 s_zn5mongo35wiredtigerrecordstorestandardcursord0ev b55caa1d5a000 ofde8f0 s_zn5mongo14collectionscand1ev b55caa1d5a000 ofde9b1 s_zn5mongo14collectionscand0ev b55caa1d5a000 ofe95c7 s_zn5mongo12planexecutord1ev b55caa1d5a000 ofe9967 s_zn5mongo12planexecutor7deletercleps0_ b55caa1d5a000 ofbd748 s_zn5mongo12clientcursord1ev b55caa1d5a000 ofbfe7c s_zn5mongo13cursormanager11erasecursorepns_16operationcontextexb b55caa1d5a000 ofc09ed b55caa1d5a000 ofc0d98 s_zn5mongo13cursormanager29erasecursorglobalifauthorizedepns_16operationcontexteipkc b55caa1d5a000 oc26fc5 s_zn5mongo23serviceentrypointmongod13handlerequestepns_16operationcontexterkns_7messagee b55caa1d5a000 oc31faa s_zn5mongo19servicestatemachine15_processmessageens0_11threadguarde b55caa1d5a000 oc2d967 s_zn5mongo19servicestatemachine15_runnextinguardens0_11threadguarde b55caa1d5a000 oc30da1 b55caa1d5a000 o1b337e2 s_zn5mongo9transport26serviceexecutorsynchronous8scheduleest8functionifvveens0_15serviceexecutor13scheduleflagsens0_23serviceexecutortasknamee b55caa1d5a000 oc2c7cf s_zn5mongo19servicestatemachine22_schedulenextwithguardens0_11threadguardens_9transport15serviceexecutor13scheduleflagsens2_23serviceexecutortasknameens0_9ownershipe b55caa1d5a000 oc2ed15 s_zn5mongo19servicestatemachine15_sourcecallbackens_6statuse b55caa1d5a000 oc2f60b s_zn5mongo19servicestatemachine14_sourcemessageens0_11threadguarde b55caa1d5a000 oc2d9ed s_zn5mongo19servicestatemachine15_runnextinguardens0_11threadguarde b55caa1d5a000 oc30da1 b55caa1d5a000 o1b33d45 b55caa1d5a000 o20f15a4 b7fbfb2997000 o7494 b7fbfb25f8000 oe8acf sclone processinfo mongodbversion 3 6 7 gitversion 2628472127e9f1826e02c665c1d93880a204075e compiledmodules uname sysname linux release 4 4 112 ls 3 version #3 smp mon feb 12 145637 cet 2018 machine x86_64 somap b 55caa1d5a000 elftype 3 buildid aa6ec882cef443287fb9c7873c7dec2643ed4ba9 b 7ffd85d79000 path linux vdso 1 elftype 3 buildid debf60fc8d64715b7432b531f79998366ab94138 b 7fbfb3bda000 path lib x86_64 linux gnu libresolv 2 elftype 3 buildid 713d47d5f599289c0a91ade8f0122b2b4aa78b2e b 7fbfb3747000 path usr lib x86_64 linux gnu libcrypto 1 1 elftype 3 buildid 2cfe882a331d7857e9ce1b5de3255e6da76ef899 b 7fbfb34db000 path usr lib x86_64 linux gnu libssl 1 1 elftype 3 buildid e2aa3b39763d943f56b3bd05c8e36e639ba95e12 b 7fbfb32d7000 path lib x86_64 linux gnu libdl 2 elftype 3 buildid b895f0831f623c5f23603401d4069f9f94c24761 b 7fbfb30cf000 path lib x86_64 linux gnu librt 1 elftype 3 buildid 5d83e0642e645026dbb11f89f7df7106bd821495 b 7fbfb2dcb000 path lib x86_64 linux gnu libm 6 elftype 3 buildid 1b95e3a8b8788b07e4f59ee69b1877f9deb42033 b 7fbfb2bb4000 path lib x86_64 linux gnu libgcc_s 1 elftype 3 buildid 51ad5fd294cd6c813bed40717347a53434b80b7a b 7fbfb2997000 path lib x86_64 linux gnu libpthread 0 elftype 3 buildid 4285cd3158dde596765c747ae210ab6cbd258b22 b 7fbfb25f8000 path lib x86_64 linux gnu libc 6 elftype 3 buildid aa889e26a70f98fa8d230d088f7cc5bf43573163 b 7fbfb3df1000 path lib64 ld linux x86 64 2 elftype 3 buildid 263f909dbe11a66f7c6233e3ff0521148d9f8370 mongod _zn5mongo15printstacktraceerso+0x41 0x55caa3f91ff1 mongod +0x2237209 0x55caa3f91209 mongod +0x2237876 0x55caa3f91876 mongod +0x131ccf1 0x55caa3076cf1 libpthread 0 +0x110c0 0x7fbfb29a80c0 mongod __wt_btcur_reset+0x126 0x55caa28e7666 mongod +0xb366c1 0x55caa28906c1 mongod _zn5mongo17wiredtigersession13releasecursoremp11__wt_cursor+0x47 0x55caa27b3d67 mongod _zn5mongo35wiredtigerrecordstorestandardcursord0ev+0x25 0x55caa27afb05 mongod _zn5mongo14collectionscand1ev+0x30 0x55caa2d388f0 mongod _zn5mongo14collectionscand0ev+0x11 0x55caa2d389b1 mongod _zn5mongo12planexecutord1ev+0x1a7 0x55caa2d435c7 mongod _zn5mongo12planexecutor7deletercleps0_+0x27 0x55caa2d43967 mongod _zn5mongo12clientcursord1ev+0x58 0x55caa2d17748 mongod _zn5mongo13cursormanager11erasecursorepns_16operationcontextexb+0x12c 0x55caa2d19e7c mongod +0xfc09ed 0x55caa2d1a9ed mongod _zn5mongo13cursormanager29erasecursorglobalifauthorizedepns_16operationcontexteipkc+0x48 0x55caa2d1ad98 mongod _zn5mongo23serviceentrypointmongod13handlerequestepns_16operationcontexterkns_7messagee+0x1805 0x55caa2980fc5 mongod _zn5mongo19servicestatemachine15_processmessageens0_11threadguarde+0xba 0x55caa298bfaa mongod _zn5mongo19servicestatemachine15_runnextinguardens0_11threadguarde+0x97 0x55caa2987967 mongod +0xc30da1 0x55caa298ada1 mongod _zn5mongo9transport26serviceexecutorsynchronous8scheduleest8functionifvveens0_15serviceexecutor13scheduleflagsens0_23serviceexecutortasknamee+0x1a2 0x55caa388d7e2 mongod _zn5mongo19servicestatemachine22_schedulenextwithguardens0_11threadguardens_9transport15serviceexecutor13scheduleflagsens2_23serviceexecutortasknameens0_9ownershipe+0x15f 0x55caa29867cf mongod _zn5mongo19servicestatemachine15_sourcecallbackens_6statuse+0xaf5 0x55caa2988d15 mongod _zn5mongo19servicestatemachine14_sourcemessageens0_11threadguarde+0x23b 0x55caa298960b mongod _zn5mongo19servicestatemachine15_runnextinguardens0_11threadguarde+0x11d 0x55caa29879ed mongod +0xc30da1 0x55caa298ada1 mongod +0x1b33d45 0x55caa388dd45 mongod +0x20f15a4 0x55caa3e4b5a4 libpthread 0 +0x7494 0x7fbfb299e494 libc 6 clone+0x3f 0x7fbfb26e0acf end backtrace code;2019-09-27T12:52:16.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-41926;enumerate remove storage related featurecompatibilityversion 4 0 dependent code tests following tasks need completed1 create list tickets code tests remove add 4 4 upgrade downgrade epic mark depended ticket assist upgrade downgrade team tracking progress insufficient amount work warrant multiple tickets work done ticket directly 2 complete necessary tickets promptly 3 create ticket identifying storage related generic upgrade downgrade references upgrade downgrade team update 4 0 dependent references removed;2019-06-26T11:36:36.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-44070;platform support add community enterprise ubuntu 20 04 x64 platform support add community enterprise ubuntu 20 04 x64;2019-10-17T17:55:42.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-39517;use collection mode_x index creation drop add tests creating deleting indexes one collection doesnt block open transactions different collection database;2019-02-11T20:55:49.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-39934;curopcompleteandlogoperation hang waiting global lock logging command either slow forced logging enabled curopcompleteandlogoperation attempts take global lock obtain storage statistics something else global x lock enqueued global x lock lock acquisition stall behind operation introduces undesirable dependency global lock otherwise lock free operations currentop give acquisition short deadline elide storage stats available;2019-03-01T22:08:08.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-40703;resource leakage + slowness creating deleting thousands dbs creating new db + collections + indexes deleting becomes slow thousands cycles mongo process memory keeps growing although dbs deleted single db present given time point cycle become slower seems around memory consumption 3 5gb stopping script mongo process keeps consuming large amount cpu memory forever script run memory get even higher also cycle time see simple script reproduce issue https github com assaf xm mongodb create drop dbs blob master test js results https github com assaf xm mongodb create drop dbs blob master 3 6 11 memory png https github com assaf xm mongodb create drop dbs blob master 3 6 11 regular png start timings fast 201ms2019 04 17t121125 645z start 3 2019 04 17t121125 654z connected 3 2019 04 17t121125 655z collection 0 2019 04 17t121125 672z collection 1 2019 04 17t121125 690z collection 2 2019 04 17t121125 706z collection 3 2019 04 17t121125 726z collection 4 2019 04 17t121125 742z collection 5 2019 04 17t121125 760z collection 6 2019 04 17t121125 779z collection 7 2019 04 17t121125 796z collection 8 2019 04 17t121125 812z collection 9 2019 04 17t121125 828z drop collection 0 2019 04 17t121125 830z drop collection 1 2019 04 17t121125 832z drop collection 2 2019 04 17t121125 833z drop collection 3 2019 04 17t121125 835z drop collection 4 2019 04 17t121125 836z drop collection 5 2019 04 17t121125 838z drop collection 6 2019 04 17t121125 840z drop collection 7 2019 04 17t121125 841z drop collection 8 2019 04 17t121125 843z drop collection 9 2019 04 17t121125 845z drop 3 2019 04 17t121125 846z finish 3 201but 8800 cycles db operations much slower 685ms2019 04 17t124120 397z start 8800 2019 04 17t124120 402z connected 8800 2019 04 17t124120 402z collection 0 2019 04 17t124120 486z collection 1 2019 04 17t124120 557z collection 2 2019 04 17t124120 642z collection 3 2019 04 17t124120 716z collection 4 2019 04 17t124120 773z collection 5 2019 04 17t124120 831z collection 6 2019 04 17t124120 877z collection 7 2019 04 17t124120 916z collection 8 2019 04 17t124120 959z collection 9 2019 04 17t124120 999z drop collection 0 2019 04 17t124121 003z drop collection 1 2019 04 17t124121 009z drop collection 2 2019 04 17t124121 018z drop collection 3 2019 04 17t124121 027z drop collection 4 2019 04 17t124121 036z drop collection 5 2019 04 17t124121 042z drop collection 6 2019 04 17t124121 052z drop collection 7 2019 04 17t124121 061z drop collection 8 2019 04 17t124121 071z drop collection 9 2019 04 17t124121 080z drop 8800 2019 04 17t124121 082z finish 8800 685;2019-04-17T21:11:42.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-39514;remove kvdatabasecatalogentrybasecollectionmap class make uuidcatalog collectioncatalogentry objects instead;2019-02-11T20:50:36.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-39515;remove kvdatabasecatalogentry kvdatabasecatalogentrybase databasecatalogentry classes change kvstoreenginedbmap set database names move code removed classes kvcatalog;2019-02-11T20:52:04.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-39982;modify storagetimestamptestsinitialsyncsetindexmultikeyoninsert build indexes background recent weeks test storagetimestamptestsinitialsyncsetindexmultikeyoninsert failing intermittently following invariant message noformat repl index builder 1 invariant failure mysnapshot mysnapshot committimestamp commit timestamp timestamp 1 87 cannot older current read timestamp timestamp 1 92 src mongo db catalog index_timestamp_helper cpp 88 noformat workaround proposed server 39981 however investigate test case pass consistently background hybrid index builds determine underlying issue index build machinery;2019-03-06T14:32:59.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-39516;use database mode_ix lock creating collections remove database mode_x lock collection creation add tests verify collection creation longer blocks open transactions accessing different collections database;2019-02-11T20:54:51.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-40040;migrate non os bound builds images use enhanced networking capable instance types many builders arent necessarily bound specific distro coverage builder perfect example dont ship builds makes difference runs rhel 6 2 ubuntu 18 04 many older images cannot take advantage enhanced networking available newer instance types builders doesnt actually matter linux windows version build migrate run images underlying instance uses much faster enhanced networking ebs storage;2019-03-08T17:09:24.000+0000;Major - P3;7.0;1;2;6
SERVER;SERVER-39507;remove databasecollectionmap use uuidcatalog instead collection objects must owned uuidcatalog;2019-02-11T20:41:27.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-39705;indexbuildinterceptor faithfully preserve multikey document generates keys indexbuildinterceptor makes incorrect assumption document must generate keys https github com mongodb mongo blob 04882fa7f5210cfb14918ecddbbc5acbd88e86b6 src mongo db index index_build_interceptor cpp#l384 l386 considered multikey https github com mongodb mongo blob 04882fa7f5210cfb14918ecddbbc5acbd88e86b6 src mongo db index index_build_interceptor cpp#l389 l397 particular sparse compound indexes https docs mongodb com manual core index sparse #sparse compound indexes may generate keys consider document multikey 1 mongodbs validation code strict compare indexs multikey multikey output every document https github com mongodb mongo blob 04882fa7f5210cfb14918ecddbbc5acbd88e86b6 src mongo db catalog private record_store_validate_adaptor cpp#l110 l117 1 consider index 1 b 2dsphere 2dsphere makes index auto sparse consider document _id 1 1 2 b omitted sparse ness result index keys generated however array field compound index considered multikey;2019-02-21T02:44:36.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-39519;use collection mode_x locks view creation drop test creating dropping views block open transactions collections database;2019-02-11T20:59:21.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-39504;database use uuidcatalog name lookup requires uuidcatalog maintains extra map;2019-02-11T20:38:15.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-44072;platform support add enterprise rhel 8 ppc platform support add enterprise rhel 8 ppc;2019-10-17T17:56:53.000+0000;Major - P3;5.0;1;2;6
SERVER;SERVER-39654;storage statistics logged slow transaction slow operations extract operation statistics storage engine report part logging profiling slow transaction storage statistics meant cumulative operations performed transaction moment get storage information slow transaction looks like collecting storage stats correct place might collecting late past point metrics transaction get accumulated;2019-02-19T04:31:27.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-39518;use collection mode_x locks collection rename ensure ordering canonical resourceid ordering collection locks avoid deadlock check renaming collection block open transactions different collections database;2019-02-11T20:58:06.000+0000;Major - P3;8.0;1;2;6
SERVER;SERVER-32997;mobile se design implement multi reader single writer concurrency server 32675 resolved mobile ses major issues concurrency still see tests hitting either write conflicts db locked tests need investigated fix made accordingly ticket track effort;2018-01-30T06:27:53.000+0000;Major - P3;13.0;1;2;6
SERVER;SERVER-33926;unattended installation fails deselecting compass h3 summary unattended installation documentation explicitly mention compass installed using addlocalall unattended installation appear work unless compass selected h3 details install windows page mongodb manual provides section describing unattended installations https docs mongodb com manual tutorial install mongodb windows #unattended installation using addlocalall installer downloads installs compass want compass uninstalled compass mongo ce installing using addlocalserver client causes installer fail roll back entire installation noformat msi 68e0 101135725 executing op actionstart nameinstallcompassscript descriptioninstalling mongodb compass may take minutes msi 68e0 101135738 executing op customactionschedule actioninstallcompassscript actiontype1025 sourcebinarydata targetwixquietexec64 customactiondatacwindowssystem32windowspowershellv1 0powershell exe nologo noprofile noninteractive executionpolicy bypass command exit error count msi 687c 101135759 invoking remote custom action dll cwindowsinstallermsi3154 tmp entrypoint wixquietexec64msi 68a0 101135760 generating random cookie msi 68a0 101135769 created custom action server pid 7948 0x1f0c msi 6878 101135826 running service msi 6878 101135830 hello im 32bit impersonated custom action server wixquietexec64 expression pipeline element produced object valid must result command wixquietexec64 name script block commandinfo object wixquietexec64 line1 char3wixquietexec64 + exit error count wixquietexec64 + wixquietexec64 + categoryinfo invalidoperation string runtimeexceptionwixquietexec64 + fullyqualifiederrorid badexpressionwixquietexec64 wixquietexec64 error 0x80070001 command line returned error wixquietexec64 error 0x80070001 quietexec64 failedwixquietexec64 error 0x80070001 failed execcommon methodcustomaction installcompassscript returned actual error code 1603 note may 100 accurate translation happened inside sandbox msi 68e0 101136320 note 1 2265 2 3 2147287035msi 68e0 101136322 user policy value disablerollback 0msi 68e0 101136322 machine policy value disablerollback 0action ended 101136 installfinalize return value 3 noformat;2018-03-16T15:12:07.000+0000;Major - P3;13.0;1;2;6
SERVER;SERVER-38477;index build lock acquisitions interruptible index build avoids interruptions several places especially background index build conflict prepared transactions stepdown shutdown either make index build interruptible use ix locks instead x locks heres list occurrences uninterruptiblelockguard index build src mongo db catalog multi_index_block_impl cpp156 https github com mongodb mongo blob 86fab3ee0e1570c6743b314fddc0af418bba9015 src mongo db catalog multi_index_block_impl cpp#l156 src mongo db commands create_indexes cpp325 https github com mongodb mongo blob 86fab3ee0e1570c6743b314fddc0af418bba9015 src mongo db commands create_indexes cpp#l325 src mongo db index_builder cpp195 https github com mongodb mongo blob 86fab3ee0e1570c6743b314fddc0af418bba9015 src mongo db index_builder cpp#l195 src mongo db index_builder cpp299 https github com mongodb mongo blob 86fab3ee0e1570c6743b314fddc0af418bba9015 src mongo db index_builder cpp#l299;2018-12-07T22:39:36.000+0000;Major - P3;13.0;1;2;6
SERVER;SERVER-37639;add checkifcommitquorumissatisfied replication interface check whether given commit quorum satisfied given set commit ready members simultaneous index build commitquorum setting set user via createindexes dictate many members replica set must ready commit primary commit index index build track members ready must check whether commitquorum satisfied commitquorum type takes settings writeconcern w integer number reflecting number replica set members majority replica tag set function take list hostport pairs using uniquely identify replica set members along commitquorum return whether quorum satisfied leveraging writeconcern checking machinery topology coordinators member config probably error quorum never satisfied;2018-10-15T20:26:24.000+0000;Major - P3;13.0;1;2;6
SERVER;SERVER-39087;move initial sync index creation logic indexbuildscoordinator index creation initial sync delegated indexbuildscoordinator;2019-01-18T17:57:00.000+0000;Major - P3;13.0;1;2;6
SERVER;SERVER-39156;create poc ticket admission based flow control mechanism poc run required testing flow control project results compared potential flow control mechanisms;2019-01-23T19:13:03.000+0000;Major - P3;13.0;1;2;6
SERVER;SERVER-39520;use collection mode_x locks collection drops ensure places rely database intent locks ensure collection pointer renames valid check collection drop doesnt block open transactions involving collections database;2019-02-11T21:00:40.000+0000;Major - P3;13.0;1;2;6
SERVER;SERVER-3748;add init scripts mongos configsvr packages although possible automatigically bring mongos configsvr processes without manual configuration could provide init scripts skeleton conf files packages;2011-09-01T18:58:50.000+0000;Major - P3;13.0;1;2;6
SERVER;SERVER-37643;add createindexes command logic index build interface index builder interface established established server 37636 ticket add threadpool move instances multiindexblock index builder class place behind interface running threadpool able register index builds via interface wait upon condition variable hear back status result keep mind server 37644 make index builds joinable via createindexes command condition variable setup must multiple waiters hear back result maybe interface internal helper function get something wait upon status result;2018-10-15T20:46:37.000+0000;Major - P3;20.0;1;2;6
SERVER;SERVER-37270;remove foreground index build functionality work cause backgroundtrue index option ignored thus making index builds run new hybrid index build path;2018-09-21T19:53:06.000+0000;Major - P3;20.0;1;2;6
SERVER;SERVER-41150;create schema forwarding walker need create walker return encryption type arbitrary expression ambiguous wed might complex error state throwing exception acceptable first draft walker return optionalencryptionmetadata begin handling object literals required;2019-05-14T21:03:01.000+0000;Major - P3;42.0;1;2;6
